var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/Logger.html",[0,0.987,1,0.987]],["body/classes/Logger.html",[0,0.379,1,0.821,2,0.845,3,1.36,4,0.845,5,0.485,6,0.628,7,1.416,8,1.829,9,1.416,10,1.829,11,0.294,12,1.416,13,3.249,14,1.416,15,1.416,16,1.829,17,2.141,18,0.635,19,1.053,20,1.053,21,1.773,22,2.877,23,1.416,24,2.742,25,1.416,26,1.416,27,0.845,28,2.039,29,2.139,30,3.426,31,3.315,32,0.845,33,1.824,34,0.097,35,1.824,36,1.104,37,2.36,38,1.829,39,1.416,40,0.845,41,2.416,42,1.416,43,2.717,44,4.025,45,0.845,46,0.845,47,2.86,48,2.201,49,3.682,50,0.845,51,2.509,52,2.509,53,0.845,54,1.416,55,0.845,56,1.416,57,0.845,58,1.416,59,0.845,60,1.416,61,0.845,62,1.416,63,0.845,64,1.416,65,2.742,66,0.845,67,0.628,68,0.845,69,1.416,70,0.845,71,1.829,72,0.845,73,0.845,74,0.628,75,0.628,76,0.845,77,0.628,78,1.829,79,0.845,80,3.089,81,1.053,82,0.845,83,0.845,84,0.845,85,1.919,86,1.416,87,0.845,88,0.845,89,0.845,90,0.845,91,0.845,92,0.845,93,0.845,94,0.845,95,0.845,96,0.845,97,0.845,98,0.845,99,1.053,100,0.845,101,0.845,102,1.416,103,1.416,104,0.845,105,1.416,106,0.845,107,0.845,108,0.845,109,0.845,110,0.845,111,0.845,112,0.845,113,0.845,114,0.033,115,0.033]],["title/coverage.html",[116,2.179]],["body/coverage.html",[0,0.985,1,0.985,5,1.262,6,1.633,18,0.985,34,0.096,36,1.018,81,1.633,114,0.068,115,0.068,116,1.633,117,1.633,118,2.197,119,2.197,120,1.633,121,1.682,122,3.986,123,3.947,124,1.788,125,1.788,126,1.633,127,2.927,128,2.927,129,3.898,130,1.633,131,1.633,132,1.633,133,1.633,134,1.633,135,1.633,136,1.633,137,1.633,138,2.197,139,0.985,140,2.197,141,2.197,142,2.197]],["title/dependencies.html",[143,1.394,144,1.953]],["body/dependencies.html",[34,0.095,74,2.306,75,2.306,114,0.085,115,0.085,144,2.306,145,2.306,146,3.101,147,3.101,148,3.101]],["title/miscellaneous/functions.html",[149,0.495,150,1.953]],["body/miscellaneous/functions.html",[11,0.933,18,1.493,28,2.475,33,1.913,34,0.091,35,1.913,36,1.158,37,2.475,41,1.995,47,1.995,48,1.913,51,1.995,52,1.995,114,0.078,115,0.078,120,1.995,121,1.542,124,1.204,125,1.493,126,2.475,139,1.624,149,0.709,150,1.995,151,1.542,152,2.683,153,2.683,154,1.542,155,1.995,156,1.995,157,2.683]],["title/index.html",[11,0.652,158,1.874,159,1.874]],["body/index.html",[1,1.225,3,1.623,5,0.626,18,0.979,19,1.856,20,0.81,21,2.439,29,1.297,34,0.09,35,1.003,43,1.297,48,1.254,77,0.81,85,0.81,99,0.81,114,0.041,115,0.041,117,1.623,121,1.003,154,0.626,160,1.089,161,1.089,162,1.089,163,2.496,164,1.089,165,1.744,166,0.626,167,2.182,168,1.089,169,1.089,170,1.089,171,1.089,172,2.731,173,1.744,174,2.182,175,1.089,176,1.089,177,1.089,178,1.089,179,1.089,180,1.089,181,1.089,182,1.089,183,2.182,184,1.089,185,1.089,186,1.089,187,1.089,188,1.089,189,1.744,190,1.089,191,1.089,192,1.089,193,1.089,194,1.744,195,1.089,196,1.089,197,1.089,198,1.089,199,1.089,200,1.089,201,1.089,202,1.089,203,0.81,204,1.089,205,1.089,206,1.089,207,1.089,208,1.744,209,1.089,210,1.089,211,2.731,212,1.089,213,1.089,214,1.089,215,1.089,216,1.089,217,1.089,218,1.744,219,1.089,220,1.744,221,1.089,222,1.089,223,1.089,224,1.089,225,1.089,226,1.089,227,1.744,228,1.089,229,1.744,230,1.089,231,1.089,232,1.744,233,1.089,234,2.496,235,1.089,236,1.089,237,1.089,238,1.089,239,2.182,240,1.089,241,1.089,242,1.089,243,1.089,244,2.182,245,1.089,246,1.089,247,1.744,248,1.089,249,1.089,250,1.089,251,1.089,252,1.089,253,1.744,254,1.089,255,2.182,256,1.744,257,1.089,258,1.089,259,1.089,260,1.744,261,1.089,262,1.089,263,1.744,264,1.089,265,1.089,266,1.089,267,2.182,268,1.089,269,1.089,270,1.089,271,1.089,272,1.089,273,1.089,274,1.089,275,1.089,276,1.089,277,1.089,278,1.089,279,1.089,280,1.089,281,1.089,282,1.089,283,1.089,284,1.089,285,1.744,286,1.089,287,1.089,288,1.744,289,0.81,290,1.089,291,1.089,292,1.089,293,1.089,294,1.089,295,2.496,296,1.089,297,1.089,298,1.089,299,1.089,300,2.182,301,1.089,302,1.089,303,1.089,304,1.744,305,1.089,306,1.089,307,1.089,308,1.089,309,1.744,310,1.089,311,1.089,312,1.089,313,1.089,314,1.089,315,1.089,316,1.089,317,1.089,318,1.089,319,1.089,320,1.089,321,1.089,322,1.089,323,1.089,324,1.089,325,1.744,326,1.744,327,1.089,328,1.089,329,1.089,330,1.089,331,1.089,332,1.089,333,1.089,334,1.089,335,1.089,336,1.089,337,1.089,338,1.089,339,1.089,340,1.089,341,1.089,342,1.089,343,2.496,344,1.089,345,1.744,346,1.089,347,0.81,348,1.089,349,1.089,350,2.496,351,1.089,352,1.089,353,1.089,354,1.744,355,1.089,356,1.089,357,2.182,358,1.089,359,1.744,360,1.089,361,2.496,362,1.089,363,1.089,364,1.089,365,1.089,366,1.089,367,1.089,368,1.744,369,1.089,370,1.089,371,1.744,372,1.744,373,1.744,374,1.089,375,1.089,376,1.089,377,1.089,378,1.089,379,1.089,380,2.182,381,2.182,382,1.089,383,1.089,384,1.089,385,1.089,386,1.089,387,1.089,388,1.744,389,1.089,390,1.089,391,1.089,392,1.089,393,1.089,394,1.744,395,1.089]],["title/modules.html",[396,2.179]],["body/modules.html",[34,0.087,114,0.087,115,0.087,396,2.415]],["title/overview.html",[397,2.179]],["body/overview.html",[0,1.442,34,0.087,114,0.087,115,0.087,166,1.847,397,2.39]],["title/properties.html",[143,1.394,398,1.953]],["body/properties.html",[34,0.096,114,0.082,115,0.082,145,2.185,289,2.185,347,2.616,398,2.185,399,2.939,400,2.939,401,2.939,402,2.939,403,2.939,404,2.939,405,2.939,406,2.939,407,2.939,408,2.939]],["title/miscellaneous/typealiases.html",[149,0.495,409,2.626]],["body/miscellaneous/typealiases.html",[11,1.052,33,1.739,34,0.084,36,1.052,114,0.084,115,0.084,124,1.357,125,1.606,139,1.606,149,0.799,151,1.739,154,1.739,155,2.249,156,2.249,410,3.025,411,3.025]],["title/miscellaneous/variables.html",[149,0.495,412,1.953]],["body/miscellaneous/variables.html",[11,0.73,34,0.099,36,1.199,67,2.869,114,0.066,115,0.066,124,0.942,125,1.754,130,2.111,131,2.111,132,2.111,133,2.111,134,2.111,135,2.111,136,2.111,137,2.111,139,1.546,149,0.554,151,2.218,166,1.849,203,1.561,412,1.561,413,3.859,414,2.099,415,2.099,416,2.099,417,2.099]]],"invertedIndex":[["",{"_index":34,"title":{},"body":{"classes/Logger.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":122,"title":{},"body":{"coverage.html":{}}}],["0.5.11",{"_index":148,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":123,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":140,"title":{},"body":{"coverage.html":{}}}],["0072b2",{"_index":358,"title":{},"body":{"index.html":{}}}],["009e73",{"_index":369,"title":{},"body":{"index.html":{}}}],["1",{"_index":166,"title":{},"body":{"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1/1",{"_index":128,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":313,"title":{},"body":{"index.html":{}}}],["100",{"_index":127,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":330,"title":{},"body":{"index.html":{}}}],["12",{"_index":335,"title":{},"body":{"index.html":{}}}],["2",{"_index":203,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["3",{"_index":222,"title":{},"body":{"index.html":{}}}],["4",{"_index":237,"title":{},"body":{"index.html":{}}}],["5",{"_index":252,"title":{},"body":{"index.html":{}}}],["6",{"_index":262,"title":{},"body":{"index.html":{}}}],["7",{"_index":282,"title":{},"body":{"index.html":{}}}],["8",{"_index":293,"title":{},"body":{"index.html":{}}}],["8601",{"_index":213,"title":{},"body":{"index.html":{}}}],["9",{"_index":301,"title":{},"body":{"index.html":{}}}],["9.4.0",{"_index":146,"title":{},"body":{"dependencies.html":{}}}],["9.5.0",{"_index":145,"title":{},"body":{"dependencies.html":{},"properties.html":{}}}],["__color",{"_index":14,"title":{},"body":{"classes/Logger.html":{}}}],["__color(loglevel",{"_index":39,"title":{},"body":{"classes/Logger.html":{}}}],["__context",{"_index":15,"title":{},"body":{"classes/Logger.html":{}}}],["__context(level",{"_index":42,"title":{},"body":{"classes/Logger.html":{}}}],["__log",{"_index":16,"title":{},"body":{"classes/Logger.html":{}}}],["__log(level",{"_index":46,"title":{},"body":{"classes/Logger.html":{}}}],["__resetcolor",{"_index":17,"title":{},"body":{"classes/Logger.html":{}}}],["ability",{"_index":295,"title":{},"body":{"index.html":{}}}],["access",{"_index":309,"title":{},"body":{"index.html":{}}}],["accessability",{"_index":355,"title":{},"body":{"index.html":{}}}],["accessbility",{"_index":164,"title":{},"body":{"index.html":{}}}],["add",{"_index":345,"title":{},"body":{"index.html":{}}}],["alerting",{"_index":279,"title":{},"body":{"index.html":{}}}],["alias",{"_index":138,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":410,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["anonymization",{"_index":307,"title":{},"body":{"index.html":{}}}],["ansi",{"_index":389,"title":{},"body":{"index.html":{}}}],["ansibgcolor",{"_index":72,"title":{},"body":{"classes/Logger.html":{}}}],["ansibgcolor.reset}${ansicolor.reset",{"_index":95,"title":{},"body":{"classes/Logger.html":{}}}],["ansicolor",{"_index":73,"title":{},"body":{"classes/Logger.html":{}}}],["ansicolor.blue",{"_index":88,"title":{},"body":{"classes/Logger.html":{}}}],["ansicolor.green}(${value.toisostring()})${ansicolor.reset",{"_index":83,"title":{},"body":{"classes/Logger.html":{}}}],["ansicolor.orange",{"_index":90,"title":{},"body":{"classes/Logger.html":{}}}],["ansicolor.red",{"_index":93,"title":{},"body":{"classes/Logger.html":{}}}],["ansicolor.white",{"_index":86,"title":{},"body":{"classes/Logger.html":{}}}],["app",{"_index":327,"title":{},"body":{"index.html":{}}}],["application",{"_index":260,"title":{},"body":{"index.html":{}}}],["applications",{"_index":251,"title":{},"body":{"index.html":{}}}],["application’s",{"_index":243,"title":{},"body":{"index.html":{}}}],["approximation",{"_index":390,"title":{},"body":{"index.html":{}}}],["associated",{"_index":299,"title":{},"body":{"index.html":{}}}],["asynchronous",{"_index":238,"title":{},"body":{"index.html":{}}}],["attach",{"_index":254,"title":{},"body":{"index.html":{}}}],["author",{"_index":406,"title":{},"body":{"properties.html":{}}}],["automatically",{"_index":225,"title":{},"body":{"index.html":{}}}],["aws",{"_index":275,"title":{},"body":{"index.html":{}}}],["azure",{"_index":277,"title":{},"body":{"index.html":{}}}],["based",{"_index":288,"title":{},"body":{"index.html":{}}}],["being",{"_index":378,"title":{},"body":{"index.html":{}}}],["blending",{"_index":366,"title":{},"body":{"index.html":{}}}],["blindness",{"_index":372,"title":{},"body":{"index.html":{}}}],["blocking",{"_index":241,"title":{},"body":{"index.html":{}}}],["blue",{"_index":357,"title":{},"body":{"index.html":{}}}],["box",{"_index":155,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["boxset",{"_index":139,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["brightline",{"_index":408,"title":{},"body":{"properties.html":{}}}],["browsers",{"_index":341,"title":{},"body":{"index.html":{}}}],["built",{"_index":161,"title":{},"body":{"index.html":{}}}],["case",{"_index":85,"title":{},"body":{"classes/Logger.html":{},"index.html":{}}}],["categorize",{"_index":170,"title":{},"body":{"index.html":{}}}],["cc79a7",{"_index":374,"title":{},"body":{"index.html":{}}}],["check",{"_index":233,"title":{},"body":{"index.html":{}}}],["choice",{"_index":351,"title":{},"body":{"index.html":{}}}],["choose",{"_index":352,"title":{},"body":{"index.html":{}}}],["class",{"_index":0,"title":{"classes/Logger.html":{}},"body":{"classes/Logger.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/Logger.html":{}}}],["closest",{"_index":388,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":273,"title":{},"body":{"index.html":{}}}],["cloudwatch",{"_index":276,"title":{},"body":{"index.html":{}}}],["color",{"_index":350,"title":{},"body":{"index.html":{}}}],["colors",{"_index":354,"title":{},"body":{"index.html":{}}}],["combination",{"_index":320,"title":{},"body":{"index.html":{}}}],["compatabile",{"_index":338,"title":{},"body":{"index.html":{}}}],["configuration",{"_index":332,"title":{},"body":{"index.html":{}}}],["configure",{"_index":333,"title":{},"body":{"index.html":{}}}],["confirmation",{"_index":179,"title":{},"body":{"index.html":{}}}],["confused",{"_index":379,"title":{},"body":{"index.html":{}}}],["console.log",{"_index":102,"title":{},"body":{"classes/Logger.html":{}}}],["console.table(data",{"_index":106,"title":{},"body":{"classes/Logger.html":{}}}],["const",{"_index":99,"title":{},"body":{"classes/Logger.html":{},"index.html":{}}}],["constructor",{"_index":26,"title":{},"body":{"classes/Logger.html":{}}}],["constructor(context",{"_index":27,"title":{},"body":{"classes/Logger.html":{}}}],["context",{"_index":38,"title":{},"body":{"classes/Logger.html":{}}}],["contextual",{"_index":253,"title":{},"body":{"index.html":{}}}],["context—critical",{"_index":290,"title":{},"body":{"index.html":{}}}],["continue",{"_index":201,"title":{},"body":{"index.html":{}}}],["contrast",{"_index":377,"title":{},"body":{"index.html":{}}}],["control",{"_index":310,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":116,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":154,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["createboxprinter",{"_index":126,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createboxprinter(boxset",{"_index":153,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createboxprinter(dot_box_set",{"_index":414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createboxprinter(round_box_set",{"_index":415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createboxprinter(sharp_box_set",{"_index":416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createboxprinter(wavy_box_set",{"_index":417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cross",{"_index":336,"title":{},"body":{"index.html":{}}}],["custom",{"_index":316,"title":{},"body":{"index.html":{}}}],["customizable",{"_index":207,"title":{},"body":{"index.html":{}}}],["customization",{"_index":314,"title":{},"body":{"index.html":{}}}],["d55e00",{"_index":382,"title":{},"body":{"index.html":{}}}],["data",{"_index":48,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["date",{"_index":65,"title":{},"body":{"classes/Logger.html":{}}}],["date().toisostring",{"_index":82,"title":{},"body":{"classes/Logger.html":{}}}],["debug",{"_index":18,"title":{},"body":{"classes/Logger.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["debug(message",{"_index":157,"title":{},"body":{"miscellaneous/functions.html":{}}}],["debug(title",{"_index":54,"title":{},"body":{"classes/Logger.html":{}}}],["deep",{"_index":384,"title":{},"body":{"index.html":{}}}],["default",{"_index":413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":31,"title":{},"body":{"classes/Logger.html":{}}}],["dependencies",{"_index":144,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":400,"title":{},"body":{"properties.html":{}}}],["detailed",{"_index":173,"title":{},"body":{"index.html":{}}}],["developer",{"_index":306,"title":{},"body":{"index.html":{}}}],["diagnosing",{"_index":177,"title":{},"body":{"index.html":{}}}],["different",{"_index":168,"title":{},"body":{"index.html":{}}}],["disk",{"_index":231,"title":{},"body":{"index.html":{}}}],["distinguishable",{"_index":359,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":117,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dot_box_set",{"_index":130,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["dotbox",{"_index":131,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["due",{"_index":192,"title":{},"body":{"index.html":{}}}],["dynamic",{"_index":331,"title":{},"body":{"index.html":{}}}],["e.g",{"_index":211,"title":{},"body":{"index.html":{}}}],["e69f00",{"_index":362,"title":{},"body":{"index.html":{}}}],["easily",{"_index":285,"title":{},"body":{"index.html":{}}}],["elk",{"_index":270,"title":{},"body":{"index.html":{}}}],["ensures",{"_index":242,"title":{},"body":{"index.html":{}}}],["error",{"_index":19,"title":{},"body":{"classes/Logger.html":{},"index.html":{}}}],["error(title",{"_index":56,"title":{},"body":{"classes/Logger.html":{}}}],["especially",{"_index":248,"title":{},"body":{"index.html":{}}}],["eventemitter",{"_index":8,"title":{},"body":{"classes/Logger.html":{}}}],["events",{"_index":76,"title":{},"body":{"classes/Logger.html":{}}}],["example",{"_index":343,"title":{},"body":{"index.html":{}}}],["execution",{"_index":297,"title":{},"body":{"index.html":{}}}],["expected",{"_index":182,"title":{},"body":{"index.html":{}}}],["export",{"_index":77,"title":{},"body":{"classes/Logger.html":{},"index.html":{}}}],["extends",{"_index":7,"title":{},"body":{"classes/Logger.html":{}}}],["extensibility",{"_index":315,"title":{},"body":{"index.html":{}}}],["extensive",{"_index":162,"title":{},"body":{"index.html":{}}}],["external",{"_index":263,"title":{},"body":{"index.html":{}}}],["fast",{"_index":291,"title":{},"body":{"index.html":{}}}],["fatal",{"_index":20,"title":{},"body":{"classes/Logger.html":{},"index.html":{}}}],["fatal(title",{"_index":58,"title":{},"body":{"classes/Logger.html":{}}}],["features",{"_index":163,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/Logger.html":{},"coverage.html":{},"index.html":{}}}],["files",{"_index":227,"title":{},"body":{"index.html":{}}}],["filter",{"_index":286,"title":{},"body":{"index.html":{}}}],["filtering",{"_index":283,"title":{},"body":{"index.html":{}}}],["fit",{"_index":318,"title":{},"body":{"index.html":{}}}],["following",{"_index":353,"title":{},"body":{"index.html":{}}}],["format",{"_index":214,"title":{},"body":{"index.html":{}}}],["formats",{"_index":208,"title":{},"body":{"index.html":{}}}],["formatting",{"_index":204,"title":{},"body":{"index.html":{}}}],["friendly",{"_index":324,"title":{},"body":{"index.html":{}}}],["function",{"_index":121,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["functions",{"_index":150,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["future",{"_index":191,"title":{},"body":{"index.html":{}}}],["getting",{"_index":158,"title":{"index.html":{}},"body":{}}],["good",{"_index":376,"title":{},"body":{"index.html":{}}}],["green",{"_index":368,"title":{},"body":{"index.html":{}}}],["handlers",{"_index":317,"title":{},"body":{"index.html":{}}}],["happened",{"_index":187,"title":{},"body":{"index.html":{}}}],["help",{"_index":169,"title":{},"body":{"index.html":{}}}],["high",{"_index":250,"title":{},"body":{"index.html":{}}}],["hindered",{"_index":246,"title":{},"body":{"index.html":{}}}],["homepage",{"_index":402,"title":{},"body":{"properties.html":{}}}],["html",{"_index":221,"title":{},"body":{"index.html":{}}}],["https://github.com/rbrightline/common/tree/main/libs/logger",{"_index":405,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io/common/logger",{"_index":403,"title":{},"body":{"properties.html":{}}}],["hues",{"_index":367,"title":{},"body":{"index.html":{}}}],["id",{"_index":256,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":118,"title":{},"body":{"coverage.html":{}}}],["ilogger",{"_index":10,"title":{},"body":{"classes/Logger.html":{}}}],["implements",{"_index":9,"title":{},"body":{"classes/Logger.html":{}}}],["import",{"_index":71,"title":{},"body":{"classes/Logger.html":{}}}],["importance",{"_index":171,"title":{},"body":{"index.html":{}}}],["important",{"_index":236,"title":{},"body":{"index.html":{}}}],["including",{"_index":209,"title":{},"body":{"index.html":{}}}],["index",{"_index":11,"title":{"index.html":{}},"body":{"classes/Logger.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicating",{"_index":197,"title":{},"body":{"index.html":{}}}],["indication",{"_index":184,"title":{},"body":{"index.html":{}}}],["indicative",{"_index":188,"title":{},"body":{"index.html":{}}}],["indicators",{"_index":215,"title":{},"body":{"index.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Logger.html":{},"index.html":{}}}],["info(title",{"_index":60,"title":{},"body":{"classes/Logger.html":{}}}],["information",{"_index":174,"title":{},"body":{"index.html":{}}}],["informative",{"_index":206,"title":{},"body":{"index.html":{}}}],["installation",{"_index":342,"title":{},"body":{"index.html":{}}}],["integrations",{"_index":264,"title":{},"body":{"index.html":{}}}],["interest",{"_index":176,"title":{},"body":{"index.html":{}}}],["isn’t",{"_index":245,"title":{},"body":{"index.html":{}}}],["iso",{"_index":212,"title":{},"body":{"index.html":{}}}],["itself",{"_index":199,"title":{},"body":{"index.html":{}}}],["it’s",{"_index":383,"title":{},"body":{"index.html":{}}}],["json",{"_index":220,"title":{},"body":{"index.html":{}}}],["keeps",{"_index":230,"title":{},"body":{"index.html":{}}}],["keywords",{"_index":289,"title":{},"body":{"index.html":{},"properties.html":{}}}],["level",{"_index":29,"title":{},"body":{"classes/Logger.html":{},"index.html":{}}}],["levels",{"_index":167,"title":{},"body":{"index.html":{}}}],["library",{"_index":347,"title":{},"body":{"index.html":{},"properties.html":{}}}],["line",{"_index":217,"title":{},"body":{"index.html":{}}}],["log",{"_index":21,"title":{},"body":{"classes/Logger.html":{},"index.html":{}}}],["log(title",{"_index":62,"title":{},"body":{"classes/Logger.html":{}}}],["logger",{"_index":1,"title":{"classes/Logger.html":{}},"body":{"classes/Logger.html":{},"coverage.html":{},"index.html":{}}}],["loggeraccessability",{"_index":349,"title":{},"body":{"index.html":{}}}],["logging",{"_index":239,"title":{},"body":{"index.html":{}}}],["loglevel",{"_index":30,"title":{},"body":{"classes/Logger.html":{}}}],["loglevel.debug",{"_index":94,"title":{},"body":{"classes/Logger.html":{}}}],["loglevel.error",{"_index":91,"title":{},"body":{"classes/Logger.html":{}}}],["loglevel.fatal",{"_index":92,"title":{},"body":{"classes/Logger.html":{}}}],["loglevel.info",{"_index":87,"title":{},"body":{"classes/Logger.html":{}}}],["loglevel.log",{"_index":78,"title":{},"body":{"classes/Logger.html":{}}}],["loglevel.warn",{"_index":89,"title":{},"body":{"classes/Logger.html":{}}}],["logs",{"_index":172,"title":{},"body":{"index.html":{}}}],["losing",{"_index":235,"title":{},"body":{"index.html":{}}}],["makes",{"_index":321,"title":{},"body":{"index.html":{}}}],["manage",{"_index":226,"title":{},"body":{"index.html":{}}}],["management",{"_index":268,"title":{},"body":{"index.html":{}}}],["masking",{"_index":308,"title":{},"body":{"index.html":{}}}],["matching",{"_index":115,"title":{},"body":{"classes/Logger.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["measure",{"_index":296,"title":{},"body":{"index.html":{}}}],["memory",{"_index":298,"title":{},"body":{"index.html":{}}}],["message",{"_index":47,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/functions.html":{}}}],["methods",{"_index":12,"title":{},"body":{"classes/Logger.html":{}}}],["microservice",{"_index":328,"title":{},"body":{"index.html":{}}}],["mind",{"_index":165,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":149,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":396,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monitor",{"_index":278,"title":{},"body":{"index.html":{}}}],["monitoring",{"_index":294,"title":{},"body":{"index.html":{}}}],["more",{"_index":193,"title":{},"body":{"index.html":{}}}],["name",{"_index":35,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["namesapce",{"_index":216,"title":{},"body":{"index.html":{}}}],["near",{"_index":190,"title":{},"body":{"index.html":{}}}],["needs",{"_index":319,"title":{},"body":{"index.html":{}}}],["new",{"_index":81,"title":{},"body":{"classes/Logger.html":{},"coverage.html":{}}}],["non",{"_index":240,"title":{},"body":{"index.html":{}}}],["notify",{"_index":305,"title":{},"body":{"index.html":{}}}],["number",{"_index":218,"title":{},"body":{"index.html":{}}}],["objectliteral",{"_index":49,"title":{},"body":{"classes/Logger.html":{}}}],["operating",{"_index":339,"title":{},"body":{"index.html":{}}}],["operations",{"_index":247,"title":{},"body":{"index.html":{}}}],["optional",{"_index":37,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/functions.html":{}}}],["orange",{"_index":361,"title":{},"body":{"index.html":{}}}],["os",{"_index":340,"title":{},"body":{"index.html":{}}}],["out",{"_index":364,"title":{},"body":{"index.html":{}}}],["output",{"_index":348,"title":{},"body":{"index.html":{}}}],["overview",{"_index":397,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":143,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pagerduty",{"_index":280,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":33,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["perform",{"_index":196,"title":{},"body":{"index.html":{}}}],["performance",{"_index":244,"title":{},"body":{"index.html":{}}}],["plain",{"_index":219,"title":{},"body":{"index.html":{}}}],["platform",{"_index":337,"title":{},"body":{"index.html":{}}}],["platforms",{"_index":269,"title":{},"body":{"index.html":{}}}],["pnpm",{"_index":344,"title":{},"body":{"index.html":{}}}],["predict",{"_index":303,"title":{},"body":{"index.html":{}}}],["printer",{"_index":156,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["printer.ts",{"_index":125,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["printtimestamp",{"_index":23,"title":{},"body":{"classes/Logger.html":{}}}],["printtimestamp(value",{"_index":64,"title":{},"body":{"classes/Logger.html":{}}}],["private",{"_index":13,"title":{},"body":{"classes/Logger.html":{}}}],["problem",{"_index":189,"title":{},"body":{"index.html":{}}}],["problems",{"_index":178,"title":{},"body":{"index.html":{}}}],["program",{"_index":198,"title":{},"body":{"index.html":{}}}],["properties",{"_index":398,"title":{"properties.html":{}},"body":{"properties.html":{}}}],["protected",{"_index":22,"title":{},"body":{"classes/Logger.html":{}}}],["provides",{"_index":375,"title":{},"body":{"index.html":{}}}],["purple",{"_index":373,"title":{},"body":{"index.html":{}}}],["purposes",{"_index":356,"title":{},"body":{"index.html":{}}}],["readable",{"_index":205,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":411,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["recorded",{"_index":261,"title":{},"body":{"index.html":{}}}],["red",{"_index":380,"title":{},"body":{"index.html":{}}}],["reliable",{"_index":323,"title":{},"body":{"index.html":{}}}],["remains",{"_index":385,"title":{},"body":{"index.html":{}}}],["repository",{"_index":404,"title":{},"body":{"properties.html":{}}}],["reset",{"_index":394,"title":{},"body":{"index.html":{}}}],["restricting",{"_index":311,"title":{},"body":{"index.html":{}}}],["results",{"_index":114,"title":{},"body":{"classes/Logger.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retention",{"_index":224,"title":{},"body":{"index.html":{}}}],["return",{"_index":80,"title":{},"body":{"classes/Logger.html":{}}}],["returns",{"_index":41,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/functions.html":{}}}],["rline",{"_index":401,"title":{},"body":{"properties.html":{}}}],["rline/color",{"_index":74,"title":{},"body":{"classes/Logger.html":{},"dependencies.html":{}}}],["rline/logger",{"_index":160,"title":{},"body":{"index.html":{}}}],["rline/loggerusage",{"_index":346,"title":{},"body":{"index.html":{}}}],["rline/type",{"_index":75,"title":{},"body":{"classes/Logger.html":{},"dependencies.html":{}}}],["robert",{"_index":407,"title":{},"body":{"properties.html":{}}}],["robust",{"_index":322,"title":{},"body":{"index.html":{}}}],["roles",{"_index":312,"title":{},"body":{"index.html":{}}}],["rotation",{"_index":223,"title":{},"body":{"index.html":{}}}],["round_box_set",{"_index":132,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["roundbox",{"_index":133,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["running",{"_index":202,"title":{},"body":{"index.html":{}}}],["search",{"_index":287,"title":{},"body":{"index.html":{}}}],["searching",{"_index":284,"title":{},"body":{"index.html":{}}}],["security",{"_index":302,"title":{},"body":{"index.html":{}}}],["sending",{"_index":266,"title":{},"body":{"index.html":{}}}],["sensitive",{"_index":304,"title":{},"body":{"index.html":{}}}],["serious",{"_index":194,"title":{},"body":{"index.html":{}}}],["services",{"_index":274,"title":{},"body":{"index.html":{}}}],["session",{"_index":257,"title":{},"body":{"index.html":{}}}],["setup",{"_index":329,"title":{},"body":{"index.html":{}}}],["sharp_box_set",{"_index":134,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["sharpbox",{"_index":135,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["size",{"_index":228,"title":{},"body":{"index.html":{}}}],["slack",{"_index":281,"title":{},"body":{"index.html":{}}}],["software",{"_index":195,"title":{},"body":{"index.html":{}}}],["something",{"_index":185,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/Logger.html":{}}}],["specific",{"_index":300,"title":{},"body":{"index.html":{}}}],["splunk",{"_index":272,"title":{},"body":{"index.html":{}}}],["src/.../box",{"_index":151,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../debug.ts",{"_index":152,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/lib/debug.ts",{"_index":120,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/format/box",{"_index":124,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/logger.ts",{"_index":6,"title":{},"body":{"classes/Logger.html":{},"coverage.html":{}}}],["src/lib/logger.ts:103",{"_index":59,"title":{},"body":{"classes/Logger.html":{}}}],["src/lib/logger.ts:107",{"_index":55,"title":{},"body":{"classes/Logger.html":{}}}],["src/lib/logger.ts:11",{"_index":32,"title":{},"body":{"classes/Logger.html":{}}}],["src/lib/logger.ts:19",{"_index":68,"title":{},"body":{"classes/Logger.html":{}}}],["src/lib/logger.ts:23",{"_index":66,"title":{},"body":{"classes/Logger.html":{}}}],["src/lib/logger.ts:27",{"_index":40,"title":{},"body":{"classes/Logger.html":{}}}],["src/lib/logger.ts:43",{"_index":53,"title":{},"body":{"classes/Logger.html":{}}}],["src/lib/logger.ts:47",{"_index":45,"title":{},"body":{"classes/Logger.html":{}}}],["src/lib/logger.ts:53",{"_index":50,"title":{},"body":{"classes/Logger.html":{}}}],["src/lib/logger.ts:87",{"_index":63,"title":{},"body":{"classes/Logger.html":{}}}],["src/lib/logger.ts:91",{"_index":57,"title":{},"body":{"classes/Logger.html":{}}}],["src/lib/logger.ts:95",{"_index":61,"title":{},"body":{"classes/Logger.html":{}}}],["src/lib/logger.ts:99",{"_index":70,"title":{},"body":{"classes/Logger.html":{}}}],["stack",{"_index":271,"title":{},"body":{"index.html":{}}}],["stands",{"_index":363,"title":{},"body":{"index.html":{}}}],["started",{"_index":159,"title":{"index.html":{}},"body":{}}],["state",{"_index":259,"title":{},"body":{"index.html":{}}}],["statements",{"_index":119,"title":{},"body":{"coverage.html":{}}}],["stopping",{"_index":334,"title":{},"body":{"index.html":{}}}],["string",{"_index":28,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/functions.html":{}}}],["super",{"_index":79,"title":{},"body":{"classes/Logger.html":{}}}],["support",{"_index":265,"title":{},"body":{"index.html":{}}}],["swc/helpers",{"_index":147,"title":{},"body":{"dependencies.html":{}}}],["switch",{"_index":84,"title":{},"body":{"classes/Logger.html":{}}}],["systems",{"_index":267,"title":{},"body":{"index.html":{}}}],["table",{"_index":142,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":141,"title":{},"body":{"coverage.html":{}}}],["things",{"_index":180,"title":{},"body":{"index.html":{}}}],["this.__color(level",{"_index":96,"title":{},"body":{"classes/Logger.html":{}}}],["this.__context(level",{"_index":103,"title":{},"body":{"classes/Logger.html":{}}}],["this.__log(loglevel.debug",{"_index":113,"title":{},"body":{"classes/Logger.html":{}}}],["this.__log(loglevel.error",{"_index":109,"title":{},"body":{"classes/Logger.html":{}}}],["this.__log(loglevel.fatal",{"_index":112,"title":{},"body":{"classes/Logger.html":{}}}],["this.__log(loglevel.info",{"_index":110,"title":{},"body":{"classes/Logger.html":{}}}],["this.__log(loglevel.log",{"_index":108,"title":{},"body":{"classes/Logger.html":{}}}],["this.__log(loglevel.warn",{"_index":111,"title":{},"body":{"classes/Logger.html":{}}}],["this.__resetcolor",{"_index":98,"title":{},"body":{"classes/Logger.html":{}}}],["this.context",{"_index":105,"title":{},"body":{"classes/Logger.html":{}}}],["this.emit(`${level",{"_index":107,"title":{},"body":{"classes/Logger.html":{}}}],["this.level",{"_index":101,"title":{},"body":{"classes/Logger.html":{}}}],["this.printtimestamp",{"_index":104,"title":{},"body":{"classes/Logger.html":{}}}],["this.printtimestamp(date",{"_index":100,"title":{},"body":{"classes/Logger.html":{}}}],["time",{"_index":229,"title":{},"body":{"index.html":{}}}],["timestamp",{"_index":24,"title":{},"body":{"classes/Logger.html":{}}}],["timestamps",{"_index":210,"title":{},"body":{"index.html":{}}}],["title",{"_index":43,"title":{},"body":{"classes/Logger.html":{},"index.html":{}}}],["tolocaleuppercase",{"_index":97,"title":{},"body":{"classes/Logger.html":{}}}],["tostring",{"_index":44,"title":{},"body":{"classes/Logger.html":{}}}],["troubleshooting",{"_index":292,"title":{},"body":{"index.html":{}}}],["type",{"_index":36,"title":{},"body":{"classes/Logger.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":409,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":371,"title":{},"body":{"index.html":{}}}],["typically",{"_index":175,"title":{},"body":{"index.html":{}}}],["unable",{"_index":200,"title":{},"body":{"index.html":{}}}],["understand",{"_index":258,"title":{},"body":{"index.html":{}}}],["unexpected",{"_index":186,"title":{},"body":{"index.html":{}}}],["usage",{"_index":232,"title":{},"body":{"index.html":{}}}],["use",{"_index":325,"title":{},"body":{"index.html":{}}}],["useful",{"_index":249,"title":{},"body":{"index.html":{}}}],["user",{"_index":255,"title":{},"body":{"index.html":{}}}],["value",{"_index":67,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":129,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":412,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vermilion",{"_index":381,"title":{},"body":{"index.html":{}}}],["version",{"_index":399,"title":{},"body":{"properties.html":{}}}],["vibrant",{"_index":360,"title":{},"body":{"index.html":{}}}],["void",{"_index":52,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/functions.html":{}}}],["warn",{"_index":25,"title":{},"body":{"classes/Logger.html":{}}}],["warn(title",{"_index":69,"title":{},"body":{"classes/Logger.html":{}}}],["warning",{"_index":183,"title":{},"body":{"index.html":{}}}],["wavy_box_set",{"_index":136,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["wavybox",{"_index":137,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["web",{"_index":326,"title":{},"body":{"index.html":{}}}],["well",{"_index":365,"title":{},"body":{"index.html":{}}}],["without",{"_index":234,"title":{},"body":{"index.html":{}}}],["working",{"_index":181,"title":{},"body":{"index.html":{}}}],["works",{"_index":370,"title":{},"body":{"index.html":{}}}],["x1b[0m",{"_index":395,"title":{},"body":{"index.html":{}}}],["x1b[31m",{"_index":393,"title":{},"body":{"index.html":{}}}],["x1b[32m",{"_index":391,"title":{},"body":{"index.html":{}}}],["x1b[34m",{"_index":386,"title":{},"body":{"index.html":{}}}],["x1b[35m",{"_index":392,"title":{},"body":{"index.html":{}}}],["x1b[38;5;214m",{"_index":387,"title":{},"body":{"index.html":{}}}],["yes",{"_index":51,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/functions.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Logger.html":{"url":"classes/Logger.html","title":"class - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/logger.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        EventEmitter\n            \n\n            \n                Implements\n            \n            \n                            ILogger\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                __color\n                            \n                            \n                                    Private\n                                __context\n                            \n                            \n                                    Private\n                                __log\n                            \n                            \n                                    Private\n                                __resetColor\n                            \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                fatal\n                            \n                            \n                                info\n                            \n                            \n                                log\n                            \n                            \n                                    Protected\n                                printTimestamp\n                            \n                            \n                                    Protected\n                                timestamp\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(context: string, level: LogLevel)\n                    \n                \n                        \n                            \n                                Defined in src/lib/logger.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        level\n                                                  \n                                                        \n                                                                    LogLevel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        __color\n                        \n                    \n                \n            \n            \n                \n                        \n                    __color(loglevel: LogLevel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/logger.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loglevel\n                                            \n                                                        LogLevel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        __context\n                        \n                    \n                \n            \n            \n                \n                        \n                    __context(level: LogLevel, title: ToString)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/logger.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                level\n                                            \n                                                        LogLevel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                title\n                                            \n                                                        ToString\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        __log\n                        \n                    \n                \n            \n            \n                \n                        \n                    __log(level: LogLevel, title: ToString, message?: ToString, data?: ObjectLiteral)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/logger.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                level\n                                            \n                                                        LogLevel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                title\n                                            \n                                                        ToString\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                message\n                                            \n                                                        ToString\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        ObjectLiteral\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        __resetColor\n                        \n                    \n                \n            \n            \n                \n                        \n                    __resetColor()\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/logger.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(title: ToString, message?: ToString, data?: ObjectLiteral)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/logger.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                        ToString\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                message\n                                            \n                                                        ToString\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        ObjectLiteral\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(title: ToString, message?: ToString, data?: ObjectLiteral)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/logger.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                        ToString\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                message\n                                            \n                                                        ToString\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        ObjectLiteral\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fatal\n                        \n                    \n                \n            \n            \n                \nfatal(title: ToString, message?: ToString, data?: ObjectLiteral)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/logger.ts:103\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                        ToString\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                message\n                                            \n                                                        ToString\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        ObjectLiteral\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        info\n                        \n                    \n                \n            \n            \n                \ninfo(title: ToString, message?: ToString, data?: ObjectLiteral)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/logger.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                        ToString\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                message\n                                            \n                                                        ToString\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        ObjectLiteral\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(title: ToString, message?: ToString, data?: ObjectLiteral)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/logger.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                        ToString\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                message\n                                            \n                                                        ToString\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        ObjectLiteral\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        printTimestamp\n                        \n                    \n                \n            \n            \n                \n                        \n                    printTimestamp(value: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/logger.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        timestamp\n                        \n                    \n                \n            \n            \n                \n                        \n                    timestamp()\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/logger.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(title: ToString, message?: ToString, data?: ObjectLiteral)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/logger.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                        ToString\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                message\n                                            \n                                                        ToString\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        ObjectLiteral\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AnsiBgColor, AnsiColor } from '@rline/color';\nimport {\n  Logger as ILogger,\n  Log,\n  LogLevel,\n  ObjectLiteral,\n  ToString,\n} from '@rline/type';\nimport EventEmitter from 'events';\n\nexport class Logger extends EventEmitter implements ILogger {\n  constructor(\n    protected context = 'LOG',\n    protected level: LogLevel = LogLevel.LOG\n  ) {\n    super();\n  }\n\n  protected timestamp() {\n    return new Date().toISOString();\n  }\n\n  protected printTimestamp(value: Date) {\n    return `| ${AnsiColor.green}(${value.toISOString()})${AnsiColor.reset} `;\n  }\n\n  private __color(loglevel: LogLevel): string {\n    switch (loglevel) {\n      case LogLevel.LOG:\n        return `${AnsiColor.white}`;\n      case LogLevel.INFO:\n        return `${AnsiColor.blue}`;\n      case LogLevel.WARN:\n        return `${AnsiColor.orange}`;\n      case LogLevel.ERROR:\n      case LogLevel.FATAL:\n        return `${AnsiColor.red}`;\n      case LogLevel.DEBUG:\n        return `${AnsiColor.white}`;\n    }\n  }\n\n  private __resetColor() {\n    return `${AnsiBgColor.reset}${AnsiColor.reset}`;\n  }\n\n  private __context(level: LogLevel, title: ToString) {\n    return `${this.__color(level)}[ ${title\n      .toString()\n      .toLocaleUpperCase()} ]${this.__resetColor()}`;\n  }\n\n  private __log(\n    level: LogLevel,\n    title: ToString,\n    message?: ToString,\n    data?: ObjectLiteral\n  ): void {\n    const date = new Date();\n\n    const timestamp = this.printTimestamp(date);\n    if (this.level > LogLevel.LOG) return;\n\n    if (message) {\n      console.log(\n        `${this.__context(level, title)} ${message} ${this.printTimestamp(\n          date\n        )}`\n      );\n    } else {\n      console.log(\n        `${this.__context(level, this.context ?? level)} ${title} ${timestamp}`\n      );\n    }\n\n    if (data) console.table(data);\n\n    this.emit(`${level}`, {\n      context: this.context,\n      message,\n      data,\n      level,\n      timestamp: date,\n    } as Log);\n  }\n\n  log(title: ToString, message?: ToString, data?: ObjectLiteral): void {\n    this.__log(LogLevel.LOG, title, message, data);\n  }\n\n  error(title: ToString, message?: ToString, data?: ObjectLiteral): void {\n    this.__log(LogLevel.ERROR, title, message, data);\n  }\n\n  info(title: ToString, message?: ToString, data?: ObjectLiteral): void {\n    this.__log(LogLevel.INFO, title, message, data);\n  }\n\n  warn(title: ToString, message?: ToString, data?: ObjectLiteral): void {\n    this.__log(LogLevel.WARN, title, message, data);\n  }\n\n  fatal(title: ToString, message?: ToString, data?: ObjectLiteral): void {\n    this.__log(LogLevel.FATAL, title, message, data);\n  }\n\n  debug(title: ToString, message?: ToString, data?: ObjectLiteral): void {\n    this.__log(LogLevel.DEBUG, title, message, data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/lib/debug.ts\n            \n            function\n            debug\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/format/box-printer.ts\n            \n            function\n            createBoxPrinter\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/format/box-printer.ts\n            \n            variable\n            DOT_BOX_SET\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/format/box-printer.ts\n            \n            variable\n            dotBox\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/format/box-printer.ts\n            \n            variable\n            ROUND_BOX_SET\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/format/box-printer.ts\n            \n            variable\n            roundBox\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/format/box-printer.ts\n            \n            variable\n            SHARP_BOX_SET\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/format/box-printer.ts\n            \n            variable\n            sharpBox\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/format/box-printer.ts\n            \n            variable\n            WAVY_BOX_SET\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/format/box-printer.ts\n            \n            variable\n            wavyBox\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/format/box-printer.ts\n            \n            type alias\n            Boxset\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/logger.ts\n            \n            class\n            Logger\n            \n                0 %\n                (0/14)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @rline/color : 9.5.0\n        \n            @rline/type : 9.4.0\n        \n            @swc/helpers : ~0.5.11\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createBoxPrinter   (src/.../box-printer.ts)\n                        \n                        \n                            debug   (src/.../debug.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/format/box-printer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createBoxPrinter\n                        \n                    \n                \n            \n            \n                \ncreateBoxPrinter(boxset: Boxset)\n                \n            \n\n\n\n\n            \n                \n                        Create a box printer function\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                boxset\n                                            \n                                                            Boxset\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/lib/debug.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(message: string, data?: any)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n@rline/logger\nLogger built with extensive features and accessbility in mind.\nFeatures\n1. Log Levels\nDifferent levels help categorize the importance of logs:\n\nDEBUG – Detailed information, typically of interest only when diagnosing problems.\nINFO – Confirmation that things are working as expected.\nWARNING – An indication that something unexpected happened or indicative of some problem in the near future.\nERROR – Due to a more serious problem, the software has not been able to perform some function.\nFATAL – A serious error, indicating that the program itself may be unable to continue running.\n\n2. Log Formatting\nReadable and informative logs, with customizable formats including:\n\nTimestamps (e.g., ISO 8601 format)\nLog level indicators\nNamesapce, File name, line number, and function name\nPlain, JSON, JSON + HTML\n\n3. Log Rotation & Retention\nAutomatically manage log files by size, time, or number of files. Keeps disk usage in check without losing important data.\n4. Asynchronous Logging\nNon-blocking logging ensures your application’s performance isn’t hindered by logging operations, especially useful for high-performance applications.\n5. Contextual Information\nAttach contextual data (e.g., user ID, session ID) to logs to understand the state of the application when the log was recorded.\n6. External Integrations\nSupport for sending logs to external systems:\n\nLog management platforms (e.g., ELK stack, Splunk)\nCloud services (e.g., AWS CloudWatch, Azure Monitor)\nAlerting systems (e.g., PagerDuty, Slack)\n\n7. Filtering and Searching\nEasily filter and search logs based on level, keywords, or context—critical for fast troubleshooting.\n8. Performance Monitoring\nAbility to measure execution time or memory usage associated with specific operations.\n9. Security Features\nAbility to predict sensitive data and notify developer\n\nAnonymization: Masking sensitive information.\nAccess Control: Restricting log access based on user roles.\n\n10. Customization and Extensibility\nAbility to create custom log levels, formats, and handlers to fit specific needs.\nA combination of these features makes a logger robust, reliable, and user-friendly. Do you have a specific use case in mind, like a web app or a microservice setup?\n11. Dynamic Configuration\nAbility to configure logger without stopping the application\n12. Cross Platform\nCompatabile to all operating-systems (OS) and Web browsers\nInstallation\nExample :pnpm add @rline/loggerUsage\n\n add example for the logger library\n\nExample :logger(); // output: loggerAccessability\nColor Choice\nWe choose the following colors to use for accessability purposes\n\nBlue (#0072B2) – Easily distinguishable and vibrant. (title)\nOrange (#E69F00) – Stands out well without blending into other hues. (warning)\nGreen (#009E73) – Works for most types of color blindness. (info)\nPurple (#CC79A7) – Provides good contrast without being confused with red or blue. (debug)\nVermilion (#D55E00) - It’s a deep orange-red that remains distinguishable for most types of color blindness. (error)\n\nExample :export const colors = {\n  blue: '\\x1b[34m', // Title\n  orange: '\\x1b[38;5;214m', // Warning (closest ANSI approximation for Orange)\n  green: '\\x1b[32m', // Info\n  purple: '\\x1b[35m', // Debug\n  vermilion: '\\x1b[31m', // Error (red is closest to vermilion)\n  reset: '\\x1b[0m', // Reset color\n};Documentation\nDetailed documentation Documentation\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 9.5.0\n        \n            Description :  library\n        \n            Keywords : rline, library\n        \n            Homepage : https://rbrightline.github.io/common/logger\n        \n            Repository : https://github.com/rbrightline/common/tree/main/libs/logger\n        \n            Author : Robert Brightline\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Boxset   (src/.../box-printer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/format/box-printer.ts\n    \n    \n        \n            \n                \n                    \n                    Boxset\n                \n            \n            \n                \n                    Parameters to create a box printer\n\n                \n            \n            \n                \n                        Readonly<>\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DOT_BOX_SET   (src/.../box-printer.ts)\n                        \n                        \n                            dotBox   (src/.../box-printer.ts)\n                        \n                        \n                            ROUND_BOX_SET   (src/.../box-printer.ts)\n                        \n                        \n                            roundBox   (src/.../box-printer.ts)\n                        \n                        \n                            SHARP_BOX_SET   (src/.../box-printer.ts)\n                        \n                        \n                            sharpBox   (src/.../box-printer.ts)\n                        \n                        \n                            WAVY_BOX_SET   (src/.../box-printer.ts)\n                        \n                        \n                            wavyBox   (src/.../box-printer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/format/box-printer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DOT_BOX_SET\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Boxset\n\n                    \n                \n                \n                    \n                        Default value : ['⋮', '.', '╭', '╮', '╯', '╰', 1]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dotBox\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createBoxPrinter(DOT_BOX_SET)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROUND_BOX_SET\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Boxset\n\n                    \n                \n                \n                    \n                        Default value : ['│', '─', '╭', '╮', '╯', '╰', 1]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roundBox\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createBoxPrinter(ROUND_BOX_SET)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SHARP_BOX_SET\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Boxset\n\n                    \n                \n                \n                    \n                        Default value : ['│', '─', '┌', '┐', '┘', '└', 1]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sharpBox\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createBoxPrinter(SHARP_BOX_SET)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        WAVY_BOX_SET\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Boxset\n\n                    \n                \n                \n                    \n                        Default value : ['│', '〰', '╭', '╮', '╯', '╰', 2]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wavyBox\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createBoxPrinter(WAVY_BOX_SET)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
