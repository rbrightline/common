var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/coverage.html",[0,2.05]],["body/coverage.html",[0,1.157,1,1.157,2,1.584,3,0.967,4,1.584,5,1.584,6,1.157,7,1.157,8,1.584,9,0.667,10,2.296,11,0.095,12,2.296,13,1.495,14,3.145,15,0.667,16,3.145,17,3.145,18,0.667,19,1.584,20,1.157,21,1.157,22,1.157,23,1.157,24,1.678,25,0.667,26,0.667,27,1.584,28,1.584,29,1.584,30,0.062,31,0.062]],["title/dependencies.html",[32,1.319,33,1.841]],["body/dependencies.html",[11,0.098,30,0.087,31,0.087,33,1.919,34,2.626,35,2.626,36,2.626,37,2.626]],["title/miscellaneous/functions.html",[38,0.41,39,1.841]],["body/miscellaneous/functions.html",[3,0.971,9,0.971,11,0.08,13,0.545,15,0.845,18,0.971,21,0.72,22,1.165,23,1.467,24,0.72,25,0.845,26,0.845,30,0.043,31,0.043,38,0.224,39,0.72,40,0.415,41,1.594,42,1.165,43,0.985,44,0.985,45,2.085,46,2.007,47,0.985,48,1.5,49,2.307,50,2.307,51,2.307,52,0.985,53,1.594,54,0.72,55,1.981,56,2.971,57,1.981,58,1.851,59,1.165,60,1.594,61,1.594,62,1.594,63,0.985,64,0.985,65,1.165,66,1.594,67,1.594,68,1.165,69,0.985,70,0.985,71,0.985,72,0.985,73,0.985,74,0.985]],["title/index.html",[40,0.76,75,1.805,76,1.805]],["body/index.html",[1,1.628,9,0.64,11,0.101,15,0.64,18,0.938,25,0.64,26,0.938,30,0.06,31,0.06,48,0.841,54,1.11,55,1.928,57,2.123,58,1.11,68,1.11,77,2.228,78,1.52,79,2.228,80,1.52,81,1.52,82,1.52,83,2.228,84,1.52,85,3.093,86,2.228,87,1.52,88,1.52,89,2.228,90,1.52,91,1.52,92,1.52,93,1.52]],["title/modules.html",[94,2.05]],["body/modules.html",[11,0.092,30,0.092,31,0.092,94,2.095]],["title/overview.html",[95,2.05]],["body/overview.html",[11,0.092,30,0.092,31,0.092,95,2.095]],["title/properties.html",[32,1.319,96,1.841]],["body/properties.html",[11,0.1,15,0.802,18,0.802,25,0.802,26,0.802,30,0.071,31,0.071,59,1.393,65,1.393,96,1.393,97,1.906,98,1.906,99,1.906,100,1.906,101,2.617,102,1.906,103,1.906,104,1.906,105,1.906,106,1.906,107,1.906,108,1.906,109,1.906,110,1.906,111,1.906,112,1.906,113,1.906,114,1.906,115,1.906]],["title/miscellaneous/typealiases.html",[38,0.41,116,2.52]],["body/miscellaneous/typealiases.html",[3,1.301,6,1.793,7,2.259,9,1.301,11,0.084,30,0.084,31,0.084,38,0.557,40,1.033,117,2.454,118,2.454,119,2.454]],["title/miscellaneous/variables.html",[38,0.41,120,1.841]],["body/miscellaneous/variables.html",[3,0.982,11,0.094,13,1.291,20,2.187,30,0.081,31,0.081,38,0.53,40,0.982,42,1.704,45,1.704,48,1.291,120,1.704,121,2.332,122,2.332,123,2.332,124,2.332]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":10,"title":{},"body":{"coverage.html":{}}}],["0.5.11",{"_index":35,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":12,"title":{},"body":{"coverage.html":{}}}],["1/1",{"_index":17,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":16,"title":{},"body":{"coverage.html":{}}}],["256",{"_index":123,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.1.1",{"_index":37,"title":{},"body":{"dependencies.html":{}}}],["9.5.0",{"_index":98,"title":{},"body":{"properties.html":{}}}],["add",{"_index":81,"title":{},"body":{"index.html":{}}}],["aes",{"_index":122,"title":{},"body":{"miscellaneous/variables.html":{}}}],["algorithm",{"_index":20,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["alias",{"_index":8,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":117,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["author",{"_index":113,"title":{},"body":{"properties.html":{}}}],["bcrypt",{"_index":36,"title":{},"body":{"dependencies.html":{}}}],["brightline",{"_index":115,"title":{},"body":{"properties.html":{}}}],["buffer",{"_index":56,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cbc",{"_index":124,"title":{},"body":{"miscellaneous/variables.html":{}}}],["compare",{"_index":25,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["compare(value",{"_index":44,"title":{},"body":{"miscellaneous/functions.html":{}}}],["const",{"_index":85,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":0,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crypto",{"_index":84,"title":{},"body":{"index.html":{}}}],["data",{"_index":58,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["data(encrypted",{"_index":90,"title":{},"body":{"index.html":{}}}],["data.ts",{"_index":7,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["decrypt",{"_index":15,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["decrypt(encrypteddata",{"_index":54,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["decrypted",{"_index":63,"title":{},"body":{"miscellaneous/functions.html":{}}}],["decrypteddata",{"_index":91,"title":{},"body":{"index.html":{}}}],["decryption",{"_index":101,"title":{},"body":{"properties.html":{}}}],["default",{"_index":121,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dependencies",{"_index":33,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":59,"title":{},"body":{"miscellaneous/functions.html":{},"properties.html":{}}}],["detailed",{"_index":93,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["enciption",{"_index":100,"title":{},"body":{"properties.html":{}}}],["encripted",{"_index":69,"title":{},"body":{"miscellaneous/functions.html":{}}}],["encrypt",{"_index":18,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["encrypt(data",{"_index":88,"title":{},"body":{"index.html":{}}}],["encrypt(value",{"_index":64,"title":{},"body":{"miscellaneous/functions.html":{}}}],["encrypteddata",{"_index":9,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["encryption",{"_index":65,"title":{},"body":{"miscellaneous/functions.html":{},"properties.html":{}}}],["example",{"_index":79,"title":{},"body":{"index.html":{}}}],["file",{"_index":2,"title":{},"body":{"coverage.html":{}}}],["function",{"_index":14,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":39,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":71,"title":{},"body":{"miscellaneous/functions.html":{}}}],["generated",{"_index":66,"title":{},"body":{"miscellaneous/functions.html":{}}}],["generatetoken",{"_index":23,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getting",{"_index":75,"title":{"index.html":{}},"body":{}}],["hash",{"_index":26,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["hash(value",{"_index":52,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hashed",{"_index":46,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hashing",{"_index":99,"title":{},"body":{"properties.html":{}}}],["hello",{"_index":87,"title":{},"body":{"index.html":{}}}],["hello\"documentation",{"_index":92,"title":{},"body":{"index.html":{}}}],["homepage",{"_index":107,"title":{},"body":{"properties.html":{}}}],["https://github.com/rbrightline/common/tree/main/libs/crypto",{"_index":112,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io/common/crypto",{"_index":108,"title":{},"body":{"properties.html":{}}}],["identifier",{"_index":4,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":83,"title":{},"body":{"index.html":{}}}],["index",{"_index":40,"title":{"index.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["installation",{"_index":78,"title":{},"body":{"index.html":{}}}],["integrity",{"_index":105,"title":{},"body":{"properties.html":{}}}],["iv",{"_index":57,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["key",{"_index":55,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["keywords",{"_index":102,"title":{},"body":{"properties.html":{}}}],["library",{"_index":104,"title":{},"body":{"properties.html":{}}}],["license",{"_index":109,"title":{},"body":{"properties.html":{}}}],["link",{"_index":70,"title":{},"body":{"miscellaneous/functions.html":{}}}],["literal",{"_index":119,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["matching",{"_index":31,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":38,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":110,"title":{},"body":{"properties.html":{}}}],["modules",{"_index":94,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["name",{"_index":50,"title":{},"body":{"miscellaneous/functions.html":{}}}],["new",{"_index":27,"title":{},"body":{"coverage.html":{}}}],["optional",{"_index":51,"title":{},"body":{"miscellaneous/functions.html":{}}}],["output",{"_index":89,"title":{},"body":{"index.html":{}}}],["overview",{"_index":95,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":32,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":49,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pnpm",{"_index":80,"title":{},"body":{"index.html":{}}}],["promise",{"_index":62,"title":{},"body":{"miscellaneous/functions.html":{}}}],["properties",{"_index":96,"title":{"properties.html":{}},"body":{"properties.html":{}}}],["random",{"_index":73,"title":{},"body":{"miscellaneous/functions.html":{}}}],["randombytes",{"_index":68,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["randombytes(32",{"_index":86,"title":{},"body":{"index.html":{}}}],["raw",{"_index":47,"title":{},"body":{"miscellaneous/functions.html":{}}}],["repository",{"_index":111,"title":{},"body":{"properties.html":{}}}],["results",{"_index":30,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":61,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rline",{"_index":103,"title":{},"body":{"properties.html":{}}}],["rline/crypto",{"_index":77,"title":{},"body":{"index.html":{}}}],["rline/cryptousage",{"_index":82,"title":{},"body":{"index.html":{}}}],["robert",{"_index":114,"title":{},"body":{"properties.html":{}}}],["secret",{"_index":60,"title":{},"body":{"miscellaneous/functions.html":{}}}],["security",{"_index":106,"title":{},"body":{"properties.html":{}}}],["src/.../encoded",{"_index":118,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../encrypt.ts",{"_index":42,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../generate",{"_index":43,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../hash.ts",{"_index":41,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/lib/encoded",{"_index":6,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/encrypt.ts",{"_index":13,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/generate",{"_index":21,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/hash.ts",{"_index":24,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["started",{"_index":76,"title":{"index.html":{}},"body":{}}],["statements",{"_index":5,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":45,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["swc/helpers",{"_index":34,"title":{},"body":{"dependencies.html":{}}}],["t",{"_index":53,"title":{},"body":{"miscellaneous/functions.html":{}}}],["table",{"_index":29,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":28,"title":{},"body":{"coverage.html":{}}}],["token",{"_index":74,"title":{},"body":{"miscellaneous/functions.html":{}}}],["token.ts",{"_index":22,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["type",{"_index":3,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":116,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["unique",{"_index":72,"title":{},"body":{"miscellaneous/functions.html":{}}}],["using",{"_index":67,"title":{},"body":{"miscellaneous/functions.html":{}}}],["value",{"_index":48,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":19,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":120,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":97,"title":{},"body":{"properties.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/lib/encoded-data.ts\n            \n            type alias\n            EncryptedData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/encrypt.ts\n            \n            function\n            decrypt\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/encrypt.ts\n            \n            function\n            encrypt\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/encrypt.ts\n            \n            variable\n            ALGORITHM\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/generate-token.ts\n            \n            function\n            generateToken\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/hash.ts\n            \n            function\n            compare\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/hash.ts\n            \n            function\n            hash\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @swc/helpers : ~0.5.11\n        \n            bcrypt : ^5.1.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            compare   (src/.../hash.ts)\n                        \n                        \n                            decrypt   (src/.../encrypt.ts)\n                        \n                        \n                            encrypt   (src/.../encrypt.ts)\n                        \n                        \n                            generateToken   (src/.../generate-token.ts)\n                        \n                        \n                            hash   (src/.../hash.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/hash.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        compare\n                        \n                    \n                \n            \n            \n                \ncompare(value: string, hashed: string)\n                \n            \n\n\n\n\n            \n                \n                        Compare the raw value with hashed value\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                hashed\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hash\n                        \n                    \n                \n            \n            \n                \nhash(value: T)\n                \n            \n\n\n\n\n            \n                \n                        Hash string value\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/lib/encrypt.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        decrypt\n                        \n                    \n                \n            \n            \n                \ndecrypt(encryptedData: EncryptedData, key: Buffer, iv: Buffer)\n                \n            \n\n\n\n\n            \n                \n                        Decrypt data\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                encryptedData\n                                            \n                                                            EncryptedData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                        \n                                                key\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    secret key\n\n                                            \n                                        \n                                        \n                                                iv\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    secret iv\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                decrypted data\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encrypt\n                        \n                    \n                \n            \n            \n                \nencrypt(value: string, key: Buffer, iv: Buffer)\n                \n            \n\n\n\n\n            \n                \n                        encrypt data\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    data to encrypt\n\n                                            \n                                        \n                                        \n                                                key\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    encryption key, can be generated using randomBytes\n\n                                            \n                                        \n                                        \n                                                iv\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    encryption iv, can be generated using randomBytes\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                encripted data {@link EncryptedData}\n\n                            \n                \n            \n        \n    \n    src/lib/generate-token.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        generateToken\n                        \n                    \n                \n            \n            \n                \ngenerateToken()\n                \n            \n\n\n\n\n            \n                \n                        Generate unique random token\n\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n@rline/crypto\nEncrypt, decrypt, hash, and compare hash value.\nInstallation\nExample :pnpm add @rline/cryptoUsage\nExample :import { randomBytes } from 'crypto';\nimport { encrypt } from '@rline/crypto';\n\nconst key = randomBytes(32);\nconst iv = randomBytes(32);\n\nconst data = 'Hello';\nconst encryptedData = encrypt(data, key, iv); // output: { iv, data(encrypted) }\nconst decryptedData = decrypt(encryptedData, key, iv); // output: \"Hello\"Documentation\nDetailed documentation Documentation\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 9.5.0\n        \n            Description : Hashing, enciption, and decryption\n        \n            Keywords : rline, library, hash, encryption, decryption, encrypt, decrypt, compare, integrity, security\n        \n            Homepage : https://rbrightline.github.io/common/crypto\n        \n            License : MIT\n        \n            Repository : https://github.com/rbrightline/common/tree/main/libs/crypto\n        \n            Author : Robert Brightline\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EncryptedData   (src/.../encoded-data.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/encoded-data.ts\n    \n    \n        \n            \n                \n                    \n                    EncryptedData\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ALGORITHM   (src/.../encrypt.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/encrypt.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ALGORITHM\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'aes-256-cbc'\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
