var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/coverage.html",[0,2.05]],["body/coverage.html",[0,1.005,1,1.375,2,1.375,3,0.871,4,1.375,5,1.375,6,1.005,7,1.005,8,1.375,9,0.761,10,2.486,11,0.092,12,2.486,13,1.376,14,2.966,15,1.005,16,2.766,17,2.766,18,1.005,19,1.375,20,1.005,21,1.005,22,1.005,23,1.005,24,1.511,25,1.005,26,1.005,27,1.375,28,1.375,29,1.375,30,0.056,31,0.056]],["title/dependencies.html",[32,1.319,33,1.841]],["body/dependencies.html",[11,0.097,30,0.084,31,0.084,33,1.82,34,2.49,35,2.49,36,2.49,37,2.49]],["title/miscellaneous/functions.html",[38,0.41,39,1.841]],["body/miscellaneous/functions.html",[3,0.878,9,1.154,11,0.075,13,0.462,15,1.307,18,1.524,21,0.61,22,1.016,23,1.307,24,0.61,25,1.307,26,1.307,30,0.038,31,0.038,38,0.189,39,0.61,40,0.351,41,1.391,42,1.016,43,0.834,44,0.834,45,2.111,46,1.788,47,0.834,48,1.829,49,2.086,50,2.086,51,2.086,52,0.834,53,0.834,54,2.503,55,2.782,56,2.503,57,2.318,58,1.391,59,1.391,60,1.391,61,1.391,62,0.834,63,0.834,64,1.391,65,1.391,66,1.391,67,1.391,68,0.834,69,0.834]],["title/index.html",[40,0.76,70,1.805,71,1.805]],["body/index.html",[11,0.085,30,0.085,31,0.085,72,2.534,73,2.534,74,2.534,75,3.153,76,2.534]],["title/modules.html",[77,2.05]],["body/modules.html",[11,0.09,30,0.09,31,0.09,77,2.03]],["title/overview.html",[78,2.05]],["body/overview.html",[11,0.09,30,0.09,31,0.09,78,2.03]],["title/properties.html",[32,1.319,79,1.841]],["body/properties.html",[11,0.097,30,0.084,31,0.084,79,1.82,80,2.49,81,2.49,82,2.49,83,2.49]],["title/miscellaneous/typealiases.html",[38,0.41,84,2.52]],["body/miscellaneous/typealiases.html",[3,1.246,6,1.675,7,2.162,9,1.638,11,0.08,30,0.08,31,0.08,38,0.521,40,0.965,85,2.292,86,2.292,87,2.292]],["title/miscellaneous/variables.html",[38,0.41,88,1.841]],["body/miscellaneous/variables.html",[3,0.907,11,0.091,13,1.193,20,2.077,30,0.077,31,0.077,38,0.489,40,0.907,42,1.575,45,1.575,48,1.575,88,1.575,89,2.155,90,2.155,91,2.155,92,2.155]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":10,"title":{},"body":{"coverage.html":{}}}],["0.0.0",{"_index":81,"title":{},"body":{"properties.html":{}}}],["0/1",{"_index":12,"title":{},"body":{"coverage.html":{}}}],["1/1",{"_index":17,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":16,"title":{},"body":{"coverage.html":{}}}],["13.1.0",{"_index":37,"title":{},"body":{"dependencies.html":{}}}],["20.3.2",{"_index":35,"title":{},"body":{"dependencies.html":{}}}],["256",{"_index":91,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aes",{"_index":90,"title":{},"body":{"miscellaneous/variables.html":{}}}],["algorithm",{"_index":20,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["alias",{"_index":8,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":85,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["brighline",{"_index":72,"title":{},"body":{"index.html":{}}}],["buffer",{"_index":55,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cbc",{"_index":92,"title":{},"body":{"miscellaneous/variables.html":{}}}],["commander",{"_index":36,"title":{},"body":{"dependencies.html":{}}}],["common",{"_index":76,"title":{},"body":{"index.html":{}}}],["comon",{"_index":74,"title":{},"body":{"index.html":{}}}],["compare",{"_index":25,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["compare(value",{"_index":44,"title":{},"body":{"miscellaneous/functions.html":{}}}],["coverage",{"_index":0,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["data",{"_index":57,"title":{},"body":{"miscellaneous/functions.html":{}}}],["data.ts",{"_index":7,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["decrypt",{"_index":15,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["decrypt(encrypteddata",{"_index":53,"title":{},"body":{"miscellaneous/functions.html":{}}}],["decrypted",{"_index":62,"title":{},"body":{"miscellaneous/functions.html":{}}}],["default",{"_index":89,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dependencies",{"_index":33,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":58,"title":{},"body":{"miscellaneous/functions.html":{}}}],["documentation",{"_index":1,"title":{},"body":{"coverage.html":{}}}],["encripted",{"_index":68,"title":{},"body":{"miscellaneous/functions.html":{}}}],["encrypt",{"_index":18,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["encrypt(value",{"_index":63,"title":{},"body":{"miscellaneous/functions.html":{}}}],["encrypteddata",{"_index":9,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["encryption",{"_index":64,"title":{},"body":{"miscellaneous/functions.html":{}}}],["file",{"_index":2,"title":{},"body":{"coverage.html":{}}}],["function",{"_index":14,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":39,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generated",{"_index":65,"title":{},"body":{"miscellaneous/functions.html":{}}}],["generatetoken",{"_index":23,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getting",{"_index":70,"title":{"index.html":{}},"body":{}}],["hash",{"_index":26,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["hash(value",{"_index":52,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hashed",{"_index":46,"title":{},"body":{"miscellaneous/functions.html":{}}}],["identifier",{"_index":4,"title":{},"body":{"coverage.html":{}}}],["index",{"_index":40,"title":{"index.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["iv",{"_index":56,"title":{},"body":{"miscellaneous/functions.html":{}}}],["key",{"_index":54,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../encoded",{"_index":86,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../encrypt.ts",{"_index":42,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/.../generate",{"_index":43,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../hash.ts",{"_index":41,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/crypto/src/lib/encoded",{"_index":6,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["libs/crypto/src/lib/encrypt.ts",{"_index":13,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/crypto/src/lib/generate",{"_index":21,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/crypto/src/lib/hash.ts",{"_index":24,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["license",{"_index":82,"title":{},"body":{"properties.html":{}}}],["link",{"_index":69,"title":{},"body":{"miscellaneous/functions.html":{}}}],["literal",{"_index":87,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["matching",{"_index":31,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":38,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":83,"title":{},"body":{"properties.html":{}}}],["modules",{"_index":77,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["name",{"_index":50,"title":{},"body":{"miscellaneous/functions.html":{}}}],["new",{"_index":27,"title":{},"body":{"coverage.html":{}}}],["nx/devkit",{"_index":34,"title":{},"body":{"dependencies.html":{}}}],["optional",{"_index":51,"title":{},"body":{"miscellaneous/functions.html":{}}}],["overview",{"_index":78,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":32,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["packages",{"_index":75,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":49,"title":{},"body":{"miscellaneous/functions.html":{}}}],["promise",{"_index":61,"title":{},"body":{"miscellaneous/functions.html":{}}}],["properties",{"_index":79,"title":{"properties.html":{}},"body":{"properties.html":{}}}],["randombytes",{"_index":67,"title":{},"body":{"miscellaneous/functions.html":{}}}],["raw",{"_index":47,"title":{},"body":{"miscellaneous/functions.html":{}}}],["results",{"_index":30,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":60,"title":{},"body":{"miscellaneous/functions.html":{}}}],["secret",{"_index":59,"title":{},"body":{"miscellaneous/functions.html":{}}}],["software",{"_index":73,"title":{},"body":{"index.html":{}}}],["started",{"_index":71,"title":{"index.html":{}},"body":{}}],["statements",{"_index":5,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":45,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":29,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":28,"title":{},"body":{"coverage.html":{}}}],["token.ts",{"_index":22,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["type",{"_index":3,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":84,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["using",{"_index":66,"title":{},"body":{"miscellaneous/functions.html":{}}}],["value",{"_index":48,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":19,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":88,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":80,"title":{},"body":{"properties.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        libs/crypto/src/lib/encoded-data.ts\n            \n            type alias\n            EncryptedData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/crypto/src/lib/encrypt.ts\n            \n            function\n            decrypt\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/crypto/src/lib/encrypt.ts\n            \n            function\n            encrypt\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/crypto/src/lib/encrypt.ts\n            \n            variable\n            ALGORITHM\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/crypto/src/lib/generate-token.ts\n            \n            function\n            generateToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/crypto/src/lib/hash.ts\n            \n            function\n            compare\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/crypto/src/lib/hash.ts\n            \n            function\n            hash\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nx/devkit : 20.3.2\n        \n            commander : ^13.1.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            compare   (libs/.../hash.ts)\n                        \n                        \n                            decrypt   (libs/.../encrypt.ts)\n                        \n                        \n                            encrypt   (libs/.../encrypt.ts)\n                        \n                        \n                            generateToken   (libs/.../generate-token.ts)\n                        \n                        \n                            hash   (libs/.../hash.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/crypto/src/lib/hash.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        compare\n                        \n                    \n                \n            \n            \n                \ncompare(value: string, hashed: string)\n                \n            \n\n\n\n\n            \n                \n                        Compare the raw value with hashed value\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                hashed\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hash\n                        \n                    \n                \n            \n            \n                \nhash(value: string)\n                \n            \n\n\n\n\n            \n                \n                        Hash string value\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    libs/crypto/src/lib/encrypt.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        decrypt\n                        \n                    \n                \n            \n            \n                \ndecrypt(encryptedData: EncryptedData, key: Buffer, iv: Buffer)\n                \n            \n\n\n\n\n            \n                \n                        Decrypt data\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                encryptedData\n                                            \n                                                            EncryptedData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                        \n                                                key\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    secret key\n\n                                            \n                                        \n                                        \n                                                iv\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    secret iv\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                decrypted data\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encrypt\n                        \n                    \n                \n            \n            \n                \nencrypt(value: string, key: Buffer, iv: Buffer)\n                \n            \n\n\n\n\n            \n                \n                        encrypt data\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    data to encrypt\n\n                                            \n                                        \n                                        \n                                                key\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    encryption key, can be generated using randomBytes\n\n                                            \n                                        \n                                        \n                                                iv\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    encryption iv, can be generated using randomBytes\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                encripted data {@link EncryptedData}\n\n                            \n                \n            \n        \n    \n    libs/crypto/src/lib/generate-token.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        generateToken\n                        \n                    \n                \n            \n            \n                \ngenerateToken()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nBrighline Software Comon Packages\nCommon packages\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n        \n            License : MIT\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EncryptedData   (libs/.../encoded-data.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/crypto/src/lib/encoded-data.ts\n    \n    \n        \n            \n                \n                    \n                    EncryptedData\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ALGORITHM   (libs/.../encrypt.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/crypto/src/lib/encrypt.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ALGORITHM\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'aes-256-cbc'\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
