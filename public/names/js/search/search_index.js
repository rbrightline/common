var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/coverage.html",[0,1.888]],["body/coverage.html",[0,1.109,1,1.551,2,1.551,3,1.5,4,1.551,5,1.551,6,1.173,7,1.5,8,2.154,9,1.173,10,3.231,11,0.109,12,3.231,13,2.604,14,1.551,15,1.551,16,1.173,17,1.173,18,1.109,19,1.109,20,1.109,21,1.109,22,1.173,23,1.109,24,0.818,25,1.551,26,1.551,27,1.551,28,0.071,29,0.071]],["title/dependencies.html",[30,1.21,31,1.693]],["body/dependencies.html",[11,0.111,28,0.099,29,0.099,31,1.841,32,2.575,33,2.575,34,2.575,35,2.575]],["title/miscellaneous/functions.html",[36,0.655,37,1.693]],["body/miscellaneous/functions.html",[3,1.079,6,0.369,7,0.963,8,0.85,9,0.817,11,0.095,16,0.369,17,0.817,18,0.501,19,0.85,20,0.501,21,1.108,22,0.369,23,0.85,24,0.369,28,0.038,29,0.038,36,0.271,37,0.501,38,0.369,39,0.501,40,0.501,41,0.701,42,0.701,43,0.501,44,0.701,45,3.257,46,1.19,47,0.701,48,1.108,49,1.108,50,1.307,51,2.047,52,2.775,53,2.497,54,1.55,55,1.55,56,2.047,57,2.047,58,0.701,59,1.19,60,1.19,61,2.047,62,1.55,63,1.55,64,2.226,65,1.55,66,0.701,67,0.701,68,0.85,69,1.19,70,1.19,71,1.19,72,2.226,73,0.701,74,0.701,75,0.701,76,0.701,77,1.19,78,0.701,79,0.701,80,0.701,81,0.701,82,0.701,83,0.701,84,0.701,85,0.701,86,0.701,87,0.701,88,0.701,89,1.19,90,0.701,91,0.701,92,1.55,93,1.55,94,1.19,95,1.55,96,0.701,97,1.19,98,1.19,99,0.701,100,0.701,101,0.701,102,1.55,103,0.701,104,1.19,105,1.19,106,1.19,107,0.701,108,0.701,109,0.701,110,0.701,111,0.701,112,0.701,113,0.701,114,0.701,115,0.701,116,0.701,117,0.701,118,0.701,119,0.701,120,0.701,121,0.701,122,0.701,123,0.701,124,0.701,125,0.701,126,0.701,127,0.701]],["title/index.html",[38,0.892,128,1.693,129,1.693]],["body/index.html",[11,0.1,28,0.1,29,0.1,130,2.606,131,2.606,132,2.606,133,3.137,134,2.606]],["title/modules.html",[135,1.888]],["body/modules.html",[11,0.104,28,0.104,29,0.104,135,1.979]],["title/overview.html",[136,1.888]],["body/overview.html",[11,0.104,28,0.104,29,0.104,136,1.979]],["title/properties.html",[30,1.21,137,1.693]],["body/properties.html",[11,0.108,28,0.102,29,0.102,137,1.908,138,2.668,139,2.668]],["title/miscellaneous/typealiases.html",[36,0.655,140,2.369]],["body/miscellaneous/typealiases.html",[3,1.642,6,1.007,7,1.642,9,1.357,11,0.082,16,1.007,17,1.357,22,1.007,24,1.357,28,0.082,29,0.082,36,0.739,38,1.007,39,1.366,40,1.366,43,1.366,48,1.366,49,1.366,50,1.366,68,1.366,141,1.911,142,2.911,143,2.574,144,1.911,145,1.911,146,1.911,147,1.911,148,1.911]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":14,"title":{},"body":{"coverage.html":{}}}],["0/1",{"_index":15,"title":{},"body":{"coverage.html":{}}}],["1/1",{"_index":12,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":10,"title":{},"body":{"coverage.html":{}}}],["13.1.0",{"_index":35,"title":{},"body":{"dependencies.html":{}}}],["20.3.2",{"_index":33,"title":{},"body":{"dependencies.html":{}}}],["8.1.1",{"_index":139,"title":{},"body":{"properties.html":{}}}],["adding",{"_index":91,"title":{},"body":{"miscellaneous/functions.html":{}}}],["alias",{"_index":13,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":141,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["api",{"_index":49,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["applied",{"_index":110,"title":{},"body":{"miscellaneous/functions.html":{}}}],["auth",{"_index":47,"title":{},"body":{"miscellaneous/functions.html":{}}}],["authpaths",{"_index":9,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["authpaths(prefix",{"_index":44,"title":{},"body":{"miscellaneous/functions.html":{}}}],["before",{"_index":93,"title":{},"body":{"miscellaneous/functions.html":{}}}],["brighline",{"_index":130,"title":{},"body":{"index.html":{}}}],["camelcase",{"_index":71,"title":{},"body":{"miscellaneous/functions.html":{}}}],["capitalized",{"_index":116,"title":{},"body":{"miscellaneous/functions.html":{}}}],["capitalizing",{"_index":96,"title":{},"body":{"miscellaneous/functions.html":{}}}],["case",{"_index":61,"title":{},"body":{"miscellaneous/functions.html":{}}}],["checks",{"_index":111,"title":{},"body":{"miscellaneous/functions.html":{}}}],["commander",{"_index":34,"title":{},"body":{"dependencies.html":{}}}],["common",{"_index":134,"title":{},"body":{"index.html":{}}}],["comon",{"_index":132,"title":{},"body":{"index.html":{}}}],["constant_case",{"_index":74,"title":{},"body":{"miscellaneous/functions.html":{}}}],["constcase",{"_index":73,"title":{},"body":{"miscellaneous/functions.html":{}}}],["containing",{"_index":70,"title":{},"body":{"miscellaneous/functions.html":{}}}],["contains",{"_index":112,"title":{},"body":{"miscellaneous/functions.html":{}}}],["controllername",{"_index":82,"title":{},"body":{"miscellaneous/functions.html":{}}}],["conventions",{"_index":145,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["coverage",{"_index":0,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["custom",{"_index":100,"title":{},"body":{"miscellaneous/functions.html":{}}}],["default",{"_index":54,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defaults",{"_index":126,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":65,"title":{},"body":{"miscellaneous/functions.html":{}}}],["different",{"_index":68,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["documentation",{"_index":1,"title":{},"body":{"coverage.html":{}}}],["dollar",{"_index":114,"title":{},"body":{"miscellaneous/functions.html":{}}}],["each",{"_index":124,"title":{},"body":{"miscellaneous/functions.html":{}}}],["empty",{"_index":127,"title":{},"body":{"miscellaneous/functions.html":{}}}],["endpoints",{"_index":148,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["english",{"_index":119,"title":{},"body":{"miscellaneous/functions.html":{}}}],["file",{"_index":2,"title":{},"body":{"coverage.html":{}}}],["first",{"_index":97,"title":{},"body":{"miscellaneous/functions.html":{}}}],["following",{"_index":118,"title":{},"body":{"miscellaneous/functions.html":{}}}],["format",{"_index":72,"title":{},"body":{"miscellaneous/functions.html":{}}}],["formats",{"_index":62,"title":{},"body":{"miscellaneous/functions.html":{}}}],["function",{"_index":8,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":37,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":46,"title":{},"body":{"miscellaneous/functions.html":{}}}],["generates",{"_index":59,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getting",{"_index":128,"title":{"index.html":{}},"body":{}}],["given",{"_index":63,"title":{},"body":{"miscellaneous/functions.html":{}}}],["grammer",{"_index":120,"title":{},"body":{"miscellaneous/functions.html":{}}}],["identifier",{"_index":4,"title":{},"body":{"coverage.html":{}}}],["index",{"_index":38,"title":{"index.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["input",{"_index":102,"title":{},"body":{"miscellaneous/functions.html":{}}}],["kebab",{"_index":76,"title":{},"body":{"miscellaneous/functions.html":{}}}],["kebabcase",{"_index":75,"title":{},"body":{"miscellaneous/functions.html":{}}}],["letter",{"_index":98,"title":{},"body":{"miscellaneous/functions.html":{}}}],["letters",{"_index":95,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../auth",{"_index":39,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["libs/.../names.ts",{"_index":40,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["libs/.../normalize.ts",{"_index":41,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../pluralize.ts",{"_index":42,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../rest",{"_index":43,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["libs/names/src/lib/auth",{"_index":6,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["libs/names/src/lib/names.ts",{"_index":16,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["libs/names/src/lib/normalize.ts",{"_index":18,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/names/src/lib/pluralize.ts",{"_index":20,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/names/src/lib/rest",{"_index":22,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["literal",{"_index":142,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["matching",{"_index":29,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["miscellaneous",{"_index":36,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["modulename",{"_index":86,"title":{},"body":{"miscellaneous/functions.html":{}}}],["modules",{"_index":135,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["name",{"_index":52,"title":{},"body":{"miscellaneous/functions.html":{}}}],["namecontroller",{"_index":83,"title":{},"body":{"miscellaneous/functions.html":{}}}],["namemodule",{"_index":87,"title":{},"body":{"miscellaneous/functions.html":{}}}],["names",{"_index":17,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["names(resourcename",{"_index":58,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nameservice",{"_index":85,"title":{},"body":{"miscellaneous/functions.html":{}}}],["naming",{"_index":144,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["new",{"_index":25,"title":{},"body":{"coverage.html":{}}}],["normalization",{"_index":108,"title":{},"body":{"miscellaneous/functions.html":{}}}],["normalize",{"_index":19,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["normalize(value",{"_index":88,"title":{},"body":{"miscellaneous/functions.html":{}}}],["normalized",{"_index":106,"title":{},"body":{"miscellaneous/functions.html":{}}}],["normalizes",{"_index":90,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nx/devkit",{"_index":32,"title":{},"body":{"dependencies.html":{}}}],["object",{"_index":69,"title":{},"body":{"miscellaneous/functions.html":{}}}],["optional",{"_index":53,"title":{},"body":{"miscellaneous/functions.html":{}}}],["optionally",{"_index":99,"title":{},"body":{"miscellaneous/functions.html":{}}}],["overview",{"_index":136,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":30,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["packages",{"_index":133,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":51,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pascalcase",{"_index":77,"title":{},"body":{"miscellaneous/functions.html":{}}}],["path",{"_index":125,"title":{},"body":{"miscellaneous/functions.html":{}}}],["paths",{"_index":50,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["paths.ts",{"_index":7,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["pluralize",{"_index":21,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["pluralize(word",{"_index":117,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pre",{"_index":101,"title":{},"body":{"miscellaneous/functions.html":{}}}],["prefix",{"_index":56,"title":{},"body":{"miscellaneous/functions.html":{}}}],["preinputvalidator",{"_index":89,"title":{},"body":{"miscellaneous/functions.html":{}}}],["prepend",{"_index":123,"title":{},"body":{"miscellaneous/functions.html":{}}}],["properties",{"_index":137,"title":{"properties.html":{}},"body":{"properties.html":{}}}],["provided",{"_index":104,"title":{},"body":{"miscellaneous/functions.html":{}}}],["represents",{"_index":143,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["resource",{"_index":64,"title":{},"body":{"miscellaneous/functions.html":{}}}],["resourcename",{"_index":66,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rest",{"_index":48,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["restapipaths",{"_index":24,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["restpaths",{"_index":23,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["restpaths(name",{"_index":122,"title":{},"body":{"miscellaneous/functions.html":{}}}],["results",{"_index":28,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["returns",{"_index":57,"title":{},"body":{"miscellaneous/functions.html":{}}}],["servicename",{"_index":84,"title":{},"body":{"miscellaneous/functions.html":{}}}],["signs",{"_index":115,"title":{},"body":{"miscellaneous/functions.html":{}}}],["snake_case",{"_index":79,"title":{},"body":{"miscellaneous/functions.html":{}}}],["snakecase",{"_index":78,"title":{},"body":{"miscellaneous/functions.html":{}}}],["software",{"_index":131,"title":{},"body":{"index.html":{}}}],["spaces",{"_index":92,"title":{},"body":{"miscellaneous/functions.html":{}}}],["started",{"_index":129,"title":{"index.html":{}},"body":{}}],["statements",{"_index":5,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":45,"title":{},"body":{"miscellaneous/functions.html":{}}}],["strings",{"_index":146,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["table",{"_index":27,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":26,"title":{},"body":{"coverage.html":{}}}],["title",{"_index":81,"title":{},"body":{"miscellaneous/functions.html":{}}}],["titlecase",{"_index":80,"title":{},"body":{"miscellaneous/functions.html":{}}}],["transformed",{"_index":67,"title":{},"body":{"miscellaneous/functions.html":{}}}],["type",{"_index":3,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":140,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["underscores",{"_index":113,"title":{},"body":{"miscellaneous/functions.html":{}}}],["uppercase",{"_index":94,"title":{},"body":{"miscellaneous/functions.html":{}}}],["used",{"_index":147,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["validate",{"_index":105,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validation",{"_index":109,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validator",{"_index":103,"title":{},"body":{"miscellaneous/functions.html":{}}}],["value",{"_index":55,"title":{},"body":{"miscellaneous/functions.html":{}}}],["various",{"_index":60,"title":{},"body":{"miscellaneous/functions.html":{}}}],["version",{"_index":138,"title":{},"body":{"properties.html":{}}}],["word",{"_index":121,"title":{},"body":{"miscellaneous/functions.html":{}}}],["yes",{"_index":107,"title":{},"body":{"miscellaneous/functions.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        libs/names/src/lib/auth-paths.ts\n            \n            function\n            authPaths\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/names/src/lib/auth-paths.ts\n            \n            type alias\n            AuthPaths\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/names/src/lib/names.ts\n            \n            function\n            names\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/names/src/lib/names.ts\n            \n            type alias\n            Names\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/names/src/lib/normalize.ts\n            \n            function\n            normalize\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/names/src/lib/pluralize.ts\n            \n            function\n            pluralize\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/names/src/lib/rest-paths.ts\n            \n            function\n            restPaths\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/names/src/lib/rest-paths.ts\n            \n            type alias\n            RestApiPaths\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nx/devkit : 20.3.2\n        \n            commander : ^13.1.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            authPaths   (libs/.../auth-paths.ts)\n                        \n                        \n                            names   (libs/.../names.ts)\n                        \n                        \n                            normalize   (libs/.../normalize.ts)\n                        \n                        \n                            pluralize   (libs/.../pluralize.ts)\n                        \n                        \n                            restPaths   (libs/.../rest-paths.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/names/src/lib/auth-paths.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authPaths\n                        \n                    \n                \n            \n            \n                \nauthPaths(prefix: string)\n                \n            \n\n\n\n\n            \n                \n                        Generate auth-rest-api paths\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                prefix\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         AuthPaths\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    libs/names/src/lib/names.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        names\n                        \n                    \n                \n            \n            \n                \nnames(resourceName: string)\n                \n            \n\n\n\n\n            \n                \n                        Generates various case formats for a given resource name.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resourceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the resource to be transformed into different case formats.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Names\n\n                        \n                            \n                                An object containing the resource name in different case formats:\n\ncamelCase: camelCase format.\nconstCase: CONSTANT_CASE format.\nkebabCase: kebab-case format.\npascalCase: PascalCase format.\nsnakeCase: snake_case format.\ntitleCase: Title Case format.\ncontrollerName: NameController.\nserviceName: Nameservice.\nmoduleName: NameModule.\n\n\n                            \n                \n            \n        \n    \n    libs/names/src/lib/normalize.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        normalize\n                        \n                    \n                \n            \n            \n                \nnormalize(value: string, preInputValidator?)\n                \n            \n\n\n\n\n            \n                \n                        Normalizes a given string by adding spaces before uppercase letters and capitalizing the first letter.\nOptionally, a custom pre-input validator function can be provided to validate the input string.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe string to be normalized.\n\n\n                                            \n                                        \n                                        \n                                                preInputValidator\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nAn optional function to validate the input string before normalization.\nIf not provided, a default validation is applied which checks if the string\ncontains only letters, underscores, dollar signs, and spaces.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The normalized string with spaces before uppercase letters and the first letter capitalized.\n\n                            \n                \n            \n        \n    \n    libs/names/src/lib/pluralize.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        pluralize\n                        \n                    \n                \n            \n            \n                \npluralize(word: string)\n                \n            \n\n\n\n\n            \n                \n                        Pluralize string following english grammer\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                word\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    libs/names/src/lib/rest-paths.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        restPaths\n                        \n                    \n                \n            \n            \n                \nrestPaths(name: string, prefix: string)\n                \n            \n\n\n\n\n            \n                \n                        Generates REST API paths for a given resource name with an optional prefix.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe name of the resource for which to generate paths.\n\n\n                                            \n                                        \n                                        \n                                                prefix\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                            \n                                                    \nAn optional prefix to prepend to each path. Defaults to an empty string.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         RestApiPaths\n\n                        \n                            \n                                An object containing various REST API paths for the resource.\n\n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nBrighline Software Comon Packages\nCommon packages\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 8.1.1\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthPaths   (libs/.../auth-paths.ts)\n                        \n                        \n                            Names   (libs/.../names.ts)\n                        \n                        \n                            RestApiPaths   (libs/.../rest-paths.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/names/src/lib/auth-paths.ts\n    \n    \n        \n            \n                \n                    \n                    AuthPaths\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    libs/names/src/lib/names.ts\n    \n    \n        \n            \n                \n                    \n                    Names\n                \n            \n            \n                \n                    Represents different naming conventions for strings.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    libs/names/src/lib/rest-paths.ts\n    \n    \n        \n            \n                \n                    \n                    RestApiPaths\n                \n            \n            \n                \n                    Represents the paths used in REST API endpoints.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
