var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/coverage.html",[0,1.888]],["body/coverage.html",[0,1.438,1,1.438,2,2.012,3,1.743,4,2.012,5,2.012,6,1.404,7,1.676,8,2.364,9,1.404,10,3.467,11,0.116,12,3.467,13,3.179,14,2.664,15,2.664,16,1.574,17,0.732,18,1.061,19,1.438,20,1.438,21,1.438,22,1.438,23,1.404,24,1.438,25,1.061,26,2.012,27,2.012,28,2.012,29,0.085,30,0.085]],["title/dependencies.html",[31,1.21,32,1.693]],["body/dependencies.html",[11,0.114,29,0.104,30,0.104,32,1.997,33,2.793,34,1.997,35,2.793,36,2.793]],["title/miscellaneous/functions.html",[37,0.655,38,1.693]],["body/miscellaneous/functions.html",[3,1.398,6,0.605,7,1.292,8,1.272,9,1.148,11,0.107,16,0.605,17,0.598,18,0.938,19,0.821,20,1.272,21,0.821,22,1.556,23,0.605,24,1.272,25,0.605,29,0.057,30,0.057,37,0.444,38,0.821,39,0.605,40,0.821,41,0.821,42,1.149,43,1.149,44,0.821,45,1.149,46,3.55,47,1.779,48,1.149,49,1.148,50,0.842,51,0.948,52,2.652,53,2.308,54,3.023,55,2.177,56,2.177,57,1.896,58,2.652,59,1.149,60,1.779,61,1.779,62,1.779,63,2.652,64,2.177,65,2.177,66,2.005,67,1.556,68,1.149,69,1.149,70,1.272,71,1.779,72,1.779,73,1.779,74,1.779,75,2.805,76,1.149,77,1.149,78,1.149,79,1.149,80,1.779,81,1.149,82,1.149,83,1.149,84,1.149,85,1.149,86,1.149,87,1.149,88,1.149,89,1.149,90,1.149,91,1.149,92,1.779,93,1.149,94,1.149,95,2.177,96,2.177,97,1.779,98,2.177,99,1.149,100,1.779,101,1.779,102,1.149,103,1.149,104,1.149,105,2.177,106,1.149,107,1.779,108,1.779,109,1.779,110,1.149,111,1.149,112,1.149,113,1.149,114,1.149,115,1.149,116,1.149,117,1.149,118,1.149,119,1.149,120,1.149,121,1.149,122,1.149,123,1.149,124,1.149,125,1.149,126,1.149,127,1.149,128,1.149,129,1.149]],["title/index.html",[39,0.892,130,1.693,131,1.693]],["body/index.html",[1,0.988,11,0.121,17,0.485,29,0.044,30,0.044,49,0.441,50,0.534,51,0.682,57,0.599,132,1.381,133,0.837,134,0.837,135,0.837,136,0.837,137,0.837,138,0.837,139,2.046,140,0.837,141,0.837,142,0.837,143,0.837,144,0.837,145,0.837,146,3.763,147,1.381,148,0.837,149,0.837,150,0.837,151,0.837,152,0.837,153,0.837,154,0.837,155,0.837,156,0.837,157,0.837,158,0.837,159,0.837,160,0.837,161,0.837,162,0.837,163,0.837,164,0.837,165,0.837,166,0.837,167,0.837,168,0.837,169,0.837,170,0.837,171,0.837,172,0.837,173,0.837,174,0.837,175,0.837,176,0.837,177,0.837,178,0.837,179,0.837,180,0.837,181,0.837,182,2.046,183,2.046,184,3.067,185,2.046,186,2.046,187,2.046,188,1.381,189,2.046,190,1.381,191,2.046,192,2.792,193,2.046,194,2.046,195,2.046,196,2.046,197,1.381,198,2.046,199,1.381,200,2.046,201,1.381,202,2.046,203,1.381,204,2.046,205,1.381,206,2.046,207,1.381,208,2.046,209,1.381,210,2.046,211,0.837,212,1.381,213,0.837,214,0.837,215,1.763,216,0.837,217,0.837,218,0.837,219,0.837,220,0.837,221,0.837,222,0.837,223,0.837,224,0.837,225,1.381,226,0.837,227,0.837,228,1.763,229,0.837,230,0.837,231,0.837,232,0.837,233,0.837,234,0.837,235,0.837,236,0.837,237,0.837,238,0.837,239,0.837]],["title/modules.html",[240,1.888]],["body/modules.html",[11,0.107,29,0.107,30,0.107,240,2.072]],["title/overview.html",[241,1.888]],["body/overview.html",[11,0.107,29,0.107,30,0.107,241,2.072]],["title/properties.html",[31,1.21,242,1.693]],["body/properties.html",[11,0.117,17,0.815,29,0.095,30,0.095,34,1.698,50,1.25,51,1.25,53,1.698,66,1.698,67,1.698,242,1.698,243,2.964,244,2.375,245,2.375,246,2.375,247,2.375,248,2.375,249,2.375,250,2.375,251,2.375,252,2.375,253,2.375,254,2.375,255,2.375,256,2.375,257,2.375]],["title/miscellaneous/typealiases.html",[37,0.655,258,2.369]],["body/miscellaneous/typealiases.html",[3,1.819,6,1.214,7,1.764,9,1.533,11,0.093,16,1.214,17,0.799,18,1.533,23,1.214,25,1.533,29,0.093,30,0.093,37,0.891,39,1.214,40,1.647,41,2.079,44,1.647,49,1.214,50,0.891,51,0.891,70,1.647,259,2.304,260,3.347,261,2.908,262,2.304,263,2.304,264,2.304,265,2.304,266,2.304]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":14,"title":{},"body":{"coverage.html":{}}}],["0.5.11",{"_index":36,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":15,"title":{},"body":{"coverage.html":{}}}],["1/1",{"_index":12,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":10,"title":{},"body":{"coverage.html":{}}}],["9.5.0",{"_index":34,"title":{},"body":{"dependencies.html":{},"properties.html":{}}}],["ab",{"_index":192,"title":{},"body":{"index.html":{}}}],["ab.c",{"_index":190,"title":{},"body":{"index.html":{}}}],["ab.cso",{"_index":227,"title":{},"body":{"index.html":{}}}],["ab_c",{"_index":188,"title":{},"body":{"index.html":{}}}],["ab_cso",{"_index":226,"title":{},"body":{"index.html":{}}}],["abc",{"_index":186,"title":{},"body":{"index.html":{}}}],["abccontroller",{"_index":201,"title":{},"body":{"index.html":{}}}],["abccontrollerso",{"_index":231,"title":{},"body":{"index.html":{}}}],["abcmodel",{"_index":205,"title":{},"body":{"index.html":{}}}],["abcmodelso",{"_index":233,"title":{},"body":{"index.html":{}}}],["abcmodule",{"_index":197,"title":{},"body":{"index.html":{}}}],["abcmoduleso",{"_index":229,"title":{},"body":{"index.html":{}}}],["abcoptions",{"_index":203,"title":{},"body":{"index.html":{}}}],["abcoptionsso",{"_index":232,"title":{},"body":{"index.html":{}}}],["abcservice",{"_index":199,"title":{},"body":{"index.html":{}}}],["abcserviceso",{"_index":230,"title":{},"body":{"index.html":{}}}],["abcso",{"_index":225,"title":{},"body":{"index.html":{}}}],["add",{"_index":141,"title":{},"body":{"index.html":{}}}],["adding",{"_index":94,"title":{},"body":{"miscellaneous/functions.html":{}}}],["alias",{"_index":13,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":259,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["api",{"_index":50,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["applied",{"_index":112,"title":{},"body":{"miscellaneous/functions.html":{}}}],["auth",{"_index":48,"title":{},"body":{"miscellaneous/functions.html":{}}}],["authentication",{"_index":136,"title":{},"body":{"index.html":{}}}],["author",{"_index":255,"title":{},"body":{"properties.html":{}}}],["authpaths",{"_index":9,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["authpaths(prefix",{"_index":45,"title":{},"body":{"miscellaneous/functions.html":{}}}],["before",{"_index":96,"title":{},"body":{"miscellaneous/functions.html":{}}}],["boxes",{"_index":174,"title":{},"body":{"index.html":{}}}],["brightline",{"_index":257,"title":{},"body":{"properties.html":{}}}],["brushes",{"_index":178,"title":{},"body":{"index.html":{}}}],["buses",{"_index":172,"title":{},"body":{"index.html":{}}}],["buzzes",{"_index":176,"title":{},"body":{"index.html":{}}}],["c",{"_index":184,"title":{},"body":{"index.html":{}}}],["camelcase",{"_index":74,"title":{},"body":{"miscellaneous/functions.html":{}}}],["capitalized",{"_index":118,"title":{},"body":{"miscellaneous/functions.html":{}}}],["capitalizing",{"_index":99,"title":{},"body":{"miscellaneous/functions.html":{}}}],["case",{"_index":63,"title":{},"body":{"miscellaneous/functions.html":{}}}],["categories",{"_index":147,"title":{},"body":{"index.html":{}}}],["categories/count",{"_index":157,"title":{},"body":{"index.html":{}}}],["category",{"_index":149,"title":{},"body":{"index.html":{}}}],["category/:id",{"_index":151,"title":{},"body":{"index.html":{}}}],["category/:id/:relationname",{"_index":159,"title":{},"body":{"index.html":{}}}],["category/:id/:relationname/:relationid",{"_index":161,"title":{},"body":{"index.html":{}}}],["category/:id/decrement",{"_index":155,"title":{},"body":{"index.html":{}}}],["category/:id/file",{"_index":163,"title":{},"body":{"index.html":{}}}],["category/:id/img',pluralize",{"_index":165,"title":{},"body":{"index.html":{}}}],["category/:id/increment",{"_index":153,"title":{},"body":{"index.html":{}}}],["cats",{"_index":169,"title":{},"body":{"index.html":{}}}],["checks",{"_index":113,"title":{},"body":{"miscellaneous/functions.html":{}}}],["churches",{"_index":180,"title":{},"body":{"index.html":{}}}],["constant_case",{"_index":77,"title":{},"body":{"miscellaneous/functions.html":{}}}],["constcase",{"_index":76,"title":{},"body":{"miscellaneous/functions.html":{}}}],["containing",{"_index":73,"title":{},"body":{"miscellaneous/functions.html":{}}}],["contains",{"_index":114,"title":{},"body":{"miscellaneous/functions.html":{}}}],["controllername",{"_index":85,"title":{},"body":{"miscellaneous/functions.html":{}}}],["conventions",{"_index":263,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["coverage",{"_index":0,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":134,"title":{},"body":{"index.html":{}}}],["createabcdto",{"_index":207,"title":{},"body":{"index.html":{}}}],["createabcdtoso",{"_index":234,"title":{},"body":{"index.html":{}}}],["cso",{"_index":228,"title":{},"body":{"index.html":{}}}],["custom",{"_index":103,"title":{},"body":{"miscellaneous/functions.html":{}}}],["default",{"_index":55,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defaults",{"_index":128,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dependencies",{"_index":32,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":67,"title":{},"body":{"miscellaneous/functions.html":{},"properties.html":{}}}],["detailed",{"_index":239,"title":{},"body":{"index.html":{}}}],["different",{"_index":70,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["documentation",{"_index":1,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dollar",{"_index":116,"title":{},"body":{"miscellaneous/functions.html":{}}}],["each",{"_index":126,"title":{},"body":{"miscellaneous/functions.html":{}}}],["empty",{"_index":129,"title":{},"body":{"miscellaneous/functions.html":{}}}],["endpoints",{"_index":266,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["english",{"_index":121,"title":{},"body":{"miscellaneous/functions.html":{}}}],["example",{"_index":139,"title":{},"body":{"index.html":{}}}],["file",{"_index":2,"title":{},"body":{"coverage.html":{}}}],["first",{"_index":100,"title":{},"body":{"miscellaneous/functions.html":{}}}],["following",{"_index":120,"title":{},"body":{"miscellaneous/functions.html":{}}}],["format",{"_index":75,"title":{},"body":{"miscellaneous/functions.html":{}}}],["formats",{"_index":64,"title":{},"body":{"miscellaneous/functions.html":{}}}],["function",{"_index":8,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":38,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":47,"title":{},"body":{"miscellaneous/functions.html":{}}}],["generates",{"_index":61,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getting",{"_index":130,"title":{"index.html":{}},"body":{}}],["given",{"_index":65,"title":{},"body":{"miscellaneous/functions.html":{}}}],["grammer",{"_index":122,"title":{},"body":{"miscellaneous/functions.html":{}}}],["homepage",{"_index":249,"title":{},"body":{"properties.html":{}}}],["https://github.com/rbrightline/common/tree/main/libs/names",{"_index":254,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io/common/names",{"_index":250,"title":{},"body":{"properties.html":{}}}],["id",{"_index":247,"title":{},"body":{"properties.html":{}}}],["identifier",{"_index":4,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":181,"title":{},"body":{"index.html":{}}}],["index",{"_index":39,"title":{"index.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["input",{"_index":105,"title":{},"body":{"miscellaneous/functions.html":{}}}],["installation",{"_index":138,"title":{},"body":{"index.html":{}}}],["kebab",{"_index":79,"title":{},"body":{"miscellaneous/functions.html":{}}}],["kebabcase",{"_index":78,"title":{},"body":{"miscellaneous/functions.html":{}}}],["keywords",{"_index":244,"title":{},"body":{"properties.html":{}}}],["letter",{"_index":101,"title":{},"body":{"miscellaneous/functions.html":{}}}],["letters",{"_index":98,"title":{},"body":{"miscellaneous/functions.html":{}}}],["license",{"_index":251,"title":{},"body":{"properties.html":{}}}],["literal",{"_index":260,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["matching",{"_index":30,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["miscellaneous",{"_index":37,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["mit",{"_index":252,"title":{},"body":{"properties.html":{}}}],["modulename",{"_index":89,"title":{},"body":{"miscellaneous/functions.html":{}}}],["modules",{"_index":240,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["n",{"_index":182,"title":{},"body":{"index.html":{}}}],["n.camelcase",{"_index":185,"title":{},"body":{"index.html":{}}}],["n.constcase",{"_index":187,"title":{},"body":{"index.html":{}}}],["n.controllername",{"_index":200,"title":{},"body":{"index.html":{}}}],["n.createdtoname",{"_index":206,"title":{},"body":{"index.html":{}}}],["n.dotcase",{"_index":189,"title":{},"body":{"index.html":{}}}],["n.kebabcase",{"_index":191,"title":{},"body":{"index.html":{}}}],["n.modelname",{"_index":204,"title":{},"body":{"index.html":{}}}],["n.modulename",{"_index":196,"title":{},"body":{"index.html":{}}}],["n.optionsname",{"_index":202,"title":{},"body":{"index.html":{}}}],["n.pascalcase",{"_index":193,"title":{},"body":{"index.html":{}}}],["n.querydtoname",{"_index":210,"title":{},"body":{"index.html":{}}}],["n.sentencecase",{"_index":195,"title":{},"body":{"index.html":{}}}],["n.servicename",{"_index":198,"title":{},"body":{"index.html":{}}}],["n.titlecase",{"_index":194,"title":{},"body":{"index.html":{}}}],["n.updatedtoname",{"_index":208,"title":{},"body":{"index.html":{}}}],["name",{"_index":53,"title":{},"body":{"miscellaneous/functions.html":{},"properties.html":{}}}],["namecontroller",{"_index":86,"title":{},"body":{"miscellaneous/functions.html":{}}}],["namemodule",{"_index":90,"title":{},"body":{"miscellaneous/functions.html":{}}}],["names",{"_index":17,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["names('ab",{"_index":183,"title":{},"body":{"index.html":{}}}],["names(resourcename",{"_index":59,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nameservice",{"_index":88,"title":{},"body":{"miscellaneous/functions.html":{}}}],["namesoption",{"_index":18,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["naming",{"_index":262,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["new",{"_index":26,"title":{},"body":{"coverage.html":{}}}],["normalization",{"_index":110,"title":{},"body":{"miscellaneous/functions.html":{}}}],["normalize",{"_index":20,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["normalize(value",{"_index":91,"title":{},"body":{"miscellaneous/functions.html":{}}}],["normalized",{"_index":109,"title":{},"body":{"miscellaneous/functions.html":{}}}],["normalizes",{"_index":93,"title":{},"body":{"miscellaneous/functions.html":{}}}],["object",{"_index":72,"title":{},"body":{"miscellaneous/functions.html":{}}}],["open",{"_index":248,"title":{},"body":{"properties.html":{}}}],["optional",{"_index":54,"title":{},"body":{"miscellaneous/functions.html":{}}}],["optionally",{"_index":102,"title":{},"body":{"miscellaneous/functions.html":{}}}],["options",{"_index":60,"title":{},"body":{"miscellaneous/functions.html":{}}}],["output",{"_index":146,"title":{},"body":{"index.html":{}}}],["overview",{"_index":241,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":31,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":52,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pascalcase",{"_index":80,"title":{},"body":{"miscellaneous/functions.html":{}}}],["path",{"_index":127,"title":{},"body":{"miscellaneous/functions.html":{}}}],["paths",{"_index":51,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["paths.ts",{"_index":7,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["people",{"_index":167,"title":{},"body":{"index.html":{}}}],["plural",{"_index":246,"title":{},"body":{"properties.html":{}}}],["pluralize",{"_index":22,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["pluralize('box",{"_index":173,"title":{},"body":{"index.html":{}}}],["pluralize('brush",{"_index":177,"title":{},"body":{"index.html":{}}}],["pluralize('bus",{"_index":171,"title":{},"body":{"index.html":{}}}],["pluralize('buzz",{"_index":175,"title":{},"body":{"index.html":{}}}],["pluralize('cat",{"_index":168,"title":{},"body":{"index.html":{}}}],["pluralize('category",{"_index":170,"title":{},"body":{"index.html":{}}}],["pluralize('church",{"_index":179,"title":{},"body":{"index.html":{}}}],["pluralize('person",{"_index":166,"title":{},"body":{"index.html":{}}}],["pluralize(word",{"_index":119,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pnpm",{"_index":140,"title":{},"body":{"index.html":{}}}],["pre",{"_index":104,"title":{},"body":{"miscellaneous/functions.html":{}}}],["prefix",{"_index":57,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["preinputvalidator",{"_index":92,"title":{},"body":{"miscellaneous/functions.html":{}}}],["prepend",{"_index":125,"title":{},"body":{"miscellaneous/functions.html":{}}}],["properties",{"_index":242,"title":{"properties.html":{}},"body":{"properties.html":{}}}],["provided",{"_index":107,"title":{},"body":{"miscellaneous/functions.html":{}}}],["queryabcdto",{"_index":211,"title":{},"body":{"index.html":{}}}],["queryabcdtoso",{"_index":236,"title":{},"body":{"index.html":{}}}],["queryabcdto|'documentation",{"_index":238,"title":{},"body":{"index.html":{}}}],["r",{"_index":143,"title":{},"body":{"index.html":{}}}],["r.count",{"_index":156,"title":{},"body":{"index.html":{}}}],["r.decrement",{"_index":154,"title":{},"body":{"index.html":{}}}],["r.file",{"_index":162,"title":{},"body":{"index.html":{}}}],["r.id",{"_index":150,"title":{},"body":{"index.html":{}}}],["r.img",{"_index":164,"title":{},"body":{"index.html":{}}}],["r.increment",{"_index":152,"title":{},"body":{"index.html":{}}}],["r.plural",{"_index":145,"title":{},"body":{"index.html":{}}}],["r.relation",{"_index":158,"title":{},"body":{"index.html":{}}}],["r.relationid",{"_index":160,"title":{},"body":{"index.html":{}}}],["r.singular",{"_index":148,"title":{},"body":{"index.html":{}}}],["repository",{"_index":253,"title":{},"body":{"properties.html":{}}}],["represents",{"_index":261,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["resource",{"_index":66,"title":{},"body":{"miscellaneous/functions.html":{},"properties.html":{}}}],["resourcename",{"_index":68,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rest",{"_index":49,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["restapipaths",{"_index":25,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["restfull",{"_index":135,"title":{},"body":{"index.html":{}}}],["restpaths",{"_index":24,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["restpaths('category",{"_index":144,"title":{},"body":{"index.html":{}}}],["restpaths(name",{"_index":124,"title":{},"body":{"miscellaneous/functions.html":{}}}],["results",{"_index":29,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["returns",{"_index":58,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rline",{"_index":245,"title":{},"body":{"properties.html":{}}}],["rline/is",{"_index":33,"title":{},"body":{"dependencies.html":{}}}],["rline/names",{"_index":132,"title":{},"body":{"index.html":{}}}],["rline/namesusage",{"_index":142,"title":{},"body":{"index.html":{}}}],["robert",{"_index":256,"title":{},"body":{"properties.html":{}}}],["service",{"_index":137,"title":{},"body":{"index.html":{}}}],["servicename",{"_index":87,"title":{},"body":{"miscellaneous/functions.html":{}}}],["signs",{"_index":117,"title":{},"body":{"miscellaneous/functions.html":{}}}],["snake_case",{"_index":82,"title":{},"body":{"miscellaneous/functions.html":{}}}],["snakecase",{"_index":81,"title":{},"body":{"miscellaneous/functions.html":{}}}],["soab",{"_index":215,"title":{},"body":{"index.html":{}}}],["soab.c",{"_index":214,"title":{},"body":{"index.html":{}}}],["soab_c",{"_index":213,"title":{},"body":{"index.html":{}}}],["soabc",{"_index":212,"title":{},"body":{"index.html":{}}}],["soabccontroller",{"_index":218,"title":{},"body":{"index.html":{}}}],["soabcmodel",{"_index":220,"title":{},"body":{"index.html":{}}}],["soabcmodule",{"_index":216,"title":{},"body":{"index.html":{}}}],["soabcoptions",{"_index":219,"title":{},"body":{"index.html":{}}}],["soabcservice",{"_index":217,"title":{},"body":{"index.html":{}}}],["socreateabcdto",{"_index":221,"title":{},"body":{"index.html":{}}}],["soqueryabcdto",{"_index":223,"title":{},"body":{"index.html":{}}}],["soupdateabcdto",{"_index":222,"title":{},"body":{"index.html":{}}}],["spaces",{"_index":95,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../auth",{"_index":40,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../names.ts",{"_index":41,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../normalize.ts",{"_index":42,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../pluralize.ts",{"_index":43,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../rest",{"_index":44,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/auth",{"_index":6,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/names.ts",{"_index":16,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/normalize.ts",{"_index":19,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/pluralize.ts",{"_index":21,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/rest",{"_index":23,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["started",{"_index":131,"title":{"index.html":{}},"body":{}}],["statements",{"_index":5,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":46,"title":{},"body":{"miscellaneous/functions.html":{}}}],["strings",{"_index":264,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["suffix",{"_index":224,"title":{},"body":{"index.html":{}}}],["swc/helpers",{"_index":35,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":28,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":27,"title":{},"body":{"coverage.html":{}}}],["title",{"_index":84,"title":{},"body":{"miscellaneous/functions.html":{}}}],["titlecase",{"_index":83,"title":{},"body":{"miscellaneous/functions.html":{}}}],["transformed",{"_index":69,"title":{},"body":{"miscellaneous/functions.html":{}}}],["type",{"_index":3,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":258,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["underscores",{"_index":115,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updateabcdto",{"_index":209,"title":{},"body":{"index.html":{}}}],["updateabcdtoso",{"_index":235,"title":{},"body":{"index.html":{}}}],["uppercase",{"_index":97,"title":{},"body":{"miscellaneous/functions.html":{}}}],["used",{"_index":265,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["utilities",{"_index":133,"title":{},"body":{"index.html":{}}}],["validate",{"_index":108,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validation",{"_index":111,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validator",{"_index":106,"title":{},"body":{"miscellaneous/functions.html":{}}}],["value",{"_index":56,"title":{},"body":{"miscellaneous/functions.html":{}}}],["various",{"_index":62,"title":{},"body":{"miscellaneous/functions.html":{}}}],["version",{"_index":243,"title":{},"body":{"properties.html":{}}}],["word",{"_index":123,"title":{},"body":{"miscellaneous/functions.html":{}}}],["wrapper",{"_index":237,"title":{},"body":{"index.html":{}}}],["yes",{"_index":71,"title":{},"body":{"miscellaneous/functions.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/lib/auth-paths.ts\n            \n            function\n            authPaths\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/auth-paths.ts\n            \n            type alias\n            AuthPaths\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/names.ts\n            \n            function\n            names\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/names.ts\n            \n            type alias\n            Names\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/names.ts\n            \n            type alias\n            NamesOption\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/normalize.ts\n            \n            function\n            normalize\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/pluralize.ts\n            \n            function\n            pluralize\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/rest-paths.ts\n            \n            function\n            restPaths\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/rest-paths.ts\n            \n            type alias\n            RestApiPaths\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @rline/is : ^9.5.0\n        \n            @swc/helpers : ~0.5.11\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            authPaths   (src/.../auth-paths.ts)\n                        \n                        \n                            names   (src/.../names.ts)\n                        \n                        \n                            normalize   (src/.../normalize.ts)\n                        \n                        \n                            pluralize   (src/.../pluralize.ts)\n                        \n                        \n                            restPaths   (src/.../rest-paths.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/auth-paths.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authPaths\n                        \n                    \n                \n            \n            \n                \nauthPaths(prefix: string)\n                \n            \n\n\n\n\n            \n                \n                        Generate auth-rest-api paths\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                prefix\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         AuthPaths\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/names.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        names\n                        \n                    \n                \n            \n            \n                \nnames(resourceName: string, options?: NamesOption)\n                \n            \n\n\n\n\n            \n                \n                        Generates various case formats for a given resource name.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resourceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the resource to be transformed into different case formats.\n\n\n                                            \n                                        \n                                        \n                                                options\n                                            \n                                                            NamesOption\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Names\n\n                        \n                            \n                                An object containing the resource name in different case formats:\n\ncamelCase: camelCase format.\nconstCase: CONSTANT_CASE format.\nkebabCase: kebab-case format.\npascalCase: PascalCase format.\nsnakeCase: snake_case format.\ntitleCase: Title Case format.\ncontrollerName: NameController.\nserviceName: Nameservice.\nmoduleName: NameModule.\n\n\n                            \n                \n            \n        \n    \n    src/lib/normalize.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        normalize\n                        \n                    \n                \n            \n            \n                \nnormalize(value: string, preInputValidator?)\n                \n            \n\n\n\n\n            \n                \n                        Normalizes a given string by adding spaces before uppercase letters and capitalizing the first letter.\nOptionally, a custom pre-input validator function can be provided to validate the input string.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe string to be normalized.\n\n\n                                            \n                                        \n                                        \n                                                preInputValidator\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nAn optional function to validate the input string before normalization.\nIf not provided, a default validation is applied which checks if the string\ncontains only letters, underscores, dollar signs, and spaces.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The normalized string with spaces before uppercase letters and the first letter capitalized.\n\n                            \n                \n            \n        \n    \n    src/lib/pluralize.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        pluralize\n                        \n                    \n                \n            \n            \n                \npluralize(word: string)\n                \n            \n\n\n\n\n            \n                \n                        Pluralize string following english grammer\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                word\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/rest-paths.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        restPaths\n                        \n                    \n                \n            \n            \n                \nrestPaths(name: string, prefix: string)\n                \n            \n\n\n\n\n            \n                \n                        Generates REST API paths for a given resource name with an optional prefix.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe name of the resource for which to generate paths.\n\n\n                                            \n                                        \n                                        \n                                                prefix\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                            \n                                                    \nAn optional prefix to prepend to each path. Defaults to an empty string.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         RestApiPaths\n\n                        \n                            \n                                An object containing various REST API paths for the resource.\n\n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n@rline/names\nUtilities to create names, restfull api paths, and authentication service paths.\nInstallation\nExample :pnpm add @rline/namesUsage\nRest api paths\nExample :let R = restPaths('category');\n\nR.plural; // output:  'categories',\nR.singular; // output:  'category',\nR.id; // output:  'category/:id',\nR.increment; // output:  'category/:id/increment',\nR.decrement; // output:  'category/:id/decrement',\nR.count; // output:  'categories/count',\nR.relation; // output:  'category/:id/:relationName',\nR.relationId; // output:  'category/:id/:relationName/:relationId',\nR.file; // output:  'category/:id/file',\nR.img; // output:  'category/:id/img',Pluralize\nExample :pluralize('person'); // output : 'people'\npluralize('cat'); // output : 'cats'\npluralize('category'); // output : 'categories'\npluralize('bus'); // output : 'buses'\npluralize('box'); // output : 'boxes'\npluralize('buzz'); // output : 'buzzes'\npluralize('brush'); // output : 'brushes'\npluralize('church'); // output : 'churches'\n// ...Names\nExample :import { names } from '@rline/names';\n\nlet N = names('ab c');\nN.camelCase; // output:  'abC'\nN.constCase; // output:  'AB_C'\nN.dotCase; // output:  'ab.c'\nN.kebabCase; // output:  'ab-c'\nN.pascalCase; // output:  'AbC'\nN.titleCase; // output:  'Ab C'\nN.sentenceCase; // output:  'Ab c'\n\nN.moduleName; // output:  'AbCModule'\nN.serviceName; // output:  'AbCService'\nN.controllerName; // output:  'AbCController'\nN.optionsName; // output:  'AbCOptions'\nN.modelName; // output:  'AbCModel'\nN.createDtoName; // output:  'CreateAbCDto'\nN.updateDtoName; // output:  'UpdateAbCDto'\nN.queryDtoName; // output:  'QueryAbCDto'\n\nN = names('ab c', { prefix: 'SO' });\nN.camelCase; // output:  'SOabC'\nN.constCase; // output:  'SOAB_C'\nN.dotCase; // output:  'SOab.c'\nN.kebabCase; // output:  'SOab-c'\nN.pascalCase; // output:  'SOAbC'\nN.titleCase; // output:  'SOAb C'\nN.sentenceCase; // output:  'SOAb c'\nN.moduleName; // output:  'SOAbCModule'\nN.serviceName; // output:  'SOAbCService'\nN.controllerName; // output:  'SOAbCController'\nN.optionsName; // output:  'SOAbCOptions'\nN.modelName; // output:  'SOAbCModel'\nN.createDtoName; // output:  'SOCreateAbCDto'\nN.updateDtoName; // output:  'SOUpdateAbCDto'\nN.queryDtoName; // output:  'SOQueryAbCDto'\n\nN = names('ab c', { suffix: 'SO' });\nN.camelCase; // output:  'abCSO'\nN.constCase; // output:  'AB_CSO'\nN.dotCase; // output:  'ab.cSO'\nN.kebabCase; // output:  'ab-cSO'\nN.pascalCase; // output:  'AbCSO'\nN.titleCase; // output:  'Ab CSO'\nN.sentenceCase; // output:  'Ab cSO'\nN.moduleName; // output:  'AbCModuleSO'\nN.serviceName; // output:  'AbCServiceSO'\nN.controllerName; // output:  'AbCControllerSO'\nN.optionsName; // output:  'AbCOptionsSO'\nN.modelName; // output:  'AbCModelSO'\nN.createDtoName; // output:  'CreateAbCDtoSO'\nN.updateDtoName; // output:  'UpdateAbCDtoSO'\nN.queryDtoName; // output:  'QueryAbCDtoSO'\n\nN = names('ab c', { wrapper: '|' });\nN.camelCase; // output:  '|abC|'\nN.constCase; // output:  '|AB_C|'\nN.dotCase; // output:  '|ab.c|'\nN.kebabCase; // output:  '|ab-c|'\nN.pascalCase; // output:  '|AbC|'\nN.titleCase; // output:  '|Ab C|'\nN.sentenceCase; // output:  '|Ab c|'\nN.moduleName; // output:  '|AbCModule|'\nN.serviceName; // output:  '|AbCService|'\nN.controllerName; // output:  '|AbCController|'\nN.optionsName; // output:  '|AbCOptions|'\nN.modelName; // output:  '|AbCModel|'\nN.createDtoName; // output:  '|CreateAbCDto|'\nN.updateDtoName; // output:  '|UpdateAbCDto|'\nN.queryDtoName; // output:  '|QueryAbCDto|'Documentation\nDetailed documentation Documentation\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 9.5.0\n        \n            Description : All version of names and resource paths\n        \n            Keywords : name, names, rline, plural, api, id, paths, open-api, api paths\n        \n            Homepage : https://rbrightline.github.io/common/names\n        \n            License : MIT\n        \n            Repository : https://github.com/rbrightline/common/tree/main/libs/names\n        \n            Author : Robert Brightline\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthPaths   (src/.../auth-paths.ts)\n                        \n                        \n                            Names   (src/.../names.ts)\n                        \n                        \n                            NamesOption   (src/.../names.ts)\n                        \n                        \n                            RestApiPaths   (src/.../rest-paths.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/auth-paths.ts\n    \n    \n        \n            \n                \n                    \n                    AuthPaths\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/lib/names.ts\n    \n    \n        \n            \n                \n                    \n                    Names\n                \n            \n            \n                \n                    Represents different naming conventions for strings.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NamesOption\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/lib/rest-paths.ts\n    \n    \n        \n            \n                \n                    \n                    RestApiPaths\n                \n            \n            \n                \n                    Represents the paths used in REST API endpoints.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
