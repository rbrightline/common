var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/EmptyValueError.html",[0,0.112,1,1.551]],["body/classes/EmptyValueError.html",[0,0.131,1,2.309,2,0.86,3,1.037,4,1.037,5,0.86,6,2.842,7,0.89,8,2.223,9,1.327,10,1.1,11,1.037,12,1.327,13,1.463,14,0.86,15,2.856,16,0.86,17,0.068,18,0.86,19,0.33,20,0.86,21,0.86,22,1.037,23,2.856,24,1.037,25,0.054,26,0.054]],["title/classes/InvalidArrayValueError.html",[0,0.112,27,1.284]],["body/classes/InvalidArrayValueError.html",[0,0.129,2,0.85,3,1.026,4,1.026,5,0.85,7,0.839,9,1.317,10,1.092,11,1.026,12,1.317,13,1.625,14,0.85,16,0.85,17,0.069,18,0.85,19,0.326,20,0.85,21,0.85,22,1.026,24,1.026,25,0.053,26,0.053,27,1.896,28,1.317,29,1.026,30,1.231,31,1.477]],["title/classes/InvalidBooleanValueError.html",[0,0.112,32,1.284]],["body/classes/InvalidBooleanValueError.html",[0,0.129,2,0.85,3,1.026,4,1.026,5,0.85,7,0.839,9,1.317,10,1.092,11,1.026,12,1.317,14,0.85,16,0.85,17,0.069,18,0.85,19,0.326,20,0.85,21,0.85,22,1.026,24,1.026,25,0.053,26,0.053,28,1.317,29,1.026,30,1.231,31,1.477,32,1.896,33,2.339]],["title/classes/InvalidNumberValueError.html",[0,0.112,34,1.284]],["body/classes/InvalidNumberValueError.html",[0,0.129,2,0.85,3,1.026,4,1.026,5,0.85,7,0.839,9,1.317,10,1.092,11,1.026,12,1.317,14,0.85,16,0.85,17,0.069,18,0.85,19,0.326,20,0.85,21,0.85,22,1.026,24,1.026,25,0.053,26,0.053,28,1.317,29,1.026,30,1.231,31,1.477,34,1.896,35,2.339]],["title/classes/InvalidObjectValueError.html",[0,0.112,36,1.284]],["body/classes/InvalidObjectValueError.html",[0,0.124,2,0.819,3,0.988,4,0.988,5,0.819,7,0.857,9,1.285,10,1.065,11,0.988,12,1.285,14,0.819,16,0.819,17,0.07,18,0.819,19,0.314,20,0.819,21,0.819,22,0.988,24,0.988,25,0.052,26,0.052,28,1.285,29,0.988,30,1.185,36,1.851,37,2.057,38,2.487,39,2.72,40,2.72,41,2.72]],["title/classes/InvalidStringValueError.html",[0,0.112,42,1.284]],["body/classes/InvalidStringValueError.html",[0,0.129,2,0.85,3,1.026,4,1.026,5,0.85,7,0.839,9,1.317,10,1.092,11,1.026,12,1.317,14,0.85,16,0.85,17,0.069,18,0.85,19,0.326,20,0.85,21,0.85,22,1.026,24,1.026,25,0.053,26,0.053,28,1.317,29,1.026,30,1.231,31,1.477,42,1.896,43,2.339]],["title/coverage.html",[44,2.573]],["body/coverage.html",[0,0.162,1,0.887,5,0.423,6,1.092,7,0.278,8,1.092,13,0.51,17,0.07,19,0.354,25,0.032,26,0.032,27,0.734,28,1.209,29,1.209,32,0.734,33,0.734,34,0.734,35,0.734,36,0.734,37,0.734,42,0.734,43,0.734,44,1.092,45,1.092,46,1.404,47,1.404,48,1.092,49,1.092,50,2.709,51,0.887,52,3.056,53,2.709,54,3.531,55,1.092,56,3.569,57,1.092,58,1.092,59,4.587,60,4.587,61,1.092,62,1.092,63,1.092,64,1.092,65,1.092,66,1.389,67,1.092,68,1.092,69,1.092,70,1.092,71,1.092,72,1.092,73,1.092,74,1.092,75,1.389,76,1.092,77,1.092,78,1.092,79,1.092,80,0.887,81,1.092,82,1.092,83,1.389,84,1.092,85,1.092,86,1.092,87,1.092,88,1.092,89,1.092,90,1.092,91,1.092,92,1.092,93,0.887,94,1.092,95,1.092,96,1.092,97,1.092,98,1.092,99,1.092,100,1.092,101,1.092,102,1.092,103,1.092,104,1.092,105,1.092,106,1.092,107,1.092,108,1.404,109,1.404,110,1.404]],["title/dependencies.html",[111,1.612,112,2.288]],["body/dependencies.html",[17,0.066,25,0.062,26,0.062,112,2.818,113,3.622,114,3.622]],["title/miscellaneous/functions.html",[115,1.083,116,1.858]],["body/miscellaneous/functions.html",[7,0.884,13,0.941,14,0.264,16,1.28,17,0.068,18,1.28,19,0.418,20,1.28,21,0.906,25,0.022,26,0.022,27,0.458,32,0.458,33,1.937,34,0.458,35,1.574,36,0.458,37,1.574,38,1.637,42,0.458,43,1.894,51,2.341,52,1.163,55,0.682,57,0.682,58,1.163,61,0.682,62,1.163,63,0.682,64,1.163,65,0.682,66,1.637,67,0.682,68,1.163,69,0.682,70,1.163,71,0.682,72,1.163,73,0.682,74,1.163,75,0.554,76,1.163,77,0.682,78,1.163,79,0.682,80,0.944,81,0.682,82,1.163,83,0.554,84,1.163,86,0.682,87,1.163,88,0.682,89,1.163,90,0.682,91,1.163,92,0.682,93,0.944,94,0.682,95,1.163,96,0.682,97,1.163,98,0.682,99,1.163,100,0.682,101,1.163,102,0.682,103,1.163,104,0.682,105,1.163,106,0.682,107,1.163,115,0.458,116,0.554,117,0.554,118,0.876,119,0.876,120,0.876,121,0.682,122,0.876,123,0.876,124,0.876,125,0.876,126,0.876,127,0.876,128,0.876,129,0.876,130,0.876,131,0.876,132,0.876,133,0.876,134,0.876,135,0.876,136,0.876,137,0.876,138,0.876,139,0.682,140,0.876,141,0.876,142,0.876,143,0.876,144,1.494,145,3.704,146,2.82,147,2.015,148,0.876,149,0.876,150,1.52,151,2.015,152,4.003,153,0.876,154,2.748,155,0.876,156,1.52,157,0.876,158,0.876,159,0.876,160,0.876,161,0.876,162,0.876,163,0.876,164,0.876,165,0.876,166,0.876,167,0.876,168,0.876,169,0.876,170,0.876,171,0.876,172,2.015,173,0.876,174,0.876,175,0.876,176,0.876,177,0.876,178,0.682,179,0.876,180,0.682]],["title/index.html",[117,1.309,181,2.071,182,2.071]],["body/index.html",[7,0.314,10,0.725,13,1.061,17,0.07,19,0.278,25,0.035,26,0.035,33,1.708,35,1.838,37,1.527,38,0.999,43,1.838,45,2.272,56,1.875,80,2.064,93,0.999,116,0.999,147,1.23,150,1.23,151,1.23,154,2.272,156,1.23,172,1.23,178,2.736,183,1.581,184,1.23,185,1.581,186,1.23,187,1.581,188,1.581,189,1.581,190,2.41,191,2.41,192,1.581,193,1.581,194,1.581,195,2.41,196,1.581,197,3.266,198,1.581,199,1.581,200,2.41,201,3.266,202,1.581,203,1.581,204,1.581,205,1.581,206,2.41,207,1.581,208,1.581,209,1.581,210,1.581,211,1.581,212,1.581,213,1.581,214,1.581,215,1.581,216,1.581,217,1.581,218,1.581,219,1.581,220,1.581,221,1.581,222,1.581,223,1.581,224,4.28,225,2.41,226,2.41,227,2.41,228,1.581,229,2.41,230,1.581,231,2.41,232,1.581,233,2.41,234,3.853,235,4.069,236,1.581,237,1.581,238,1.581,239,2.92,240,1.581,241,2.41,242,1.581,243,1.581]],["title/modules.html",[244,2.573]],["body/modules.html",[17,0.063,25,0.063,26,0.063,244,2.879]],["title/overview.html",[245,2.573]],["body/overview.html",[2,1.098,17,0.062,25,0.062,26,0.062,245,2.838,246,3.648]],["title/properties.html",[111,1.612,247,2.288]],["body/properties.html",[17,0.069,19,0.445,25,0.057,26,0.057,180,2.425,184,2.425,186,3.003,247,2.425,248,3.116,249,3.116,250,3.116,251,3.116,252,3.116,253,3.116,254,3.116,255,3.116,256,3.116,257,3.116,258,3.116,259,3.116,260,3.116,261,3.116]],["title/miscellaneous/typealiases.html",[115,1.083,262,2.941]],["body/miscellaneous/typealiases.html",[13,1.139,17,0.062,19,0.507,25,0.057,26,0.057,48,2.44,49,3.014,51,2.448,66,2.448,75,1.982,83,1.982,85,3.014,115,1.639,117,1.982,121,2.44,139,2.44,263,3.135,264,3.135,265,3.135,266,3.873]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"classes/EmptyValueError.html":{},"classes/InvalidArrayValueError.html":{},"classes/InvalidBooleanValueError.html":{},"classes/InvalidNumberValueError.html":{},"classes/InvalidObjectValueError.html":{},"classes/InvalidStringValueError.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":52,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["0.5.11",{"_index":114,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":53,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":54,"title":{},"body":{"coverage.html":{}}}],["1/1",{"_index":60,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":59,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":246,"title":{},"body":{"overview.html":{}}}],["9.2.0",{"_index":249,"title":{},"body":{"properties.html":{}}}],["add",{"_index":206,"title":{},"body":{"index.html":{}}}],["alias",{"_index":50,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":263,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["arr",{"_index":58,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["arr(value",{"_index":143,"title":{},"body":{"miscellaneous/functions.html":{}}}],["array",{"_index":13,"title":{},"body":{"classes/EmptyValueError.html":{},"classes/InvalidArrayValueError.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["array.isarray(value",{"_index":175,"title":{},"body":{"miscellaneous/functions.html":{}}}],["arrvalue",{"_index":232,"title":{},"body":{"index.html":{}}}],["author",{"_index":259,"title":{},"body":{"properties.html":{}}}],["better",{"_index":184,"title":{},"body":{"index.html":{},"properties.html":{}}}],["bln",{"_index":62,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["bln(value",{"_index":148,"title":{},"body":{"miscellaneous/functions.html":{}}}],["boolean",{"_index":33,"title":{},"body":{"classes/InvalidBooleanValueError.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["boolen",{"_index":203,"title":{},"body":{"index.html":{}}}],["boolvalue",{"_index":228,"title":{},"body":{"index.html":{}}}],["brightline",{"_index":261,"title":{},"body":{"properties.html":{}}}],["checking",{"_index":209,"title":{},"body":{"index.html":{}}}],["class",{"_index":0,"title":{"classes/EmptyValueError.html":{},"classes/InvalidArrayValueError.html":{},"classes/InvalidBooleanValueError.html":{},"classes/InvalidNumberValueError.html":{},"classes/InvalidObjectValueError.html":{},"classes/InvalidStringValueError.html":{}},"body":{"classes/EmptyValueError.html":{},"classes/InvalidArrayValueError.html":{},"classes/InvalidBooleanValueError.html":{},"classes/InvalidNumberValueError.html":{},"classes/InvalidObjectValueError.html":{},"classes/InvalidStringValueError.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/EmptyValueError.html":{},"classes/InvalidArrayValueError.html":{},"classes/InvalidBooleanValueError.html":{},"classes/InvalidNumberValueError.html":{},"classes/InvalidObjectValueError.html":{},"classes/InvalidStringValueError.html":{},"overview.html":{}}}],["code",{"_index":189,"title":{},"body":{"index.html":{}}}],["const",{"_index":224,"title":{},"body":{"index.html":{}}}],["constructor",{"_index":11,"title":{},"body":{"classes/EmptyValueError.html":{},"classes/InvalidArrayValueError.html":{},"classes/InvalidBooleanValueError.html":{},"classes/InvalidNumberValueError.html":{},"classes/InvalidObjectValueError.html":{},"classes/InvalidStringValueError.html":{}}}],["constructor(value",{"_index":12,"title":{},"body":{"classes/EmptyValueError.html":{},"classes/InvalidArrayValueError.html":{},"classes/InvalidBooleanValueError.html":{},"classes/InvalidNumberValueError.html":{},"classes/InvalidObjectValueError.html":{},"classes/InvalidStringValueError.html":{}}}],["convention",{"_index":208,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":44,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["def",{"_index":82,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["def(value",{"_index":149,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defined",{"_index":14,"title":{},"body":{"classes/EmptyValueError.html":{},"classes/InvalidArrayValueError.html":{},"classes/InvalidBooleanValueError.html":{},"classes/InvalidNumberValueError.html":{},"classes/InvalidObjectValueError.html":{},"classes/InvalidStringValueError.html":{},"miscellaneous/functions.html":{}}}],["dependencies",{"_index":112,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":180,"title":{},"body":{"miscellaneous/functions.html":{},"properties.html":{}}}],["detailed",{"_index":243,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":45,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["e",{"_index":216,"title":{},"body":{"index.html":{}}}],["earr",{"_index":84,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["earr(value",{"_index":153,"title":{},"body":{"miscellaneous/functions.html":{}}}],["empty",{"_index":154,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["emptyarray",{"_index":85,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["emptyvalueerror",{"_index":1,"title":{"classes/EmptyValueError.html":{}},"body":{"classes/EmptyValueError.html":{},"coverage.html":{}}}],["enbr",{"_index":87,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["enbr(value",{"_index":155,"title":{},"body":{"miscellaneous/functions.html":{}}}],["eobj",{"_index":89,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["eobj(value",{"_index":157,"title":{},"body":{"miscellaneous/functions.html":{}}}],["error",{"_index":10,"title":{},"body":{"classes/EmptyValueError.html":{},"classes/InvalidArrayValueError.html":{},"classes/InvalidBooleanValueError.html":{},"classes/InvalidNumberValueError.html":{},"classes/InvalidObjectValueError.html":{},"classes/InvalidStringValueError.html":{},"index.html":{}}}],["error.ts",{"_index":8,"title":{},"body":{"classes/EmptyValueError.html":{},"coverage.html":{}}}],["error.ts:1",{"_index":15,"title":{},"body":{"classes/EmptyValueError.html":{}}}],["estr",{"_index":91,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["estr(value",{"_index":158,"title":{},"body":{"miscellaneous/functions.html":{}}}],["example",{"_index":197,"title":{},"body":{"index.html":{}}}],["export",{"_index":22,"title":{},"body":{"classes/EmptyValueError.html":{},"classes/InvalidArrayValueError.html":{},"classes/InvalidBooleanValueError.html":{},"classes/InvalidNumberValueError.html":{},"classes/InvalidObjectValueError.html":{},"classes/InvalidStringValueError.html":{}}}],["extends",{"_index":9,"title":{},"body":{"classes/EmptyValueError.html":{},"classes/InvalidArrayValueError.html":{},"classes/InvalidBooleanValueError.html":{},"classes/InvalidNumberValueError.html":{},"classes/InvalidObjectValueError.html":{},"classes/InvalidStringValueError.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/EmptyValueError.html":{},"classes/InvalidArrayValueError.html":{},"classes/InvalidBooleanValueError.html":{},"classes/InvalidNumberValueError.html":{},"classes/InvalidObjectValueError.html":{},"classes/InvalidStringValueError.html":{},"coverage.html":{}}}],["first",{"_index":210,"title":{},"body":{"index.html":{}}}],["function",{"_index":56,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["functions",{"_index":116,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["getting",{"_index":181,"title":{"index.html":{}},"body":{}}],["goal",{"_index":187,"title":{},"body":{"index.html":{}}}],["homepage",{"_index":255,"title":{},"body":{"properties.html":{}}}],["https://github.com/rbrightline/common/tree/main/libs/is",{"_index":258,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io/common/is",{"_index":256,"title":{},"body":{"properties.html":{}}}],["identifier",{"_index":46,"title":{},"body":{"coverage.html":{}}}],["index",{"_index":117,"title":{"index.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/EmptyValueError.html":{},"classes/InvalidArrayValueError.html":{},"classes/InvalidBooleanValueError.html":{},"classes/InvalidNumberValueError.html":{},"classes/InvalidObjectValueError.html":{},"classes/InvalidStringValueError.html":{}}}],["initialize",{"_index":146,"title":{},"body":{"miscellaneous/functions.html":{}}}],["initializer",{"_index":253,"title":{},"body":{"properties.html":{}}}],["initoptions",{"_index":51,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["installation",{"_index":204,"title":{},"body":{"index.html":{}}}],["invalid",{"_index":40,"title":{},"body":{"classes/InvalidObjectValueError.html":{}}}],["invalidarrayvalueerror",{"_index":27,"title":{"classes/InvalidArrayValueError.html":{}},"body":{"classes/InvalidArrayValueError.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["invalidbooleanvalueerror",{"_index":32,"title":{"classes/InvalidBooleanValueError.html":{}},"body":{"classes/InvalidBooleanValueError.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["invalidnumbervalueerror",{"_index":34,"title":{"classes/InvalidNumberValueError.html":{}},"body":{"classes/InvalidNumberValueError.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["invalidobjectvalueerror",{"_index":36,"title":{"classes/InvalidObjectValueError.html":{}},"body":{"classes/InvalidObjectValueError.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["invalidstringvalueerror",{"_index":42,"title":{"classes/InvalidStringValueError.html":{}},"body":{"classes/InvalidStringValueError.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isempty",{"_index":217,"title":{},"body":{"index.html":{}}}],["isnotempty",{"_index":218,"title":{},"body":{"index.html":{}}}],["istype",{"_index":215,"title":{},"body":{"index.html":{}}}],["item",{"_index":265,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["json.stringify(value",{"_index":41,"title":{},"body":{"classes/InvalidObjectValueError.html":{}}}],["keywords",{"_index":252,"title":{},"body":{"properties.html":{}}}],["letters",{"_index":212,"title":{},"body":{"index.html":{}}}],["library",{"_index":223,"title":{},"body":{"index.html":{}}}],["literal",{"_index":266,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["matching",{"_index":26,"title":{},"body":{"classes/EmptyValueError.html":{},"classes/InvalidArrayValueError.html":{},"classes/InvalidBooleanValueError.html":{},"classes/InvalidNumberValueError.html":{},"classes/InvalidObjectValueError.html":{},"classes/InvalidStringValueError.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["miscellaneous",{"_index":115,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["modules",{"_index":244,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["name",{"_index":18,"title":{},"body":{"classes/EmptyValueError.html":{},"classes/InvalidArrayValueError.html":{},"classes/InvalidBooleanValueError.html":{},"classes/InvalidNumberValueError.html":{},"classes/InvalidObjectValueError.html":{},"classes/InvalidStringValueError.html":{},"miscellaneous/functions.html":{}}}],["nan",{"_index":156,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["nbr",{"_index":64,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["nbr(value",{"_index":159,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ne",{"_index":93,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["ne(value",{"_index":160,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nearr",{"_index":95,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["nearr(value",{"_index":161,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nenbr",{"_index":97,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["nenbr(value",{"_index":162,"title":{},"body":{"miscellaneous/functions.html":{}}}],["neobj",{"_index":99,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["neobj(value",{"_index":163,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nestr",{"_index":101,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["nestr(value",{"_index":164,"title":{},"body":{"miscellaneous/functions.html":{}}}],["new",{"_index":108,"title":{},"body":{"coverage.html":{}}}],["nil",{"_index":103,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["nil(value",{"_index":165,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nnil",{"_index":105,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["nnil(value",{"_index":166,"title":{},"body":{"miscellaneous/functions.html":{}}}],["none",{"_index":201,"title":{},"body":{"index.html":{}}}],["not(value",{"_index":167,"title":{},"body":{"miscellaneous/functions.html":{}}}],["null",{"_index":151,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["number",{"_index":35,"title":{},"body":{"classes/InvalidNumberValueError.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["numeric",{"_index":199,"title":{},"body":{"index.html":{}}}],["o",{"_index":239,"title":{},"body":{"index.html":{}}}],["obj",{"_index":66,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["obj(value",{"_index":168,"title":{},"body":{"miscellaneous/functions.html":{}}}],["object",{"_index":37,"title":{},"body":{"classes/InvalidObjectValueError.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["objectvalue",{"_index":230,"title":{},"body":{"index.html":{}}}],["one",{"_index":190,"title":{},"body":{"index.html":{}}}],["operations",{"_index":195,"title":{},"body":{"index.html":{}}}],["optional",{"_index":20,"title":{},"body":{"classes/EmptyValueError.html":{},"classes/InvalidArrayValueError.html":{},"classes/InvalidBooleanValueError.html":{},"classes/InvalidNumberValueError.html":{},"classes/InvalidObjectValueError.html":{},"classes/InvalidStringValueError.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":145,"title":{},"body":{"miscellaneous/functions.html":{}}}],["options.ts",{"_index":49,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["overview",{"_index":245,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":111,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":16,"title":{},"body":{"classes/EmptyValueError.html":{},"classes/InvalidArrayValueError.html":{},"classes/InvalidBooleanValueError.html":{},"classes/InvalidNumberValueError.html":{},"classes/InvalidObjectValueError.html":{},"classes/InvalidStringValueError.html":{},"miscellaneous/functions.html":{}}}],["pnpm",{"_index":205,"title":{},"body":{"index.html":{}}}],["prefixes",{"_index":220,"title":{},"body":{"index.html":{}}}],["properties",{"_index":247,"title":{"properties.html":{}},"body":{"properties.html":{}}}],["provided",{"_index":24,"title":{},"body":{"classes/EmptyValueError.html":{},"classes/InvalidArrayValueError.html":{},"classes/InvalidBooleanValueError.html":{},"classes/InvalidNumberValueError.html":{},"classes/InvalidObjectValueError.html":{},"classes/InvalidStringValueError.html":{}}}],["rarrvalue",{"_index":238,"title":{},"body":{"index.html":{}}}],["rboolvalue",{"_index":236,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":241,"title":{},"body":{"index.html":{}}}],["readonlyarrvalue",{"_index":242,"title":{},"body":{"index.html":{}}}],["readonlyobjectvalue",{"_index":240,"title":{},"body":{"index.html":{}}}],["relative",{"_index":194,"title":{},"body":{"index.html":{}}}],["repository",{"_index":257,"title":{},"body":{"properties.html":{}}}],["required",{"_index":234,"title":{},"body":{"index.html":{}}}],["results",{"_index":25,"title":{},"body":{"classes/EmptyValueError.html":{},"classes/InvalidArrayValueError.html":{},"classes/InvalidBooleanValueError.html":{},"classes/InvalidNumberValueError.html":{},"classes/InvalidObjectValueError.html":{},"classes/InvalidStringValueError.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":221,"title":{},"body":{"index.html":{}}}],["returns",{"_index":152,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rline/is",{"_index":183,"title":{},"body":{"index.html":{}}}],["rline/isnaming",{"_index":207,"title":{},"body":{"index.html":{}}}],["robert",{"_index":260,"title":{},"body":{"properties.html":{}}}],["robjectvalue",{"_index":237,"title":{},"body":{"index.html":{}}}],["rstrvalue",{"_index":233,"title":{},"body":{"index.html":{}}}],["safer",{"_index":185,"title":{},"body":{"index.html":{}}}],["safety",{"_index":254,"title":{},"body":{"properties.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/EmptyValueError.html":{},"classes/InvalidArrayValueError.html":{},"classes/InvalidBooleanValueError.html":{},"classes/InvalidNumberValueError.html":{},"classes/InvalidObjectValueError.html":{},"classes/InvalidStringValueError.html":{}}}],["src/.../arr.ts",{"_index":118,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../bln.ts",{"_index":119,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../def.ts",{"_index":120,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../earr.ts",{"_index":121,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../enbr.ts",{"_index":122,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../eobj.ts",{"_index":123,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../estr.ts",{"_index":124,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../init",{"_index":264,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../nbr.ts",{"_index":125,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../ne.ts",{"_index":126,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../nearr.ts",{"_index":127,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../nenbr.ts",{"_index":128,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../neobj.ts",{"_index":129,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../nestr.ts",{"_index":130,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../nil.ts",{"_index":131,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../nnil.ts",{"_index":132,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../not.ts",{"_index":133,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../obj.ts",{"_index":134,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../str.ts",{"_index":135,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../tarr.ts",{"_index":136,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../tbln.ts",{"_index":137,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../tnbr.ts",{"_index":138,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../tobj.ts",{"_index":139,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../tstr.ts",{"_index":140,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../udef.ts",{"_index":141,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../val.ts",{"_index":142,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/lib/common/init",{"_index":48,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/errors/empty",{"_index":6,"title":{},"body":{"classes/EmptyValueError.html":{},"coverage.html":{}}}],["src/lib/errors/invalid",{"_index":28,"title":{},"body":{"classes/InvalidArrayValueError.html":{},"classes/InvalidBooleanValueError.html":{},"classes/InvalidNumberValueError.html":{},"classes/InvalidObjectValueError.html":{},"classes/InvalidStringValueError.html":{},"coverage.html":{}}}],["src/lib/flow/not.ts",{"_index":55,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/init/arr.ts",{"_index":57,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/init/bln.ts",{"_index":61,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/init/nbr.ts",{"_index":63,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/init/obj.ts",{"_index":65,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/init/str.ts",{"_index":67,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/type/tarr.ts",{"_index":69,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/type/tbln.ts",{"_index":71,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/type/tnbr.ts",{"_index":73,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/type/tobj.ts",{"_index":75,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/type/tstr.ts",{"_index":77,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/val.ts",{"_index":79,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/value/def.ts",{"_index":81,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/value/earr.ts",{"_index":83,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/value/enbr.ts",{"_index":86,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/value/eobj.ts",{"_index":88,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/value/estr.ts",{"_index":90,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/value/ne.ts",{"_index":92,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/value/nearr.ts",{"_index":94,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/value/nenbr.ts",{"_index":96,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/value/neobj.ts",{"_index":98,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/value/nestr.ts",{"_index":100,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/value/nil.ts",{"_index":102,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/value/nnil.ts",{"_index":104,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/value/udef.ts",{"_index":106,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["stands",{"_index":214,"title":{},"body":{"index.html":{}}}],["started",{"_index":182,"title":{"index.html":{}},"body":{}}],["starts",{"_index":219,"title":{},"body":{"index.html":{}}}],["statements",{"_index":47,"title":{},"body":{"coverage.html":{}}}],["str",{"_index":68,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["str(value",{"_index":169,"title":{},"body":{"miscellaneous/functions.html":{}}}],["string",{"_index":43,"title":{},"body":{"classes/InvalidStringValueError.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["strvalue",{"_index":225,"title":{},"body":{"index.html":{}}}],["such",{"_index":213,"title":{},"body":{"index.html":{}}}],["super",{"_index":39,"title":{},"body":{"classes/InvalidObjectValueError.html":{}}}],["super(`empty",{"_index":23,"title":{},"body":{"classes/EmptyValueError.html":{}}}],["super(`invalid",{"_index":31,"title":{},"body":{"classes/InvalidArrayValueError.html":{},"classes/InvalidBooleanValueError.html":{},"classes/InvalidNumberValueError.html":{},"classes/InvalidStringValueError.html":{}}}],["swc/helpers",{"_index":113,"title":{},"body":{"dependencies.html":{}}}],["t",{"_index":38,"title":{},"body":{"classes/InvalidObjectValueError.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["table",{"_index":110,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":109,"title":{},"body":{"coverage.html":{}}}],["tarr",{"_index":70,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["tarr(value",{"_index":170,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tbln",{"_index":72,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["tbln(value",{"_index":171,"title":{},"body":{"miscellaneous/functions.html":{}}}],["throw",{"_index":147,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["tnbr",{"_index":74,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["tnbr(value",{"_index":173,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tobj",{"_index":76,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["tobj(value",{"_index":174,"title":{},"body":{"miscellaneous/functions.html":{}}}],["true",{"_index":235,"title":{},"body":{"index.html":{}}}],["tstr",{"_index":78,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["tstr(value",{"_index":176,"title":{},"body":{"miscellaneous/functions.html":{}}}],["two",{"_index":211,"title":{},"body":{"index.html":{}}}],["type",{"_index":19,"title":{},"body":{"classes/EmptyValueError.html":{},"classes/InvalidArrayValueError.html":{},"classes/InvalidBooleanValueError.html":{},"classes/InvalidNumberValueError.html":{},"classes/InvalidObjectValueError.html":{},"classes/InvalidStringValueError.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":262,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":172,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["types",{"_index":251,"title":{},"body":{"properties.html":{}}}],["typescript",{"_index":186,"title":{},"body":{"index.html":{},"properties.html":{}}}],["udef",{"_index":107,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["udef(value",{"_index":177,"title":{},"body":{"miscellaneous/functions.html":{}}}],["undefiend",{"_index":178,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["undefined",{"_index":150,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["usage",{"_index":222,"title":{},"body":{"index.html":{}}}],["use",{"_index":193,"title":{},"body":{"index.html":{}}}],["utilities",{"_index":250,"title":{},"body":{"properties.html":{}}}],["v",{"_index":144,"title":{},"body":{"miscellaneous/functions.html":{}}}],["val",{"_index":80,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["val('some",{"_index":226,"title":{},"body":{"index.html":{}}}],["val(1",{"_index":227,"title":{},"body":{"index.html":{}}}],["val(true",{"_index":229,"title":{},"body":{"index.html":{}}}],["val(undefined",{"_index":231,"title":{},"body":{"index.html":{}}}],["val(value",{"_index":179,"title":{},"body":{"miscellaneous/functions.html":{}}}],["valid",{"_index":191,"title":{},"body":{"index.html":{}}}],["value",{"_index":7,"title":{},"body":{"classes/EmptyValueError.html":{},"classes/InvalidArrayValueError.html":{},"classes/InvalidBooleanValueError.html":{},"classes/InvalidNumberValueError.html":{},"classes/InvalidObjectValueError.html":{},"classes/InvalidStringValueError.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["value.error.ts",{"_index":29,"title":{},"body":{"classes/InvalidArrayValueError.html":{},"classes/InvalidBooleanValueError.html":{},"classes/InvalidNumberValueError.html":{},"classes/InvalidObjectValueError.html":{},"classes/InvalidStringValueError.html":{},"coverage.html":{}}}],["value.error.ts:1",{"_index":30,"title":{},"body":{"classes/InvalidArrayValueError.html":{},"classes/InvalidBooleanValueError.html":{},"classes/InvalidNumberValueError.html":{},"classes/InvalidObjectValueError.html":{},"classes/InvalidStringValueError.html":{}}}],["values",{"_index":200,"title":{},"body":{"index.html":{}}}],["variable",{"_index":188,"title":{},"body":{"index.html":{}}}],["variables",{"_index":192,"title":{},"body":{"index.html":{}}}],["version",{"_index":248,"title":{},"body":{"properties.html":{}}}],["without",{"_index":196,"title":{},"body":{"index.html":{}}}],["work",{"_index":198,"title":{},"body":{"index.html":{}}}],["yes",{"_index":21,"title":{},"body":{"classes/EmptyValueError.html":{},"classes/InvalidArrayValueError.html":{},"classes/InvalidBooleanValueError.html":{},"classes/InvalidNumberValueError.html":{},"classes/InvalidObjectValueError.html":{},"classes/InvalidStringValueError.html":{},"miscellaneous/functions.html":{}}}],["zero",{"_index":202,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/EmptyValueError.html":{"url":"classes/EmptyValueError.html","title":"class - EmptyValueError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmptyValueError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/errors/empty-value-error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(value?: Array<>)\n                    \n                \n                        \n                            \n                                Defined in src/lib/errors/empty-value-error.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                    Array<>\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class EmptyValueError extends Error {\n  constructor(value?: Array) {\n    super(`Empty value: ${value ?? 'value not provided'}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidArrayValueError.html":{"url":"classes/InvalidArrayValueError.html","title":"class - InvalidArrayValueError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidArrayValueError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/errors/invalid-array-value.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(value?: Array<>)\n                    \n                \n                        \n                            \n                                Defined in src/lib/errors/invalid-array-value.error.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                    Array<>\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class InvalidArrayValueError extends Error {\n  constructor(value?: Array) {\n    super(`Invalid array value : ${value ?? 'value not provided'}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidBooleanValueError.html":{"url":"classes/InvalidBooleanValueError.html","title":"class - InvalidBooleanValueError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidBooleanValueError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/errors/invalid-boolean-value.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(value?: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/lib/errors/invalid-boolean-value.error.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class InvalidBooleanValueError extends Error {\n  constructor(value?: boolean) {\n    super(`Invalid boolean value : ${value ?? 'value not provided'}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidNumberValueError.html":{"url":"classes/InvalidNumberValueError.html","title":"class - InvalidNumberValueError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidNumberValueError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/errors/invalid-number-value.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(value?: number)\n                    \n                \n                        \n                            \n                                Defined in src/lib/errors/invalid-number-value.error.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class InvalidNumberValueError extends Error {\n  constructor(value?: number) {\n    super(`Invalid number value : ${value ?? 'value not provided'}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidObjectValueError.html":{"url":"classes/InvalidObjectValueError.html","title":"class - InvalidObjectValueError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidObjectValueError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/errors/invalid-object-value.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(value?: T)\n                    \n                \n                        \n                            \n                                Defined in src/lib/errors/invalid-object-value.error.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                    T\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class InvalidObjectValueError extends Error {\n  constructor(value?: T) {\n    super(\n      `Invalid object value :${\n        (value ? JSON.stringify(value) : value) ?? 'value not provided'\n      }`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidStringValueError.html":{"url":"classes/InvalidStringValueError.html","title":"class - InvalidStringValueError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidStringValueError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/errors/invalid-string-value.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(value?: string)\n                    \n                \n                        \n                            \n                                Defined in src/lib/errors/invalid-string-value.error.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class InvalidStringValueError extends Error {\n  constructor(value?: string) {\n    super(`Invalid string value : ${value ?? 'value not provided'}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/lib/common/init-options.ts\n            \n            type alias\n            InitOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/errors/empty-value-error.ts\n            \n            class\n            EmptyValueError\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/errors/invalid-array-value.error.ts\n            \n            class\n            InvalidArrayValueError\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/errors/invalid-boolean-value.error.ts\n            \n            class\n            InvalidBooleanValueError\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/errors/invalid-number-value.error.ts\n            \n            class\n            InvalidNumberValueError\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/errors/invalid-object-value.error.ts\n            \n            class\n            InvalidObjectValueError\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/errors/invalid-string-value.error.ts\n            \n            class\n            InvalidStringValueError\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/lib/flow/not.ts\n            \n            function\n            not\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/init/arr.ts\n            \n            function\n            arr\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/init/bln.ts\n            \n            function\n            bln\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/init/nbr.ts\n            \n            function\n            nbr\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/init/obj.ts\n            \n            function\n            obj\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/init/str.ts\n            \n            function\n            str\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/type/tarr.ts\n            \n            function\n            tarr\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/type/tbln.ts\n            \n            function\n            tbln\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/type/tnbr.ts\n            \n            function\n            tnbr\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/type/tobj.ts\n            \n            function\n            tobj\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/type/tobj.ts\n            \n            type alias\n            Obj\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/type/tstr.ts\n            \n            function\n            tstr\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/val.ts\n            \n            function\n            val\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/value/def.ts\n            \n            function\n            def\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/value/earr.ts\n            \n            function\n            earr\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/value/earr.ts\n            \n            type alias\n            EmptyArray\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/value/enbr.ts\n            \n            function\n            enbr\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/value/eobj.ts\n            \n            function\n            eobj\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/value/estr.ts\n            \n            function\n            estr\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/value/ne.ts\n            \n            function\n            ne\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/value/nearr.ts\n            \n            function\n            nearr\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/value/nenbr.ts\n            \n            function\n            nenbr\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/value/neobj.ts\n            \n            function\n            neobj\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/value/nestr.ts\n            \n            function\n            nestr\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/value/nil.ts\n            \n            function\n            nil\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/value/nnil.ts\n            \n            function\n            nnil\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/value/udef.ts\n            \n            function\n            udef\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @swc/helpers : ~0.5.11\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            arr   (src/.../arr.ts)\n                        \n                        \n                            bln   (src/.../bln.ts)\n                        \n                        \n                            def   (src/.../def.ts)\n                        \n                        \n                            earr   (src/.../earr.ts)\n                        \n                        \n                            enbr   (src/.../enbr.ts)\n                        \n                        \n                            eobj   (src/.../eobj.ts)\n                        \n                        \n                            estr   (src/.../estr.ts)\n                        \n                        \n                            nbr   (src/.../nbr.ts)\n                        \n                        \n                            ne   (src/.../ne.ts)\n                        \n                        \n                            nearr   (src/.../nearr.ts)\n                        \n                        \n                            nenbr   (src/.../nenbr.ts)\n                        \n                        \n                            neobj   (src/.../neobj.ts)\n                        \n                        \n                            nestr   (src/.../nestr.ts)\n                        \n                        \n                            nil   (src/.../nil.ts)\n                        \n                        \n                            nnil   (src/.../nnil.ts)\n                        \n                        \n                            not   (src/.../not.ts)\n                        \n                        \n                            obj   (src/.../obj.ts)\n                        \n                        \n                            str   (src/.../str.ts)\n                        \n                        \n                            tarr   (src/.../tarr.ts)\n                        \n                        \n                            tbln   (src/.../tbln.ts)\n                        \n                        \n                            tnbr   (src/.../tnbr.ts)\n                        \n                        \n                            tobj   (src/.../tobj.ts)\n                        \n                        \n                            tstr   (src/.../tstr.ts)\n                        \n                        \n                            udef   (src/.../udef.ts)\n                        \n                        \n                            val   (src/.../val.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/init/arr.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        arr\n                        \n                    \n                \n            \n            \n                \narr(value: V, options?: InitOptions)\n                \n            \n\n\n\n\n            \n                \n                        initialize array value or throw InvalidArrayValueError\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        V\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            InitOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/lib/init/bln.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bln\n                        \n                    \n                \n            \n            \n                \nbln(value, options?: InitOptions)\n                \n            \n\n\n\n\n            \n                \n                        initialize boolean value or throw InvalidBooleanValueError\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            InitOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/lib/value/def.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        def\n                        \n                    \n                \n            \n            \n                \ndef(value)\n                \n            \n\n\n\n\n            \n                \n                        is defined ( not undefined an not null?\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/value/earr.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        earr\n                        \n                    \n                \n            \n            \n                \nearr(value)\n                \n            \n\n\n\n\n            \n                \n                        is empty array?\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/value/enbr.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        enbr\n                        \n                    \n                \n            \n            \n                \nenbr(value)\n                \n            \n\n\n\n\n            \n                \n                        is 0 or NaN?\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/value/eobj.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        eobj\n                        \n                    \n                \n            \n            \n                \neobj(value)\n                \n            \n\n\n\n\n            \n                \n                        is empty object?\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/value/estr.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        estr\n                        \n                    \n                \n            \n            \n                \nestr(value: string)\n                \n            \n\n\n\n\n            \n                \n                        is empty string?\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/init/nbr.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        nbr\n                        \n                    \n                \n            \n            \n                \nnbr(value, options?: InitOptions)\n                \n            \n\n\n\n\n            \n                \n                        initialize number value or throw InvalidNumberValueError\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            InitOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/lib/value/ne.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ne\n                        \n                    \n                \n            \n            \n                \nne(value)\n                \n            \n\n\n\n\n            \n                \n                        is not empty value (not null, undefined, empty string or object)?\n\nstring: not be empty string\nnumber: not NaN\nobject: not Empty\narray: not Empty\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/value/nearr.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        nearr\n                        \n                    \n                \n            \n            \n                \nnearr(value)\n                \n            \n\n\n\n\n            \n                \n                        is not empty array?\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/value/nenbr.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        nenbr\n                        \n                    \n                \n            \n            \n                \nnenbr(value: number)\n                \n            \n\n\n\n\n            \n                \n                        is not 0?\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/value/neobj.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        neobj\n                        \n                    \n                \n            \n            \n                \nneobj(value: Obj)\n                \n            \n\n\n\n\n            \n                \n                        is not empty object?\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            Obj\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/value/nestr.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        nestr\n                        \n                    \n                \n            \n            \n                \nnestr(value: string)\n                \n            \n\n\n\n\n            \n                \n                        is not empty string\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/value/nil.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        nil\n                        \n                    \n                \n            \n            \n                \nnil(value)\n                \n            \n\n\n\n\n            \n                \n                        is null?\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/lib/value/nnil.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        nnil\n                        \n                    \n                \n            \n            \n                \nnnil(value)\n                \n            \n\n\n\n\n            \n                \n                        is not null?\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/flow/not.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        not\n                        \n                    \n                \n            \n            \n                \nnot(value: boolean)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/init/obj.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        obj\n                        \n                    \n                \n            \n            \n                \nobj(value, options?: InitOptions)\n                \n            \n\n\n\n\n            \n                \n                        initialize object value or throw InvalidObjectValueError\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            InitOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/lib/init/str.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        str\n                        \n                    \n                \n            \n            \n                \nstr(value, options?: InitOptions)\n                \n            \n\n\n\n\n            \n                \n                        initialize string value or throw InvalidStringValueError\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            InitOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/lib/type/tarr.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        tarr\n                        \n                    \n                \n            \n            \n                \ntarr(value?)\n                \n            \n\n\n\n\n            \n                \n                        is type of array?\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/type/tbln.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        tbln\n                        \n                    \n                \n            \n            \n                \ntbln(value)\n                \n            \n\n\n\n\n            \n                \n                        is typeof boolean\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/type/tnbr.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        tnbr\n                        \n                    \n                \n            \n            \n                \ntnbr(value)\n                \n            \n\n\n\n\n            \n                \n                        is typeof number and not NaN?\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/type/tobj.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        tobj\n                        \n                    \n                \n            \n            \n                \ntobj(value)\n                \n            \n\n\n\n\n            \n                \n                        is typeof object?\ntypeof value ==='object' && value !==null && !Array.isArray(value)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Obj\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/type/tstr.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        tstr\n                        \n                    \n                \n            \n            \n                \ntstr(value)\n                \n            \n\n\n\n\n            \n                \n                        is typeof string?\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/value/udef.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        udef\n                        \n                    \n                \n            \n            \n                \nudef(value)\n                \n            \n\n\n\n\n            \n                \n                        is undefiend?\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     undefined\n\n                        \n                            \n                                boolean\n\n                            \n                \n            \n        \n    \n    src/lib/val.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        val\n                        \n                    \n                \n            \n            \n                \nval(value, options?: InitOptions)\n                \n            \n\n\n\n\n            \n                \n                        Initialize value\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    value\n\n                                            \n                                        \n                                        \n                                                options\n                                            \n                                                            InitOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    options InitOptions\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n@rline/is\nBetter and safer typescript\nGoal\n\nany variable in the code must be one of valid string, number, boolean, object, or array. The variables must be able to use in their relative operations without any error. For example, NaN is typeof number but it does not work with any numeric operations.\n\nValid Values\n\nstring: none-empty string\nnumber: none-zero\nboolen\nobject: none-empty object\narray: none-empty array, also throw error when all values are null or undefined\n\nInstallation\nExample :pnpm add @rline/isNaming Convention\nType and value checking functions\n\nFirst one or two letters are the type of the function such as t stands for isType, e is isEmpty, ne is isNotEmpty, any function starts with these prefixes return boolean\n\nUsage\n\n add example for the is library\n\nExample :const strValue: string | undefiend = val('some');\nconst strValue: number | undefiend = val(1);\nconst boolValue: boolean | undefiend = val(true);\nconst objectValue: Some | undefiend = val(undefined);\nconst arrValue: [] | undefiend = val([]);\n\nconst rstrValue: string = val('some', { required: true });\nconst rstrValue: number = val(1, { required: true });\nconst rboolValue: boolean = val(true, { required: true });\nconst robjectValue: Some = val(undefined, { required: true });\nconst rarrValue: O[] = val([], { required: true });\n\nconst readonlyObjectValue: O[] = val([], { required: true, readonly: true });\nconst readonlyArrValue: O[] = val([], { required: true, readonly: true });Documentation\nDetailed documentation Documentation\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 9.2.0\n        \n            Description : Utilities for better typescript types\n        \n            Keywords : type, initializer, type-safety, typescript\n        \n            Homepage : https://rbrightline.github.io/common/is\n        \n            Repository : https://github.com/rbrightline/common/tree/main/libs/is\n        \n            Author : Robert Brightline\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EmptyArray   (src/.../earr.ts)\n                        \n                        \n                            InitOptions   (src/.../init-options.ts)\n                        \n                        \n                            Obj   (src/.../tobj.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/value/earr.ts\n    \n    \n        \n            \n                \n                    \n                    EmptyArray\n                \n            \n            \n                \n                    This array type does not have any item\n\n                \n            \n            \n                \n                        []\n\n                \n            \n        \n    \n    src/lib/common/init-options.ts\n    \n    \n        \n            \n                \n                    \n                    InitOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/lib/type/tobj.ts\n    \n    \n        \n            \n                \n                    \n                    Obj\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
