var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/EmptyValueError.html",[0,0.112,1,1.551]],["body/classes/EmptyValueError.html",[0,0.124,1,2.237,2,0.819,3,0.988,4,0.988,5,0.819,6,2.755,7,1.093,8,2.117,9,1.286,10,1.286,11,0.988,12,1.286,13,1.715,14,0.819,15,2.72,16,0.819,17,0.067,18,0.819,19,0.54,20,0.819,21,0.819,22,0.988,23,2.72,24,0.988,25,0.052,26,0.052]],["title/classes/InvalidArrayValueError.html",[0,0.112,27,1.284]],["body/classes/InvalidArrayValueError.html",[0,0.123,2,0.809,3,0.976,4,0.976,5,0.809,7,1.023,9,1.275,10,1.275,11,0.976,12,1.275,13,1.923,14,0.809,16,0.809,17,0.068,18,0.809,19,0.533,20,0.809,21,0.809,22,0.976,24,0.976,25,0.052,26,0.052,27,1.836,28,1.275,29,0.976,30,1.171,31,1.405]],["title/classes/InvalidBooleanValueError.html",[0,0.112,32,1.284]],["body/classes/InvalidBooleanValueError.html",[0,0.123,2,0.809,3,0.976,4,0.976,5,0.809,7,1.023,9,1.275,10,1.275,11,0.976,12,1.275,14,0.809,16,0.809,17,0.068,18,0.809,19,0.533,20,0.809,21,0.809,22,0.976,24,0.976,25,0.052,26,0.052,28,1.275,29,0.976,30,1.171,31,1.405,32,1.836,33,2.79]],["title/classes/InvalidNumberValueError.html",[0,0.112,34,1.284]],["body/classes/InvalidNumberValueError.html",[0,0.123,2,0.809,3,0.976,4,0.976,5,0.809,7,1.023,9,1.275,10,1.275,11,0.976,12,1.275,14,0.809,16,0.809,17,0.068,18,0.809,19,0.533,20,0.809,21,0.809,22,0.976,24,0.976,25,0.052,26,0.052,28,1.275,29,0.976,30,1.171,31,1.405,34,1.836,35,2.79]],["title/classes/InvalidObjectValueError.html",[0,0.112,36,1.284]],["body/classes/InvalidObjectValueError.html",[0,0.118,2,0.775,3,0.935,4,0.935,5,0.775,7,1.047,9,1.24,10,1.24,11,0.935,12,1.24,14,0.775,16,0.775,17,0.069,18,0.775,19,0.511,20,0.775,21,0.775,22,0.935,24,0.935,25,0.05,26,0.05,28,1.24,29,0.935,30,1.122,36,1.785,37,2.421,38,2.981,39,2.575,40,2.575,41,2.575]],["title/classes/InvalidStringValueError.html",[0,0.112,42,1.284]],["body/classes/InvalidStringValueError.html",[0,0.123,2,0.809,3,0.976,4,0.976,5,0.809,7,1.023,9,1.275,10,1.275,11,0.976,12,1.275,14,0.809,16,0.809,17,0.068,18,0.809,19,0.533,20,0.809,21,0.809,22,0.976,24,0.976,25,0.052,26,0.052,28,1.275,29,0.976,30,1.171,31,1.405,42,1.836,43,2.79]],["title/coverage.html",[44,2.573]],["body/coverage.html",[0,0.154,1,0.792,5,0.377,6,0.976,7,0.309,8,0.976,13,0.546,17,0.069,19,0.571,25,0.03,26,0.03,27,0.656,28,1.144,29,1.144,32,0.656,33,0.792,34,0.656,35,0.792,36,0.656,37,0.792,42,0.656,43,0.792,44,0.976,45,1.254,46,1.254,47,1.254,48,0.976,49,0.976,50,2.516,51,0.792,52,2.947,53,2.516,54,3.362,55,0.976,56,4.516,57,0.976,58,0.976,59,4.516,60,4.516,61,0.976,62,0.976,63,0.976,64,0.976,65,0.976,66,1.27,67,0.976,68,0.976,69,0.976,70,0.976,71,0.976,72,0.976,73,0.976,74,0.976,75,1.27,76,0.976,77,0.976,78,0.976,79,0.976,80,0.976,81,0.976,82,0.976,83,1.27,84,0.976,85,0.976,86,0.976,87,0.976,88,0.976,89,0.976,90,0.976,91,0.976,92,0.976,93,0.976,94,0.976,95,0.976,96,0.976,97,0.976,98,0.976,99,0.976,100,0.976,101,0.976,102,0.976,103,0.976,104,0.976,105,0.976,106,0.976,107,0.976,108,1.254,109,1.254,110,1.254]],["title/dependencies.html",[111,1.612,112,2.288]],["body/dependencies.html",[17,0.067,25,0.061,26,0.061,112,2.714,113,3.488,114,3.488,115,3.488,116,3.488]],["title/miscellaneous/functions.html",[117,1.083,118,2.288]],["body/miscellaneous/functions.html",[7,1.077,13,1.04,14,0.23,16,1.245,17,0.067,18,1.245,19,0.685,20,1.245,21,0.846,25,0.02,26,0.02,27,0.4,32,0.4,33,2.236,34,0.4,35,1.776,36,0.4,37,1.776,38,1.857,42,0.4,43,2.181,51,2.236,52,1.035,55,0.596,57,0.596,58,1.035,61,0.596,62,1.035,63,0.596,64,1.035,65,0.596,66,1.508,67,0.596,68,1.035,69,0.596,70,1.035,71,0.596,72,1.035,73,0.596,74,1.035,75,0.484,76,1.035,77,0.596,78,1.035,79,0.596,80,1.035,81,0.596,82,1.035,83,0.484,84,1.035,86,0.596,87,1.035,88,0.596,89,1.035,90,0.596,91,1.035,92,0.596,93,1.035,94,0.596,95,1.035,96,0.596,97,1.035,98,0.596,99,1.035,100,0.596,101,1.035,102,0.596,103,1.035,104,0.596,105,1.035,106,0.596,107,1.035,117,0.4,118,0.596,119,0.484,120,0.766,121,0.766,122,0.766,123,0.596,124,0.766,125,0.766,126,0.766,127,0.766,128,0.766,129,0.766,130,0.766,131,0.766,132,0.766,133,0.766,134,0.766,135,0.766,136,0.766,137,0.766,138,0.766,139,0.766,140,0.766,141,0.596,142,0.766,143,0.766,144,0.766,145,0.766,146,1.33,147,3.537,148,2.616,149,2.386,150,0.766,151,0.766,152,1.764,153,2.386,154,3.861,155,0.766,156,3.353,157,0.766,158,1.764,159,0.766,160,0.766,161,0.766,162,0.766,163,0.766,164,0.766,165,0.766,166,0.766,167,0.766,168,0.766,169,0.766,170,0.766,171,0.766,172,0.766,173,0.766,174,2.386,175,0.766,176,0.766,177,0.766,178,0.766,179,0.766,180,0.766,181,0.766,182,0.766]],["title/index.html",[119,1.309,183,2.071,184,2.071]],["body/index.html",[17,0.061,25,0.061,26,0.061,185,3.517,186,3.517,187,3.517,188,4.151,189,3.517]],["title/modules.html",[190,2.573]],["body/modules.html",[17,0.063,25,0.063,26,0.063,190,2.852]],["title/overview.html",[191,2.573]],["body/overview.html",[2,1.085,17,0.062,25,0.062,26,0.062,191,2.805,192,3.604]],["title/properties.html",[111,1.612,193,2.288]],["body/properties.html",[17,0.065,25,0.062,26,0.062,193,2.782,194,3.575,195,3.575]],["title/miscellaneous/typealiases.html",[117,1.083,196,2.941]],["body/miscellaneous/typealiases.html",[13,1.318,17,0.061,19,0.86,25,0.056,26,0.056,48,2.354,49,2.948,51,2.394,66,2.394,75,1.912,83,1.912,85,2.948,117,1.582,119,1.912,123,2.354,141,2.354,197,3.025,198,3.025,199,3.025,200,3.788]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"classes/EmptyValueError.html":{},"classes/InvalidArrayValueError.html":{},"classes/InvalidBooleanValueError.html":{},"classes/InvalidNumberValueError.html":{},"classes/InvalidObjectValueError.html":{},"classes/InvalidStringValueError.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":52,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["0/1",{"_index":53,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":54,"title":{},"body":{"coverage.html":{}}}],["1/1",{"_index":60,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":59,"title":{},"body":{"coverage.html":{}}}],["13.1.0",{"_index":116,"title":{},"body":{"dependencies.html":{}}}],["20.3.2",{"_index":114,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":192,"title":{},"body":{"overview.html":{}}}],["8.1.1",{"_index":195,"title":{},"body":{"properties.html":{}}}],["alias",{"_index":50,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":197,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["arr",{"_index":58,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["arr(value",{"_index":145,"title":{},"body":{"miscellaneous/functions.html":{}}}],["array",{"_index":13,"title":{},"body":{"classes/EmptyValueError.html":{},"classes/InvalidArrayValueError.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["array.isarray(value",{"_index":177,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bln",{"_index":62,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["bln(value",{"_index":150,"title":{},"body":{"miscellaneous/functions.html":{}}}],["boolean",{"_index":33,"title":{},"body":{"classes/InvalidBooleanValueError.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["brighline",{"_index":185,"title":{},"body":{"index.html":{}}}],["class",{"_index":0,"title":{"classes/EmptyValueError.html":{},"classes/InvalidArrayValueError.html":{},"classes/InvalidBooleanValueError.html":{},"classes/InvalidNumberValueError.html":{},"classes/InvalidObjectValueError.html":{},"classes/InvalidStringValueError.html":{}},"body":{"classes/EmptyValueError.html":{},"classes/InvalidArrayValueError.html":{},"classes/InvalidBooleanValueError.html":{},"classes/InvalidNumberValueError.html":{},"classes/InvalidObjectValueError.html":{},"classes/InvalidStringValueError.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/EmptyValueError.html":{},"classes/InvalidArrayValueError.html":{},"classes/InvalidBooleanValueError.html":{},"classes/InvalidNumberValueError.html":{},"classes/InvalidObjectValueError.html":{},"classes/InvalidStringValueError.html":{},"overview.html":{}}}],["commander",{"_index":115,"title":{},"body":{"dependencies.html":{}}}],["common",{"_index":189,"title":{},"body":{"index.html":{}}}],["comon",{"_index":187,"title":{},"body":{"index.html":{}}}],["constructor",{"_index":11,"title":{},"body":{"classes/EmptyValueError.html":{},"classes/InvalidArrayValueError.html":{},"classes/InvalidBooleanValueError.html":{},"classes/InvalidNumberValueError.html":{},"classes/InvalidObjectValueError.html":{},"classes/InvalidStringValueError.html":{}}}],["constructor(value",{"_index":12,"title":{},"body":{"classes/EmptyValueError.html":{},"classes/InvalidArrayValueError.html":{},"classes/InvalidBooleanValueError.html":{},"classes/InvalidNumberValueError.html":{},"classes/InvalidObjectValueError.html":{},"classes/InvalidStringValueError.html":{}}}],["coverage",{"_index":44,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["def",{"_index":82,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["def(value",{"_index":151,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defined",{"_index":14,"title":{},"body":{"classes/EmptyValueError.html":{},"classes/InvalidArrayValueError.html":{},"classes/InvalidBooleanValueError.html":{},"classes/InvalidNumberValueError.html":{},"classes/InvalidObjectValueError.html":{},"classes/InvalidStringValueError.html":{},"miscellaneous/functions.html":{}}}],["dependencies",{"_index":112,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":182,"title":{},"body":{"miscellaneous/functions.html":{}}}],["documentation",{"_index":45,"title":{},"body":{"coverage.html":{}}}],["earr",{"_index":84,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["earr(value",{"_index":155,"title":{},"body":{"miscellaneous/functions.html":{}}}],["empty",{"_index":156,"title":{},"body":{"miscellaneous/functions.html":{}}}],["emptyarray",{"_index":85,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["emptyvalueerror",{"_index":1,"title":{"classes/EmptyValueError.html":{}},"body":{"classes/EmptyValueError.html":{},"coverage.html":{}}}],["enbr",{"_index":87,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["enbr(value",{"_index":157,"title":{},"body":{"miscellaneous/functions.html":{}}}],["eobj",{"_index":89,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["eobj(value",{"_index":159,"title":{},"body":{"miscellaneous/functions.html":{}}}],["error",{"_index":10,"title":{},"body":{"classes/EmptyValueError.html":{},"classes/InvalidArrayValueError.html":{},"classes/InvalidBooleanValueError.html":{},"classes/InvalidNumberValueError.html":{},"classes/InvalidObjectValueError.html":{},"classes/InvalidStringValueError.html":{}}}],["error.ts",{"_index":8,"title":{},"body":{"classes/EmptyValueError.html":{},"coverage.html":{}}}],["error.ts:1",{"_index":15,"title":{},"body":{"classes/EmptyValueError.html":{}}}],["estr",{"_index":91,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["estr(value",{"_index":160,"title":{},"body":{"miscellaneous/functions.html":{}}}],["export",{"_index":22,"title":{},"body":{"classes/EmptyValueError.html":{},"classes/InvalidArrayValueError.html":{},"classes/InvalidBooleanValueError.html":{},"classes/InvalidNumberValueError.html":{},"classes/InvalidObjectValueError.html":{},"classes/InvalidStringValueError.html":{}}}],["extends",{"_index":9,"title":{},"body":{"classes/EmptyValueError.html":{},"classes/InvalidArrayValueError.html":{},"classes/InvalidBooleanValueError.html":{},"classes/InvalidNumberValueError.html":{},"classes/InvalidObjectValueError.html":{},"classes/InvalidStringValueError.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/EmptyValueError.html":{},"classes/InvalidArrayValueError.html":{},"classes/InvalidBooleanValueError.html":{},"classes/InvalidNumberValueError.html":{},"classes/InvalidObjectValueError.html":{},"classes/InvalidStringValueError.html":{},"coverage.html":{}}}],["function",{"_index":56,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":118,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["getting",{"_index":183,"title":{"index.html":{}},"body":{}}],["identifier",{"_index":46,"title":{},"body":{"coverage.html":{}}}],["index",{"_index":119,"title":{"index.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/EmptyValueError.html":{},"classes/InvalidArrayValueError.html":{},"classes/InvalidBooleanValueError.html":{},"classes/InvalidNumberValueError.html":{},"classes/InvalidObjectValueError.html":{},"classes/InvalidStringValueError.html":{}}}],["initialize",{"_index":148,"title":{},"body":{"miscellaneous/functions.html":{}}}],["initoptions",{"_index":51,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["invalid",{"_index":40,"title":{},"body":{"classes/InvalidObjectValueError.html":{}}}],["invalidarrayvalueerror",{"_index":27,"title":{"classes/InvalidArrayValueError.html":{}},"body":{"classes/InvalidArrayValueError.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["invalidbooleanvalueerror",{"_index":32,"title":{"classes/InvalidBooleanValueError.html":{}},"body":{"classes/InvalidBooleanValueError.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["invalidnumbervalueerror",{"_index":34,"title":{"classes/InvalidNumberValueError.html":{}},"body":{"classes/InvalidNumberValueError.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["invalidobjectvalueerror",{"_index":36,"title":{"classes/InvalidObjectValueError.html":{}},"body":{"classes/InvalidObjectValueError.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["invalidstringvalueerror",{"_index":42,"title":{"classes/InvalidStringValueError.html":{}},"body":{"classes/InvalidStringValueError.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["item",{"_index":199,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["json.stringify(value",{"_index":41,"title":{},"body":{"classes/InvalidObjectValueError.html":{}}}],["libs/.../arr.ts",{"_index":120,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../bln.ts",{"_index":121,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../def.ts",{"_index":122,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../earr.ts",{"_index":123,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["libs/.../enbr.ts",{"_index":124,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../eobj.ts",{"_index":125,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../estr.ts",{"_index":126,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../init",{"_index":198,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../nbr.ts",{"_index":127,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../ne.ts",{"_index":128,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../nearr.ts",{"_index":129,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../nenbr.ts",{"_index":130,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../neobj.ts",{"_index":131,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../nestr.ts",{"_index":132,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../nil.ts",{"_index":133,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../nnil.ts",{"_index":134,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../not.ts",{"_index":135,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../obj.ts",{"_index":136,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../str.ts",{"_index":137,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../tarr.ts",{"_index":138,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../tbln.ts",{"_index":139,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../tnbr.ts",{"_index":140,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../tobj.ts",{"_index":141,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["libs/.../tstr.ts",{"_index":142,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../udef.ts",{"_index":143,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../val.ts",{"_index":144,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/is/src/lib/common/init",{"_index":48,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["libs/is/src/lib/errors/empty",{"_index":6,"title":{},"body":{"classes/EmptyValueError.html":{},"coverage.html":{}}}],["libs/is/src/lib/errors/invalid",{"_index":28,"title":{},"body":{"classes/InvalidArrayValueError.html":{},"classes/InvalidBooleanValueError.html":{},"classes/InvalidNumberValueError.html":{},"classes/InvalidObjectValueError.html":{},"classes/InvalidStringValueError.html":{},"coverage.html":{}}}],["libs/is/src/lib/flow/not.ts",{"_index":55,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/is/src/lib/init/arr.ts",{"_index":57,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/is/src/lib/init/bln.ts",{"_index":61,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/is/src/lib/init/nbr.ts",{"_index":63,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/is/src/lib/init/obj.ts",{"_index":65,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/is/src/lib/init/str.ts",{"_index":67,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/is/src/lib/type/tarr.ts",{"_index":69,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/is/src/lib/type/tbln.ts",{"_index":71,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/is/src/lib/type/tnbr.ts",{"_index":73,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/is/src/lib/type/tobj.ts",{"_index":75,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["libs/is/src/lib/type/tstr.ts",{"_index":77,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/is/src/lib/val.ts",{"_index":79,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/is/src/lib/value/def.ts",{"_index":81,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/is/src/lib/value/earr.ts",{"_index":83,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["libs/is/src/lib/value/enbr.ts",{"_index":86,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/is/src/lib/value/eobj.ts",{"_index":88,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/is/src/lib/value/estr.ts",{"_index":90,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/is/src/lib/value/ne.ts",{"_index":92,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/is/src/lib/value/nearr.ts",{"_index":94,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/is/src/lib/value/nenbr.ts",{"_index":96,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/is/src/lib/value/neobj.ts",{"_index":98,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/is/src/lib/value/nestr.ts",{"_index":100,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/is/src/lib/value/nil.ts",{"_index":102,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/is/src/lib/value/nnil.ts",{"_index":104,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/is/src/lib/value/udef.ts",{"_index":106,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["literal",{"_index":200,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["matching",{"_index":26,"title":{},"body":{"classes/EmptyValueError.html":{},"classes/InvalidArrayValueError.html":{},"classes/InvalidBooleanValueError.html":{},"classes/InvalidNumberValueError.html":{},"classes/InvalidObjectValueError.html":{},"classes/InvalidStringValueError.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["miscellaneous",{"_index":117,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["modules",{"_index":190,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["name",{"_index":18,"title":{},"body":{"classes/EmptyValueError.html":{},"classes/InvalidArrayValueError.html":{},"classes/InvalidBooleanValueError.html":{},"classes/InvalidNumberValueError.html":{},"classes/InvalidObjectValueError.html":{},"classes/InvalidStringValueError.html":{},"miscellaneous/functions.html":{}}}],["nan",{"_index":158,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nbr",{"_index":64,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["nbr(value",{"_index":161,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ne",{"_index":93,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ne(value",{"_index":162,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nearr",{"_index":95,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["nearr(value",{"_index":163,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nenbr",{"_index":97,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["nenbr(value",{"_index":164,"title":{},"body":{"miscellaneous/functions.html":{}}}],["neobj",{"_index":99,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["neobj(value",{"_index":165,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nestr",{"_index":101,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["nestr(value",{"_index":166,"title":{},"body":{"miscellaneous/functions.html":{}}}],["new",{"_index":108,"title":{},"body":{"coverage.html":{}}}],["nil",{"_index":103,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["nil(value",{"_index":167,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nnil",{"_index":105,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["nnil(value",{"_index":168,"title":{},"body":{"miscellaneous/functions.html":{}}}],["not(value",{"_index":169,"title":{},"body":{"miscellaneous/functions.html":{}}}],["null",{"_index":153,"title":{},"body":{"miscellaneous/functions.html":{}}}],["number",{"_index":35,"title":{},"body":{"classes/InvalidNumberValueError.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["nx/devkit",{"_index":113,"title":{},"body":{"dependencies.html":{}}}],["obj",{"_index":66,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["obj(value",{"_index":170,"title":{},"body":{"miscellaneous/functions.html":{}}}],["object",{"_index":37,"title":{},"body":{"classes/InvalidObjectValueError.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["optional",{"_index":20,"title":{},"body":{"classes/EmptyValueError.html":{},"classes/InvalidArrayValueError.html":{},"classes/InvalidBooleanValueError.html":{},"classes/InvalidNumberValueError.html":{},"classes/InvalidObjectValueError.html":{},"classes/InvalidStringValueError.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":147,"title":{},"body":{"miscellaneous/functions.html":{}}}],["options.ts",{"_index":49,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["overview",{"_index":191,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":111,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["packages",{"_index":188,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":16,"title":{},"body":{"classes/EmptyValueError.html":{},"classes/InvalidArrayValueError.html":{},"classes/InvalidBooleanValueError.html":{},"classes/InvalidNumberValueError.html":{},"classes/InvalidObjectValueError.html":{},"classes/InvalidStringValueError.html":{},"miscellaneous/functions.html":{}}}],["properties",{"_index":193,"title":{"properties.html":{}},"body":{"properties.html":{}}}],["provided",{"_index":24,"title":{},"body":{"classes/EmptyValueError.html":{},"classes/InvalidArrayValueError.html":{},"classes/InvalidBooleanValueError.html":{},"classes/InvalidNumberValueError.html":{},"classes/InvalidObjectValueError.html":{},"classes/InvalidStringValueError.html":{}}}],["results",{"_index":25,"title":{},"body":{"classes/EmptyValueError.html":{},"classes/InvalidArrayValueError.html":{},"classes/InvalidBooleanValueError.html":{},"classes/InvalidNumberValueError.html":{},"classes/InvalidObjectValueError.html":{},"classes/InvalidStringValueError.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["returns",{"_index":154,"title":{},"body":{"miscellaneous/functions.html":{}}}],["software",{"_index":186,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/EmptyValueError.html":{},"classes/InvalidArrayValueError.html":{},"classes/InvalidBooleanValueError.html":{},"classes/InvalidNumberValueError.html":{},"classes/InvalidObjectValueError.html":{},"classes/InvalidStringValueError.html":{}}}],["started",{"_index":184,"title":{"index.html":{}},"body":{}}],["statements",{"_index":47,"title":{},"body":{"coverage.html":{}}}],["str",{"_index":68,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["str(value",{"_index":171,"title":{},"body":{"miscellaneous/functions.html":{}}}],["string",{"_index":43,"title":{},"body":{"classes/InvalidStringValueError.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["super",{"_index":39,"title":{},"body":{"classes/InvalidObjectValueError.html":{}}}],["super(`empty",{"_index":23,"title":{},"body":{"classes/EmptyValueError.html":{}}}],["super(`invalid",{"_index":31,"title":{},"body":{"classes/InvalidArrayValueError.html":{},"classes/InvalidBooleanValueError.html":{},"classes/InvalidNumberValueError.html":{},"classes/InvalidStringValueError.html":{}}}],["t",{"_index":38,"title":{},"body":{"classes/InvalidObjectValueError.html":{},"miscellaneous/functions.html":{}}}],["table",{"_index":110,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":109,"title":{},"body":{"coverage.html":{}}}],["tarr",{"_index":70,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["tarr(value",{"_index":172,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tbln",{"_index":72,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["tbln(value",{"_index":173,"title":{},"body":{"miscellaneous/functions.html":{}}}],["throw",{"_index":149,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tnbr",{"_index":74,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["tnbr(value",{"_index":175,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tobj",{"_index":76,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["tobj(value",{"_index":176,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tstr",{"_index":78,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["tstr(value",{"_index":178,"title":{},"body":{"miscellaneous/functions.html":{}}}],["type",{"_index":19,"title":{},"body":{"classes/EmptyValueError.html":{},"classes/InvalidArrayValueError.html":{},"classes/InvalidBooleanValueError.html":{},"classes/InvalidNumberValueError.html":{},"classes/InvalidObjectValueError.html":{},"classes/InvalidStringValueError.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":196,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":174,"title":{},"body":{"miscellaneous/functions.html":{}}}],["udef",{"_index":107,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["udef(value",{"_index":179,"title":{},"body":{"miscellaneous/functions.html":{}}}],["undefiend",{"_index":180,"title":{},"body":{"miscellaneous/functions.html":{}}}],["undefined",{"_index":152,"title":{},"body":{"miscellaneous/functions.html":{}}}],["v",{"_index":146,"title":{},"body":{"miscellaneous/functions.html":{}}}],["val",{"_index":80,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["val(value",{"_index":181,"title":{},"body":{"miscellaneous/functions.html":{}}}],["value",{"_index":7,"title":{},"body":{"classes/EmptyValueError.html":{},"classes/InvalidArrayValueError.html":{},"classes/InvalidBooleanValueError.html":{},"classes/InvalidNumberValueError.html":{},"classes/InvalidObjectValueError.html":{},"classes/InvalidStringValueError.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["value.error.ts",{"_index":29,"title":{},"body":{"classes/InvalidArrayValueError.html":{},"classes/InvalidBooleanValueError.html":{},"classes/InvalidNumberValueError.html":{},"classes/InvalidObjectValueError.html":{},"classes/InvalidStringValueError.html":{},"coverage.html":{}}}],["value.error.ts:1",{"_index":30,"title":{},"body":{"classes/InvalidArrayValueError.html":{},"classes/InvalidBooleanValueError.html":{},"classes/InvalidNumberValueError.html":{},"classes/InvalidObjectValueError.html":{},"classes/InvalidStringValueError.html":{}}}],["version",{"_index":194,"title":{},"body":{"properties.html":{}}}],["yes",{"_index":21,"title":{},"body":{"classes/EmptyValueError.html":{},"classes/InvalidArrayValueError.html":{},"classes/InvalidBooleanValueError.html":{},"classes/InvalidNumberValueError.html":{},"classes/InvalidObjectValueError.html":{},"classes/InvalidStringValueError.html":{},"miscellaneous/functions.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/EmptyValueError.html":{"url":"classes/EmptyValueError.html","title":"class - EmptyValueError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmptyValueError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/is/src/lib/errors/empty-value-error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(value?: Array<>)\n                    \n                \n                        \n                            \n                                Defined in libs/is/src/lib/errors/empty-value-error.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                    Array<>\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class EmptyValueError extends Error {\n  constructor(value?: Array) {\n    super(`Empty value: ${value ?? 'value not provided'}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidArrayValueError.html":{"url":"classes/InvalidArrayValueError.html","title":"class - InvalidArrayValueError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidArrayValueError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/is/src/lib/errors/invalid-array-value.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(value?: Array<>)\n                    \n                \n                        \n                            \n                                Defined in libs/is/src/lib/errors/invalid-array-value.error.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                    Array<>\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class InvalidArrayValueError extends Error {\n  constructor(value?: Array) {\n    super(`Invalid array value : ${value ?? 'value not provided'}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidBooleanValueError.html":{"url":"classes/InvalidBooleanValueError.html","title":"class - InvalidBooleanValueError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidBooleanValueError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/is/src/lib/errors/invalid-boolean-value.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(value?: boolean)\n                    \n                \n                        \n                            \n                                Defined in libs/is/src/lib/errors/invalid-boolean-value.error.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class InvalidBooleanValueError extends Error {\n  constructor(value?: boolean) {\n    super(`Invalid boolean value : ${value ?? 'value not provided'}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidNumberValueError.html":{"url":"classes/InvalidNumberValueError.html","title":"class - InvalidNumberValueError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidNumberValueError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/is/src/lib/errors/invalid-number-value.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(value?: number)\n                    \n                \n                        \n                            \n                                Defined in libs/is/src/lib/errors/invalid-number-value.error.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class InvalidNumberValueError extends Error {\n  constructor(value?: number) {\n    super(`Invalid number value : ${value ?? 'value not provided'}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidObjectValueError.html":{"url":"classes/InvalidObjectValueError.html","title":"class - InvalidObjectValueError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidObjectValueError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/is/src/lib/errors/invalid-object-value.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(value?: T)\n                    \n                \n                        \n                            \n                                Defined in libs/is/src/lib/errors/invalid-object-value.error.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                    T\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class InvalidObjectValueError extends Error {\n  constructor(value?: T) {\n    super(\n      `Invalid object value :${\n        (value ? JSON.stringify(value) : value) ?? 'value not provided'\n      }`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidStringValueError.html":{"url":"classes/InvalidStringValueError.html","title":"class - InvalidStringValueError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidStringValueError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/is/src/lib/errors/invalid-string-value.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(value?: string)\n                    \n                \n                        \n                            \n                                Defined in libs/is/src/lib/errors/invalid-string-value.error.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class InvalidStringValueError extends Error {\n  constructor(value?: string) {\n    super(`Invalid string value : ${value ?? 'value not provided'}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        libs/is/src/lib/common/init-options.ts\n            \n            type alias\n            InitOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/is/src/lib/errors/empty-value-error.ts\n            \n            class\n            EmptyValueError\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/is/src/lib/errors/invalid-array-value.error.ts\n            \n            class\n            InvalidArrayValueError\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/is/src/lib/errors/invalid-boolean-value.error.ts\n            \n            class\n            InvalidBooleanValueError\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/is/src/lib/errors/invalid-number-value.error.ts\n            \n            class\n            InvalidNumberValueError\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/is/src/lib/errors/invalid-object-value.error.ts\n            \n            class\n            InvalidObjectValueError\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/is/src/lib/errors/invalid-string-value.error.ts\n            \n            class\n            InvalidStringValueError\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        libs/is/src/lib/flow/not.ts\n            \n            function\n            not\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/is/src/lib/init/arr.ts\n            \n            function\n            arr\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/is/src/lib/init/bln.ts\n            \n            function\n            bln\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/is/src/lib/init/nbr.ts\n            \n            function\n            nbr\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/is/src/lib/init/obj.ts\n            \n            function\n            obj\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/is/src/lib/init/str.ts\n            \n            function\n            str\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/is/src/lib/type/tarr.ts\n            \n            function\n            tarr\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/is/src/lib/type/tbln.ts\n            \n            function\n            tbln\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/is/src/lib/type/tnbr.ts\n            \n            function\n            tnbr\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/is/src/lib/type/tobj.ts\n            \n            function\n            tobj\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/is/src/lib/type/tobj.ts\n            \n            type alias\n            Obj\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/is/src/lib/type/tstr.ts\n            \n            function\n            tstr\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/is/src/lib/val.ts\n            \n            function\n            val\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/is/src/lib/value/def.ts\n            \n            function\n            def\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/is/src/lib/value/earr.ts\n            \n            function\n            earr\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/is/src/lib/value/earr.ts\n            \n            type alias\n            EmptyArray\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/is/src/lib/value/enbr.ts\n            \n            function\n            enbr\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/is/src/lib/value/eobj.ts\n            \n            function\n            eobj\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/is/src/lib/value/estr.ts\n            \n            function\n            estr\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/is/src/lib/value/ne.ts\n            \n            function\n            ne\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/is/src/lib/value/nearr.ts\n            \n            function\n            nearr\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/is/src/lib/value/nenbr.ts\n            \n            function\n            nenbr\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/is/src/lib/value/neobj.ts\n            \n            function\n            neobj\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/is/src/lib/value/nestr.ts\n            \n            function\n            nestr\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/is/src/lib/value/nil.ts\n            \n            function\n            nil\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/is/src/lib/value/nnil.ts\n            \n            function\n            nnil\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/is/src/lib/value/udef.ts\n            \n            function\n            udef\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nx/devkit : 20.3.2\n        \n            commander : ^13.1.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            arr   (libs/.../arr.ts)\n                        \n                        \n                            bln   (libs/.../bln.ts)\n                        \n                        \n                            def   (libs/.../def.ts)\n                        \n                        \n                            earr   (libs/.../earr.ts)\n                        \n                        \n                            enbr   (libs/.../enbr.ts)\n                        \n                        \n                            eobj   (libs/.../eobj.ts)\n                        \n                        \n                            estr   (libs/.../estr.ts)\n                        \n                        \n                            nbr   (libs/.../nbr.ts)\n                        \n                        \n                            ne   (libs/.../ne.ts)\n                        \n                        \n                            nearr   (libs/.../nearr.ts)\n                        \n                        \n                            nenbr   (libs/.../nenbr.ts)\n                        \n                        \n                            neobj   (libs/.../neobj.ts)\n                        \n                        \n                            nestr   (libs/.../nestr.ts)\n                        \n                        \n                            nil   (libs/.../nil.ts)\n                        \n                        \n                            nnil   (libs/.../nnil.ts)\n                        \n                        \n                            not   (libs/.../not.ts)\n                        \n                        \n                            obj   (libs/.../obj.ts)\n                        \n                        \n                            str   (libs/.../str.ts)\n                        \n                        \n                            tarr   (libs/.../tarr.ts)\n                        \n                        \n                            tbln   (libs/.../tbln.ts)\n                        \n                        \n                            tnbr   (libs/.../tnbr.ts)\n                        \n                        \n                            tobj   (libs/.../tobj.ts)\n                        \n                        \n                            tstr   (libs/.../tstr.ts)\n                        \n                        \n                            udef   (libs/.../udef.ts)\n                        \n                        \n                            val   (libs/.../val.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/is/src/lib/init/arr.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        arr\n                        \n                    \n                \n            \n            \n                \narr(value: V, options?: InitOptions)\n                \n            \n\n\n\n\n            \n                \n                        initialize array value or throw InvalidArrayValueError\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        V\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            InitOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    libs/is/src/lib/init/bln.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bln\n                        \n                    \n                \n            \n            \n                \nbln(value, options?: InitOptions)\n                \n            \n\n\n\n\n            \n                \n                        initialize boolean value or throw InvalidBooleanValueError\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            InitOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    libs/is/src/lib/value/def.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        def\n                        \n                    \n                \n            \n            \n                \ndef(value)\n                \n            \n\n\n\n\n            \n                \n                        is defined ( not undefined an not null?\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    libs/is/src/lib/value/earr.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        earr\n                        \n                    \n                \n            \n            \n                \nearr(value)\n                \n            \n\n\n\n\n            \n                \n                        is empty array?\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    libs/is/src/lib/value/enbr.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        enbr\n                        \n                    \n                \n            \n            \n                \nenbr(value)\n                \n            \n\n\n\n\n            \n                \n                        is 0 or NaN?\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    libs/is/src/lib/value/eobj.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        eobj\n                        \n                    \n                \n            \n            \n                \neobj(value)\n                \n            \n\n\n\n\n            \n                \n                        is empty object?\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    libs/is/src/lib/value/estr.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        estr\n                        \n                    \n                \n            \n            \n                \nestr(value: string)\n                \n            \n\n\n\n\n            \n                \n                        is empty string?\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    libs/is/src/lib/init/nbr.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        nbr\n                        \n                    \n                \n            \n            \n                \nnbr(value, options?: InitOptions)\n                \n            \n\n\n\n\n            \n                \n                        initialize number value or throw InvalidNumberValueError\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            InitOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    libs/is/src/lib/value/ne.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ne\n                        \n                    \n                \n            \n            \n                \nne(value)\n                \n            \n\n\n\n\n            \n                \n                        is not empty value (not null, undefined, empty string or object)?\n\nstring: not be empty string\nnumber: not NaN\nobject: not Empty\narray: not Empty\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    libs/is/src/lib/value/nearr.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        nearr\n                        \n                    \n                \n            \n            \n                \nnearr(value)\n                \n            \n\n\n\n\n            \n                \n                        is not empty array?\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    libs/is/src/lib/value/nenbr.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        nenbr\n                        \n                    \n                \n            \n            \n                \nnenbr(value: number)\n                \n            \n\n\n\n\n            \n                \n                        is not 0?\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    libs/is/src/lib/value/neobj.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        neobj\n                        \n                    \n                \n            \n            \n                \nneobj(value: Obj)\n                \n            \n\n\n\n\n            \n                \n                        is not empty object?\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            Obj\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    libs/is/src/lib/value/nestr.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        nestr\n                        \n                    \n                \n            \n            \n                \nnestr(value: string)\n                \n            \n\n\n\n\n            \n                \n                        is not empty string\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    libs/is/src/lib/value/nil.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        nil\n                        \n                    \n                \n            \n            \n                \nnil(value)\n                \n            \n\n\n\n\n            \n                \n                        is null?\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    libs/is/src/lib/value/nnil.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        nnil\n                        \n                    \n                \n            \n            \n                \nnnil(value)\n                \n            \n\n\n\n\n            \n                \n                        is not null?\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    libs/is/src/lib/flow/not.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        not\n                        \n                    \n                \n            \n            \n                \nnot(value: boolean)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    libs/is/src/lib/init/obj.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        obj\n                        \n                    \n                \n            \n            \n                \nobj(value, options?: InitOptions)\n                \n            \n\n\n\n\n            \n                \n                        initialize object value or throw InvalidObjectValueError\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            InitOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    libs/is/src/lib/init/str.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        str\n                        \n                    \n                \n            \n            \n                \nstr(value, options?: InitOptions)\n                \n            \n\n\n\n\n            \n                \n                        initialize string value or throw InvalidStringValueError\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            InitOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    libs/is/src/lib/type/tarr.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        tarr\n                        \n                    \n                \n            \n            \n                \ntarr(value?)\n                \n            \n\n\n\n\n            \n                \n                        is type of array?\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    libs/is/src/lib/type/tbln.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        tbln\n                        \n                    \n                \n            \n            \n                \ntbln(value)\n                \n            \n\n\n\n\n            \n                \n                        is typeof boolean\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    libs/is/src/lib/type/tnbr.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        tnbr\n                        \n                    \n                \n            \n            \n                \ntnbr(value)\n                \n            \n\n\n\n\n            \n                \n                        is typeof number and not NaN?\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    libs/is/src/lib/type/tobj.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        tobj\n                        \n                    \n                \n            \n            \n                \ntobj(value)\n                \n            \n\n\n\n\n            \n                \n                        is typeof object?\ntypeof value ==='object' && value !==null && !Array.isArray(value)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Obj\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    libs/is/src/lib/type/tstr.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        tstr\n                        \n                    \n                \n            \n            \n                \ntstr(value)\n                \n            \n\n\n\n\n            \n                \n                        is typeof string?\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    libs/is/src/lib/value/udef.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        udef\n                        \n                    \n                \n            \n            \n                \nudef(value)\n                \n            \n\n\n\n\n            \n                \n                        is undefiend?\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     undefined\n\n                        \n                            \n                                boolean\n\n                            \n                \n            \n        \n    \n    libs/is/src/lib/val.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        val\n                        \n                    \n                \n            \n            \n                \nval(value, options?: InitOptions)\n                \n            \n\n\n\n\n            \n                \n                        Initialize value\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    value\n\n                                            \n                                        \n                                        \n                                                options\n                                            \n                                                            InitOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    options InitOptions\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nBrighline Software Comon Packages\nCommon packages\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 8.1.1\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EmptyArray   (libs/.../earr.ts)\n                        \n                        \n                            InitOptions   (libs/.../init-options.ts)\n                        \n                        \n                            Obj   (libs/.../tobj.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/is/src/lib/value/earr.ts\n    \n    \n        \n            \n                \n                    \n                    EmptyArray\n                \n            \n            \n                \n                    This array type does not have any item\n\n                \n            \n            \n                \n                        []\n\n                \n            \n        \n    \n    libs/is/src/lib/common/init-options.ts\n    \n    \n        \n            \n                \n                    \n                    InitOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    libs/is/src/lib/type/tobj.ts\n    \n    \n        \n            \n                \n                    \n                    Obj\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
