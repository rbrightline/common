var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/SchemaManager.html",[0,0.987,1,0.987]],["body/classes/SchemaManager.html",[0,0.243,1,0.584,2,0.541,3,0.541,4,0.541,5,1.408,6,1.672,7,0.311,8,0.188,9,0.554,10,2.45,11,1.302,12,1.302,13,1.302,14,3.276,15,2.754,16,2.008,17,2.45,18,2.176,19,1.408,20,0.963,21,2.835,22,1.58,23,2.176,24,1.58,25,1.58,26,1.58,27,0.541,28,0.963,29,0.709,30,2.835,31,0.963,32,0.716,33,0.098,34,0.716,35,1.042,36,0.716,37,0.402,38,0.541,39,2.163,40,1.822,41,2.008,42,0.963,43,0.541,44,0.963,45,1.811,46,0.541,47,0.963,48,0.541,49,0.963,50,2.163,51,0.541,52,0.963,53,1.076,54,1.493,55,0.541,56,2.45,57,0.541,58,0.963,59,0.963,60,0.541,61,2.008,62,0.963,63,0.541,64,1.302,65,2.975,66,1.811,67,0.541,68,0.541,69,0.963,70,1.811,71,0.963,72,1.302,73,0.963,74,1.302,75,1.302,76,1.58,77,1.58,78,2.008,79,1.302,80,1.811,81,0.963,82,0.963,83,0.541,84,0.963,85,0.963,86,1.58,87,1.58,88,0.963,89,0.963,90,0.541,91,1.811,92,0.541,93,0.541,94,0.541,95,0.541,96,0.541,97,0.541,98,1.58,99,0.716,100,0.541,101,0.541,102,0.541,103,0.541,104,0.541,105,0.541,106,0.541,107,1.302,108,0.541,109,0.402,110,0.402,111,0.748,112,0.963,113,0.541,114,0.541,115,0.541,116,0.541,117,0.541,118,0.541,119,0.541,120,0.541,121,0.963,122,0.541,123,0.541,124,0.541,125,0.541,126,1.58,127,0.541,128,0.541,129,0.963,130,2.008,131,0.541,132,0.541,133,2.008,134,0.541,135,0.541,136,0.541,137,0.541,138,0.541,139,0.541,140,0.541,141,0.541,142,0.541,143,0.541,144,0.963,145,0.541,146,0.541,147,0.541,148,0.541,149,0.541,150,0.963,151,0.541,152,0.541,153,0.402,154,1.302,155,0.541,156,0.963,157,0.541,158,0.541,159,0.541,160,0.541,161,0.541,162,0.541,163,0.541,164,0.541,165,0.541,166,0.541,167,0.541,168,0.541,169,0.541,170,0.541,171,0.022,172,0.022]],["title/coverage.html",[173,2.179]],["body/coverage.html",[0,1.009,1,1.009,5,1.293,6,1.914,7,1.914,29,1.009,33,0.093,35,1.59,53,0.783,54,1.673,111,1.293,153,2.211,171,0.069,172,0.069,173,1.673,174,2.25,175,2.25,176,2.25,177,1.673,178,3.331,179,1.673,180,3.544,181,3.544,182,1.673,183,1.673,184,2.974,185,2.25,186,2.25,187,2.974,188,1.673,189,1.673,190,2.25,191,1.673,192,2.25,193,2.25]],["title/dependencies.html",[194,1.394,195,1.953]],["body/dependencies.html",[33,0.092,171,0.084,172,0.084,195,2.273,196,3.057,197,3.057,198,3.057,199,3.057]],["title/miscellaneous/functions.html",[200,0.495,201,1.953]],["body/miscellaneous/functions.html",[5,1.389,8,0.841,19,1.389,29,1.397,32,2.316,33,0.085,34,2.316,35,1.691,36,2.316,37,1.797,50,2.708,53,1.199,171,0.073,172,0.073,177,1.797,179,2.316,182,1.797,183,1.797,200,0.638,201,1.797,202,2.416,203,2.416,204,2.416,205,2.416,206,3.115,207,2.416,208,2.416,209,2.416,210,2.416,211,2.416]],["title/index.html",[8,0.652,212,1.874,213,1.874]],["body/index.html",[33,0.084,171,0.084,172,0.084,214,3.079,215,3.079,216,3.079,217,3.617,218,3.079]],["title/modules.html",[219,2.179]],["body/modules.html",[33,0.086,171,0.086,172,0.086,219,2.376]],["title/overview.html",[220,2.179]],["body/overview.html",[0,1.412,33,0.086,171,0.086,172,0.086,220,2.341,221,3.148]],["title/properties.html",[9,1.509,194,1.394]],["body/properties.html",[9,1.796,33,0.09,171,0.085,172,0.085,222,3.125,223,3.125]],["title/miscellaneous/typealiases.html",[200,0.495,224,2.626]],["body/miscellaneous/typealiases.html",[1,1.238,6,1.586,7,2.106,8,0.96,29,1.52,33,0.079,35,1.644,53,0.96,99,2.053,109,2.053,110,2.053,111,1.947,171,0.079,172,0.079,200,0.729,225,2.76,226,3.387,227,2.76]],["title/miscellaneous/variables.html",[200,0.495,228,1.953]],["body/miscellaneous/variables.html",[8,0.999,19,1.651,33,0.087,39,2.136,40,2.136,53,0.999,171,0.081,172,0.081,188,2.136,189,2.58,191,2.58,200,0.758,228,2.136,229,2.872,230,2.872,231,2.872]]],"invertedIndex":[["",{"_index":33,"title":{},"body":{"classes/SchemaManager.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":153,"title":{},"body":{"classes/SchemaManager.html":{},"coverage.html":{}}}],["0/1",{"_index":184,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":221,"title":{},"body":{"overview.html":{}}}],["1/1",{"_index":181,"title":{},"body":{"coverage.html":{}}}],["10/14",{"_index":186,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":180,"title":{},"body":{"coverage.html":{}}}],["13.1.0",{"_index":199,"title":{},"body":{"dependencies.html":{}}}],["20.3.2",{"_index":197,"title":{},"body":{"dependencies.html":{}}}],["71",{"_index":185,"title":{},"body":{"coverage.html":{}}}],["8.1.1",{"_index":223,"title":{},"body":{"properties.html":{}}}],["__toabsolutereferencepaths",{"_index":149,"title":{},"body":{"classes/SchemaManager.html":{}}}],["__toabsolutereferencepaths(value",{"_index":162,"title":{},"body":{"classes/SchemaManager.html":{}}}],["absolute",{"_index":78,"title":{},"body":{"classes/SchemaManager.html":{}}}],["alias",{"_index":187,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":225,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["async",{"_index":21,"title":{},"body":{"classes/SchemaManager.html":{}}}],["await",{"_index":130,"title":{},"body":{"classes/SchemaManager.html":{}}}],["brighline",{"_index":214,"title":{},"body":{"index.html":{}}}],["class",{"_index":0,"title":{"classes/SchemaManager.html":{}},"body":{"classes/SchemaManager.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/SchemaManager.html":{}}}],["commander",{"_index":198,"title":{},"body":{"dependencies.html":{}}}],["common",{"_index":218,"title":{},"body":{"index.html":{}}}],["comon",{"_index":216,"title":{},"body":{"index.html":{}}}],["compile",{"_index":22,"title":{},"body":{"classes/SchemaManager.html":{}}}],["compiler",{"_index":211,"title":{},"body":{"miscellaneous/functions.html":{}}}],["configroot",{"_index":206,"title":{},"body":{"miscellaneous/functions.html":{}}}],["configuration",{"_index":208,"title":{},"body":{"miscellaneous/functions.html":{}}}],["const",{"_index":133,"title":{},"body":{"classes/SchemaManager.html":{}}}],["constructor",{"_index":27,"title":{},"body":{"classes/SchemaManager.html":{}}}],["constructor(options",{"_index":28,"title":{},"body":{"classes/SchemaManager.html":{}}}],["coverage",{"_index":173,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createpathscope(join(__dirname",{"_index":230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default",{"_index":39,"title":{},"body":{"classes/SchemaManager.html":{},"miscellaneous/variables.html":{}}}],["defaultmainfilepath",{"_index":11,"title":{},"body":{"classes/SchemaManager.html":{}}}],["defaultoutuptpath",{"_index":12,"title":{},"body":{"classes/SchemaManager.html":{}}}],["defaultrootpath",{"_index":13,"title":{},"body":{"classes/SchemaManager.html":{}}}],["defined",{"_index":30,"title":{},"body":{"classes/SchemaManager.html":{}}}],["definition",{"_index":155,"title":{},"body":{"classes/SchemaManager.html":{}}}],["definitions",{"_index":77,"title":{},"body":{"classes/SchemaManager.html":{}}}],["dependencies",{"_index":195,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["descendant",{"_index":69,"title":{},"body":{"classes/SchemaManager.html":{}}}],["directory",{"_index":56,"title":{},"body":{"classes/SchemaManager.html":{}}}],["dirpath",{"_index":75,"title":{},"body":{"classes/SchemaManager.html":{}}}],["dist",{"_index":45,"title":{},"body":{"classes/SchemaManager.html":{}}}],["distfilepath",{"_index":165,"title":{},"body":{"classes/SchemaManager.html":{}}}],["documentation",{"_index":174,"title":{},"body":{"coverage.html":{}}}],["each",{"_index":82,"title":{},"body":{"classes/SchemaManager.html":{}}}],["entiry",{"_index":52,"title":{},"body":{"classes/SchemaManager.html":{}}}],["error(`the",{"_index":147,"title":{},"body":{"classes/SchemaManager.html":{}}}],["export",{"_index":107,"title":{},"body":{"classes/SchemaManager.html":{}}}],["extract",{"_index":135,"title":{},"body":{"classes/SchemaManager.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/SchemaManager.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["filename",{"_index":79,"title":{},"body":{"classes/SchemaManager.html":{}}}],["filepath",{"_index":65,"title":{},"body":{"classes/SchemaManager.html":{}}}],["filepath.replace(this.root",{"_index":166,"title":{},"body":{"classes/SchemaManager.html":{}}}],["foreachjsonschemafile",{"_index":92,"title":{},"body":{"classes/SchemaManager.html":{}}}],["foreachjsonschemafile(this.root",{"_index":132,"title":{},"body":{"classes/SchemaManager.html":{}}}],["function",{"_index":178,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":201,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":207,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getlastsegment",{"_index":101,"title":{},"body":{"classes/SchemaManager.html":{}}}],["getlastsegment(filepath",{"_index":138,"title":{},"body":{"classes/SchemaManager.html":{}}}],["getting",{"_index":212,"title":{"index.html":{}},"body":{}}],["haskeys",{"_index":102,"title":{},"body":{"classes/SchemaManager.html":{}}}],["haskeys(schema",{"_index":144,"title":{},"body":{"classes/SchemaManager.html":{}}}],["identifier",{"_index":175,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":91,"title":{},"body":{"classes/SchemaManager.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/SchemaManager.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/SchemaManager.html":{}}}],["init",{"_index":179,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["init(root",{"_index":205,"title":{},"body":{"miscellaneous/functions.html":{}}}],["int",{"_index":88,"title":{},"body":{"classes/SchemaManager.html":{}}}],["isabsolute",{"_index":105,"title":{},"body":{"classes/SchemaManager.html":{}}}],["isabsolute(schema.$ref",{"_index":158,"title":{},"body":{"classes/SchemaManager.html":{}}}],["isabsolute(this.main",{"_index":127,"title":{},"body":{"classes/SchemaManager.html":{}}}],["isabsolute(this.output",{"_index":128,"title":{},"body":{"classes/SchemaManager.html":{}}}],["isabsolute(this.root",{"_index":125,"title":{},"body":{"classes/SchemaManager.html":{}}}],["isdefinitionpath",{"_index":103,"title":{},"body":{"classes/SchemaManager.html":{}}}],["isdefinitionpath(schema.$ref",{"_index":157,"title":{},"body":{"classes/SchemaManager.html":{}}}],["join",{"_index":106,"title":{},"body":{"classes/SchemaManager.html":{}}}],["join($filepath",{"_index":159,"title":{},"body":{"classes/SchemaManager.html":{}}}],["join(__dirname",{"_index":41,"title":{},"body":{"classes/SchemaManager.html":{}}}],["join(filepath",{"_index":143,"title":{},"body":{"classes/SchemaManager.html":{}}}],["json",{"_index":210,"title":{},"body":{"miscellaneous/functions.html":{}}}],["jsonschema",{"_index":64,"title":{},"body":{"classes/SchemaManager.html":{}}}],["key",{"_index":112,"title":{},"body":{"classes/SchemaManager.html":{}}}],["libs/.../__test",{"_index":229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../init.ts",{"_index":202,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../schema",{"_index":226,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../schema.ts",{"_index":203,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../type.ts",{"_index":204,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/json/src/lib/init/init.ts",{"_index":177,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/json/src/lib/schema/schema.ts",{"_index":182,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/json/src/lib/type/type.ts",{"_index":183,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/json/src/lib/util/schema",{"_index":6,"title":{},"body":{"classes/SchemaManager.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["libs/json/src/test/__test",{"_index":188,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["link",{"_index":113,"title":{},"body":{"classes/SchemaManager.html":{}}}],["literal",{"_index":227,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["main",{"_index":16,"title":{},"body":{"classes/SchemaManager.html":{}}}],["main.schema.json",{"_index":42,"title":{},"body":{"classes/SchemaManager.html":{}}}],["mainfilepath",{"_index":44,"title":{},"body":{"classes/SchemaManager.html":{}}}],["manager.ts",{"_index":7,"title":{},"body":{"classes/SchemaManager.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["manager.ts:121",{"_index":83,"title":{},"body":{"classes/SchemaManager.html":{}}}],["manager.ts:149",{"_index":90,"title":{},"body":{"classes/SchemaManager.html":{}}}],["manager.ts:156",{"_index":60,"title":{},"body":{"classes/SchemaManager.html":{}}}],["manager.ts:36",{"_index":48,"title":{},"body":{"classes/SchemaManager.html":{}}}],["manager.ts:41",{"_index":43,"title":{},"body":{"classes/SchemaManager.html":{}}}],["manager.ts:46",{"_index":46,"title":{},"body":{"classes/SchemaManager.html":{}}}],["manager.ts:51",{"_index":57,"title":{},"body":{"classes/SchemaManager.html":{}}}],["manager.ts:55",{"_index":51,"title":{},"body":{"classes/SchemaManager.html":{}}}],["manager.ts:60",{"_index":55,"title":{},"body":{"classes/SchemaManager.html":{}}}],["manager.ts:67",{"_index":31,"title":{},"body":{"classes/SchemaManager.html":{}}}],["manager.ts:86",{"_index":63,"title":{},"body":{"classes/SchemaManager.html":{}}}],["manager.ts:95",{"_index":68,"title":{},"body":{"classes/SchemaManager.html":{}}}],["map",{"_index":17,"title":{},"body":{"classes/SchemaManager.html":{}}}],["matching",{"_index":172,"title":{},"body":{"classes/SchemaManager.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":20,"title":{},"body":{"classes/SchemaManager.html":{}}}],["miscellaneous",{"_index":200,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":219,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["name",{"_index":34,"title":{},"body":{"classes/SchemaManager.html":{},"miscellaneous/functions.html":{}}}],["names",{"_index":96,"title":{},"body":{"classes/SchemaManager.html":{}}}],["names(shortfilename).pascalcase",{"_index":140,"title":{},"body":{"classes/SchemaManager.html":{}}}],["new",{"_index":54,"title":{},"body":{"classes/SchemaManager.html":{},"coverage.html":{}}}],["notabsolutepatherror",{"_index":98,"title":{},"body":{"classes/SchemaManager.html":{}}}],["nx/devkit",{"_index":196,"title":{},"body":{"dependencies.html":{}}}],["object",{"_index":161,"title":{},"body":{"classes/SchemaManager.html":{}}}],["object.entries(schema",{"_index":151,"title":{},"body":{"classes/SchemaManager.html":{}}}],["optional",{"_index":36,"title":{},"body":{"classes/SchemaManager.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":37,"title":{},"body":{"classes/SchemaManager.html":{},"miscellaneous/functions.html":{}}}],["options?.main",{"_index":119,"title":{},"body":{"classes/SchemaManager.html":{}}}],["options?.output",{"_index":122,"title":{},"body":{"classes/SchemaManager.html":{}}}],["options?.root",{"_index":116,"title":{},"body":{"classes/SchemaManager.html":{}}}],["output",{"_index":18,"title":{},"body":{"classes/SchemaManager.html":{}}}],["outuptpath",{"_index":47,"title":{},"body":{"classes/SchemaManager.html":{}}}],["overview",{"_index":220,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":194,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["packages",{"_index":217,"title":{},"body":{"index.html":{}}}],["pairs",{"_index":150,"title":{},"body":{"classes/SchemaManager.html":{}}}],["pairs.length",{"_index":152,"title":{},"body":{"classes/SchemaManager.html":{}}}],["param",{"_index":129,"title":{},"body":{"classes/SchemaManager.html":{}}}],["parameters",{"_index":32,"title":{},"body":{"classes/SchemaManager.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":108,"title":{},"body":{"classes/SchemaManager.html":{}}}],["path",{"_index":80,"title":{},"body":{"classes/SchemaManager.html":{}}}],["pathf",{"_index":136,"title":{},"body":{"classes/SchemaManager.html":{}}}],["paths",{"_index":87,"title":{},"body":{"classes/SchemaManager.html":{}}}],["pickrequired",{"_index":99,"title":{},"body":{"classes/SchemaManager.html":{},"miscellaneous/typealiases.html":{}}}],["prepared",{"_index":148,"title":{},"body":{"classes/SchemaManager.html":{}}}],["project",{"_index":59,"title":{},"body":{"classes/SchemaManager.html":{}}}],["properties",{"_index":9,"title":{"properties.html":{}},"body":{"classes/SchemaManager.html":{},"properties.html":{}}}],["protected",{"_index":14,"title":{},"body":{"classes/SchemaManager.html":{}}}],["read",{"_index":23,"title":{},"body":{"classes/SchemaManager.html":{}}}],["read(filepath",{"_index":62,"title":{},"body":{"classes/SchemaManager.html":{}}}],["readandmapschemasbyabsolutepath",{"_index":24,"title":{},"body":{"classes/SchemaManager.html":{}}}],["readjsonfile",{"_index":93,"title":{},"body":{"classes/SchemaManager.html":{}}}],["readjsonfile(filepath",{"_index":131,"title":{},"body":{"classes/SchemaManager.html":{}}}],["readonly",{"_index":15,"title":{},"body":{"classes/SchemaManager.html":{}}}],["ready",{"_index":109,"title":{},"body":{"classes/SchemaManager.html":{},"miscellaneous/typealiases.html":{}}}],["readyjsonschema",{"_index":111,"title":{},"body":{"classes/SchemaManager.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["reference",{"_index":86,"title":{},"body":{"classes/SchemaManager.html":{}}}],["relative",{"_index":85,"title":{},"body":{"classes/SchemaManager.html":{}}}],["required",{"_index":73,"title":{},"body":{"classes/SchemaManager.html":{}}}],["results",{"_index":171,"title":{},"body":{"classes/SchemaManager.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":66,"title":{},"body":{"classes/SchemaManager.html":{}}}],["returns",{"_index":61,"title":{},"body":{"classes/SchemaManager.html":{}}}],["rline/fs",{"_index":95,"title":{},"body":{"classes/SchemaManager.html":{}}}],["rline/names",{"_index":97,"title":{},"body":{"classes/SchemaManager.html":{}}}],["rline/type",{"_index":100,"title":{},"body":{"classes/SchemaManager.html":{}}}],["rline/utils",{"_index":104,"title":{},"body":{"classes/SchemaManager.html":{}}}],["root",{"_index":19,"title":{},"body":{"classes/SchemaManager.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["rootpath",{"_index":49,"title":{},"body":{"classes/SchemaManager.html":{}}}],["safepath",{"_index":191,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["schem",{"_index":58,"title":{},"body":{"classes/SchemaManager.html":{}}}],["schema",{"_index":53,"title":{},"body":{"classes/SchemaManager.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["schema(options",{"_index":209,"title":{},"body":{"miscellaneous/functions.html":{}}}],["schema.$dirpath",{"_index":142,"title":{},"body":{"classes/SchemaManager.html":{}}}],["schema.$filepath",{"_index":141,"title":{},"body":{"classes/SchemaManager.html":{}}}],["schema.$ref",{"_index":154,"title":{},"body":{"classes/SchemaManager.html":{}}}],["schema.definitions",{"_index":145,"title":{},"body":{"classes/SchemaManager.html":{}}}],["schema.title",{"_index":139,"title":{},"body":{"classes/SchemaManager.html":{}}}],["schemamanager",{"_index":1,"title":{"classes/SchemaManager.html":{}},"body":{"classes/SchemaManager.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["schemamanager.defaultmainfilepath",{"_index":120,"title":{},"body":{"classes/SchemaManager.html":{}}}],["schemamanager.defaultoutuptpath",{"_index":123,"title":{},"body":{"classes/SchemaManager.html":{}}}],["schemamanager.defaultrootpath",{"_index":117,"title":{},"body":{"classes/SchemaManager.html":{}}}],["schemamanageroptions",{"_index":29,"title":{},"body":{"classes/SchemaManager.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["schemas",{"_index":70,"title":{},"body":{"classes/SchemaManager.html":{}}}],["set",{"_index":72,"title":{},"body":{"classes/SchemaManager.html":{}}}],["setting",{"_index":114,"title":{},"body":{"classes/SchemaManager.html":{}}}],["shortfilename",{"_index":137,"title":{},"body":{"classes/SchemaManager.html":{}}}],["skip",{"_index":156,"title":{},"body":{"classes/SchemaManager.html":{}}}],["software",{"_index":215,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/SchemaManager.html":{}}}],["started",{"_index":213,"title":{"index.html":{}},"body":{}}],["statements",{"_index":176,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":10,"title":{},"body":{"classes/SchemaManager.html":{}}}],["string",{"_index":50,"title":{},"body":{"classes/SchemaManager.html":{},"miscellaneous/functions.html":{}}}],["table",{"_index":193,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":192,"title":{},"body":{"coverage.html":{}}}],["this.main",{"_index":118,"title":{},"body":{"classes/SchemaManager.html":{}}}],["this.map.foreach(__toabsolutereferencepaths",{"_index":163,"title":{},"body":{"classes/SchemaManager.html":{}}}],["this.map.foreach(async",{"_index":164,"title":{},"body":{"classes/SchemaManager.html":{}}}],["this.map.set(filepath",{"_index":146,"title":{},"body":{"classes/SchemaManager.html":{}}}],["this.output",{"_index":121,"title":{},"body":{"classes/SchemaManager.html":{}}}],["this.read(filepath",{"_index":134,"title":{},"body":{"classes/SchemaManager.html":{}}}],["this.readandmapschemasbyabsolutepath",{"_index":168,"title":{},"body":{"classes/SchemaManager.html":{}}}],["this.root",{"_index":115,"title":{},"body":{"classes/SchemaManager.html":{}}}],["this.toabsolutereferencepaths",{"_index":169,"title":{},"body":{"classes/SchemaManager.html":{}}}],["this.write",{"_index":170,"title":{},"body":{"classes/SchemaManager.html":{}}}],["throw",{"_index":126,"title":{},"body":{"classes/SchemaManager.html":{}}}],["title",{"_index":76,"title":{},"body":{"classes/SchemaManager.html":{}}}],["toabsolutereferencepaths",{"_index":25,"title":{},"body":{"classes/SchemaManager.html":{}}}],["transform",{"_index":84,"title":{},"body":{"classes/SchemaManager.html":{}}}],["type",{"_index":35,"title":{},"body":{"classes/SchemaManager.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":224,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":160,"title":{},"body":{"classes/SchemaManager.html":{}}}],["under",{"_index":71,"title":{},"body":{"classes/SchemaManager.html":{}}}],["unique",{"_index":81,"title":{},"body":{"classes/SchemaManager.html":{}}}],["unknown",{"_index":67,"title":{},"body":{"classes/SchemaManager.html":{}}}],["use",{"_index":110,"title":{},"body":{"classes/SchemaManager.html":{},"miscellaneous/typealiases.html":{}}}],["utils.ts",{"_index":189,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["validating",{"_index":124,"title":{},"body":{"classes/SchemaManager.html":{}}}],["value",{"_index":40,"title":{},"body":{"classes/SchemaManager.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":74,"title":{},"body":{"classes/SchemaManager.html":{}}}],["variable",{"_index":190,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":228,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":222,"title":{},"body":{"properties.html":{}}}],["void",{"_index":89,"title":{},"body":{"classes/SchemaManager.html":{}}}],["write",{"_index":26,"title":{},"body":{"classes/SchemaManager.html":{}}}],["writejsonfile",{"_index":94,"title":{},"body":{"classes/SchemaManager.html":{}}}],["writejsonfile(distfilepath",{"_index":167,"title":{},"body":{"classes/SchemaManager.html":{}}}],["yes",{"_index":38,"title":{},"body":{"classes/SchemaManager.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/SchemaManager.html":{"url":"classes/SchemaManager.html","title":"class - SchemaManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchemaManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/json/src/lib/util/schema-manager.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                defaultMainFilePath\n                            \n                            \n                                    Static\n                                defaultOutuptPath\n                            \n                            \n                                    Static\n                                defaultRootPath\n                            \n                            \n                                    Protected\n                                    Readonly\n                                main\n                            \n                            \n                                    Protected\n                                    Readonly\n                                map\n                            \n                            \n                                    Protected\n                                    Readonly\n                                output\n                            \n                            \n                                    Protected\n                                    Readonly\n                                root\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                compile\n                            \n                            \n                                    Protected\n                                    Async\n                                read\n                            \n                            \n                                    Protected\n                                    Async\n                                readAndMapSchemasByAbsolutePath\n                            \n                            \n                                    Protected\n                                toAbsoluteReferencePaths\n                            \n                            \n                                    Async\n                                write\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options?: SchemaManagerOptions)\n                    \n                \n                        \n                            \n                                Defined in libs/json/src/lib/util/schema-manager.ts:67\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        SchemaManagerOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        defaultMainFilePath\n                        \n                    \n                \n            \n                \n                    \n                        Default value : join(__dirname, './main.schema.json')\n                    \n                \n                    \n                        \n                                Defined in libs/json/src/lib/util/schema-manager.ts:41\n                        \n                    \n\n            \n                \n                    Default mainfilepath\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        defaultOutuptPath\n                        \n                    \n                \n            \n                \n                    \n                        Default value : join(__dirname, './dist')\n                    \n                \n                    \n                        \n                                Defined in libs/json/src/lib/util/schema-manager.ts:46\n                        \n                    \n\n            \n                \n                    Default outuptpath\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        defaultRootPath\n                        \n                    \n                \n            \n                \n                    \n                        Default value : join(__dirname, './')\n                    \n                \n                    \n                        \n                                Defined in libs/json/src/lib/util/schema-manager.ts:36\n                        \n                    \n\n            \n                \n                    Default rootpath\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        main\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/json/src/lib/util/schema-manager.ts:55\n                        \n                    \n\n            \n                \n                    Entiry schema file\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        map\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in libs/json/src/lib/util/schema-manager.ts:67\n                        \n                    \n\n            \n                \n                    Schema map\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        output\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/json/src/lib/util/schema-manager.ts:60\n                        \n                    \n\n            \n                \n                    Output directory (Dist)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        root\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/json/src/lib/util/schema-manager.ts:51\n                        \n                    \n\n            \n                \n                    Schem project root directory\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        compile\n                        \n                    \n                \n            \n            \n                \n                        \n                    compile()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/json/src/lib/util/schema-manager.ts:156\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        read\n                        \n                    \n                \n            \n            \n                \n                        \n                    read(filepath: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/json/src/lib/util/schema-manager.ts:86\n                        \n                    \n\n\n            \n                \n                        Read JSONSchema file by filepath and return the schema\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filepath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        readAndMapSchemasByAbsolutePath\n                        \n                    \n                \n            \n            \n                \n                        \n                    readAndMapSchemasByAbsolutePath()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/json/src/lib/util/schema-manager.ts:95\n                        \n                    \n\n\n            \n                \n                        Read all descendant schemas under the root directory,\nThen set default (required values), $filepath, $dirpath, title, and definitions\nThen map them by their own absolute filename path so which will be unique for each file\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        toAbsoluteReferencePaths\n                        \n                    \n                \n            \n            \n                \n                        \n                    toAbsoluteReferencePaths()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/json/src/lib/util/schema-manager.ts:121\n                        \n                    \n\n\n            \n                \n                        Transform all relative reference paths int he schemas into absolute paths\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        write\n                        \n                    \n                \n            \n            \n                \n                        \n                    write()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/json/src/lib/util/schema-manager.ts:149\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { forEachJSONSchemaFile, readJSONFile, writeJSONFile } from '@rline/fs';\nimport { names } from '@rline/names';\nimport { JSONSchema, NotAbsolutePathError, PickRequired } from '@rline/type';\nimport { getLastSegment, hasKeys, isDefinitionPath } from '@rline/utils';\nimport { isAbsolute, join } from 'path';\n\nexport type SchemaManagerOptions = {\n  /**\n   * Main schema filepath\n   */\n  main: string;\n\n  /**\n   * Root directory of the schemas or The parent directory of the main schema file\n   */\n  root: string;\n\n  /**\n   * Output directory, by default dist\n   */\n  output: string;\n};\n\n/**\n * The schema type that ready to use by the SchemaManager\n */\nexport type ReadyJSONSchema = PickRequired;\n\nexport class SchemaManager {\n  /**\n   * Default rootpath\n   */\n  static defaultRootPath = join(__dirname, './');\n\n  /**\n   * Default mainfilepath\n   */\n  static defaultMainFilePath = join(__dirname, './main.schema.json');\n\n  /**\n   * Default outuptpath\n   */\n  static defaultOutuptPath = join(__dirname, './dist');\n\n  /**\n   * Schem project root directory\n   */\n  protected readonly root: string;\n  /**\n   * Entiry schema file\n   */\n  protected readonly main: string;\n\n  /**\n   * Output directory (Dist)\n   */\n  protected readonly output: string;\n\n  /**\n   * Schema map\n   * @key key absolute filepath\n   * @value schema {@link ReadyJSONSchema}\n   */\n  protected readonly map = new Map();\n\n  constructor(options?: SchemaManagerOptions) {\n    // setting default values\n    this.root = options?.root ?? SchemaManager.defaultRootPath;\n    this.main = options?.main ?? SchemaManager.defaultMainFilePath;\n    this.output = options?.output ?? SchemaManager.defaultOutuptPath;\n\n    // validating\n    if (!isAbsolute(this.root)) throw new NotAbsolutePathError();\n    if (!isAbsolute(this.main)) throw new NotAbsolutePathError();\n    if (!isAbsolute(this.output)) throw new NotAbsolutePathError();\n  }\n\n  /**\n   * Read JSONSchema file by filepath and return the schema\n   * @param filepath\n   * @returns\n   */\n  protected async read(filepath: string) {\n    return await readJSONFile(filepath);\n  }\n\n  /**\n   * Read all descendant schemas under the root directory,\n   * Then set default (required values), $filepath, $dirpath, title, and definitions\n   * Then map them by their own absolute filename path so which will be unique for each file\n   */\n  protected async readAndMapSchemasByAbsolutePath() {\n    await forEachJSONSchemaFile(this.root, async (filepath: string) => {\n      // read the schema file\n      const schema = await this.read(filepath);\n\n      // Extract filename from pathF\n      const shortFilename = getLastSegment(filepath);\n\n      // Set schema title\n      schema.title = names(shortFilename).pascalCase;\n      schema.$filepath = filepath;\n      schema.$dirpath = join(filepath, '..');\n\n      if (!hasKeys(schema, ['definitions'])) schema.definitions = {};\n      if (hasKeys(schema, ['title', '$filepath', '$dirpath', 'definitions'])) {\n        this.map.set(filepath, schema);\n      } else {\n        throw new Error(`The schema is not prepared ${filepath}`);\n      }\n    });\n  }\n\n  /**\n   * Transform all relative reference paths int he schemas into absolute paths\n   * @param schema\n   */\n  protected toAbsoluteReferencePaths(): void {\n    const __toAbsoluteReferencePaths = (\n      schema: ReadyJSONSchema,\n      $filepath: string\n    ) => {\n      const pairs = Object.entries(schema);\n\n      if (pairs.length > 0) {\n        if (schema.$ref) {\n          // if reference is definition path, then skip\n          if (isDefinitionPath(schema.$ref)) return;\n          // if reference is absolute path, then skip\n          if (isAbsolute(schema.$ref)) return;\n\n          schema.$ref = join($filepath, '..', schema.$ref);\n        } else {\n          for (const [, value] of pairs) {\n            if (typeof value == 'object') {\n              __toAbsoluteReferencePaths(value, $filepath);\n            }\n          }\n        }\n      }\n    };\n\n    this.map.forEach(__toAbsoluteReferencePaths);\n  }\n\n  async write() {\n    this.map.forEach(async (value, filepath) => {\n      const distFilepath = filepath.replace(this.root, this.output);\n      await writeJSONFile(distFilepath, value);\n    });\n  }\n\n  async compile() {\n    await this.readAndMapSchemasByAbsolutePath();\n    this.toAbsoluteReferencePaths();\n    await this.write();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        libs/json/src/lib/init/init.ts\n            \n            function\n            init\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/json/src/lib/schema/schema.ts\n            \n            function\n            schema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/json/src/lib/type/type.ts\n            \n            function\n            type\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/json/src/lib/util/schema-manager.ts\n            \n            class\n            SchemaManager\n            \n                71 %\n                (10/14)\n            \n        \n        \n            \n                \n                        libs/json/src/lib/util/schema-manager.ts\n            \n            type alias\n            ReadyJSONSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/json/src/lib/util/schema-manager.ts\n            \n            type alias\n            SchemaManagerOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/json/src/test/__test-utils.ts\n            \n            variable\n            safepath\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nx/devkit : 20.3.2\n        \n            commander : ^13.1.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            init   (libs/.../init.ts)\n                        \n                        \n                            schema   (libs/.../schema.ts)\n                        \n                        \n                            type   (libs/.../type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/json/src/lib/init/init.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n            \n                \ninit(root: string, configRoot: string)\n                \n            \n\n\n\n\n            \n                \n                        Generate the configuration file\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                root\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                configRoot\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    libs/json/src/lib/schema/schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        schema\n                        \n                    \n                \n            \n            \n                \nschema(options: SchemaManagerOptions)\n                \n            \n\n\n\n\n            \n                \n                        JSON schema compiler\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            SchemaManagerOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    libs/json/src/lib/type/type.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n            \n                \ntype()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nBrighline Software Comon Packages\nCommon packages\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 8.1.1\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ReadyJSONSchema   (libs/.../schema-manager.ts)\n                        \n                        \n                            SchemaManagerOptions   (libs/.../schema-manager.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/json/src/lib/util/schema-manager.ts\n    \n    \n        \n            \n                \n                    \n                    ReadyJSONSchema\n                \n            \n            \n                \n                    The schema type that ready to use by the SchemaManager\n\n                \n            \n            \n                \n                            PickRequired\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SchemaManagerOptions\n                \n            \n            \n                \n                            literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            safepath   (libs/.../__test-utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/json/src/test/__test-utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        safepath\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createPathScope(join(__dirname, './data'))\n                    \n                \n\n            \n                \n                    Root: ./schema\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
