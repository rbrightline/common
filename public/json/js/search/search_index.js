var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/coverage.html",[0,1.888]],["body/coverage.html",[0,0.836,1,1.17,2,1.17,3,0.951,4,1.17,5,1.17,6,0.951,7,3.187,8,0.836,9,3.12,10,0.106,11,3.12,12,1.17,13,0.836,14,0.836,15,1.29,16,1.804,17,1.804,18,0.836,19,0.836,20,1.29,21,0.836,22,0.836,23,0.836,24,0.836,25,0.836,26,0.836,27,0.836,28,0.836,29,1.29,30,1.29,31,1.29,32,0.836,33,0.836,34,0.836,35,0.836,36,0.836,37,1.17,38,1.17,39,1.17,40,0.058,41,0.058]],["title/dependencies.html",[42,1.21,43,1.693]],["body/dependencies.html",[10,0.109,40,0.097,41,0.097,43,1.762,44,2.465,45,2.465,46,2.465,47,2.465]],["title/miscellaneous/functions.html",[48,0.655,49,1.693]],["body/miscellaneous/functions.html",[3,1.404,6,0.429,8,1.236,10,0.1,14,0.582,15,2.036,18,0.582,19,0.582,20,1.437,21,0.965,22,0.582,23,0.965,24,1.236,25,0.582,26,0.965,27,0.965,28,0.582,29,0.582,30,1.236,31,1.236,32,0.965,33,0.965,34,0.582,35,0.965,36,0.965,40,0.043,41,0.043,48,0.315,49,0.582,50,0.429,51,1.349,52,0.814,53,0.814,54,0.582,55,0.814,56,0.814,57,0.814,58,0.814,59,0.814,60,0.814,61,1.904,62,2.011,63,2.229,64,2.229,65,2.229,66,2.011,67,2.545,68,1.349,69,0.814,70,2.011,71,0.814,72,1.349,73,0.582,74,0.582,75,2.011,76,0.814,77,0.814,78,0.814,79,0.814,80,0.814,81,0.814,82,0.814,83,0.814]],["title/index.html",[50,0.892,84,1.693,85,1.693]],["body/index.html",[10,0.098,40,0.098,41,0.098,86,2.501,87,2.501,88,2.501,89,3.06,90,2.501]],["title/modules.html",[91,1.888]],["body/modules.html",[10,0.102,40,0.102,41,0.102,91,1.929]],["title/overview.html",[92,1.888]],["body/overview.html",[10,0.102,40,0.102,41,0.102,92,1.929]],["title/properties.html",[42,1.21,93,1.693]],["body/properties.html",[10,0.107,40,0.099,41,0.099,93,1.842,94,2.576,95,2.576]],["title/miscellaneous/variables.html",[48,0.655,96,1.693]],["body/miscellaneous/variables.html",[3,1.181,6,1.181,10,0.106,13,2.042,40,0.091,41,0.091,48,0.866,50,1.181,54,1.601,61,1.601,73,1.601,74,1.601,96,1.601,97,2.24]]],"invertedIndex":[["",{"_index":10,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":9,"title":{},"body":{"coverage.html":{}}}],["0/1",{"_index":11,"title":{},"body":{"coverage.html":{}}}],["1/1",{"_index":17,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":16,"title":{},"body":{"coverage.html":{}}}],["13.1.0",{"_index":47,"title":{},"body":{"dependencies.html":{}}}],["20.3.2",{"_index":45,"title":{},"body":{"dependencies.html":{}}}],["8.1.1",{"_index":95,"title":{},"body":{"properties.html":{}}}],["__resolvereferencepaths",{"_index":32,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["__resolvereferencepaths(root",{"_index":60,"title":{},"body":{"miscellaneous/functions.html":{}}}],["brighline",{"_index":86,"title":{},"body":{"index.html":{}}}],["commander",{"_index":46,"title":{},"body":{"dependencies.html":{}}}],["common",{"_index":90,"title":{},"body":{"index.html":{}}}],["comon",{"_index":88,"title":{},"body":{"index.html":{}}}],["compiler",{"_index":81,"title":{},"body":{"miscellaneous/functions.html":{}}}],["compileschema",{"_index":21,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["compileschema(root",{"_index":71,"title":{},"body":{"miscellaneous/functions.html":{}}}],["config.ts",{"_index":23,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["coverage",{"_index":0,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["default",{"_index":73,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["dependencies",{"_index":43,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["directory",{"_index":79,"title":{},"body":{"miscellaneous/functions.html":{}}}],["documentation",{"_index":1,"title":{},"body":{"coverage.html":{}}}],["each",{"_index":77,"title":{},"body":{"miscellaneous/functions.html":{}}}],["file",{"_index":2,"title":{},"body":{"coverage.html":{}}}],["files.ts",{"_index":26,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["function",{"_index":7,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":49,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["getconfig",{"_index":24,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getting",{"_index":84,"title":{"index.html":{}},"body":{}}],["identifier",{"_index":4,"title":{},"body":{"coverage.html":{}}}],["index",{"_index":50,"title":{"index.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["init",{"_index":8,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["json",{"_index":80,"title":{},"body":{"miscellaneous/functions.html":{}}}],["jsonschema",{"_index":62,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../compile",{"_index":52,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../get",{"_index":53,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../init.ts",{"_index":54,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/.../map",{"_index":55,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../me.ts",{"_index":56,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../resolve",{"_index":51,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../schema.ts",{"_index":57,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../type.ts",{"_index":58,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../validate",{"_index":59,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/json/src/lib/init/init.ts",{"_index":6,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/json/src/lib/schema/schema.ts",{"_index":14,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/json/src/lib/type/type.ts",{"_index":18,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/json/src/lib/util/compile",{"_index":19,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/json/src/lib/util/get",{"_index":22,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/json/src/lib/util/map",{"_index":25,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/json/src/lib/util/me.ts",{"_index":28,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/json/src/lib/util/resolve",{"_index":29,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/json/src/lib/util/validate",{"_index":34,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["mainfilename",{"_index":72,"title":{},"body":{"miscellaneous/functions.html":{}}}],["map",{"_index":70,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mapschemafiles",{"_index":27,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["mapschemafiles(root",{"_index":76,"title":{},"body":{"miscellaneous/functions.html":{}}}],["matching",{"_index":41,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":48,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":91,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["name",{"_index":64,"title":{},"body":{"miscellaneous/functions.html":{}}}],["new",{"_index":37,"title":{},"body":{"coverage.html":{}}}],["nx/devkit",{"_index":44,"title":{},"body":{"dependencies.html":{}}}],["optional",{"_index":65,"title":{},"body":{"miscellaneous/functions.html":{}}}],["overview",{"_index":92,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":42,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["packages",{"_index":89,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":63,"title":{},"body":{"miscellaneous/functions.html":{}}}],["paths.ts",{"_index":31,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["promise",{"_index":75,"title":{},"body":{"miscellaneous/functions.html":{}}}],["properties",{"_index":93,"title":{"properties.html":{}},"body":{"properties.html":{}}}],["reference",{"_index":30,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["required",{"_index":83,"title":{},"body":{"miscellaneous/functions.html":{}}}],["resolvereferencepaths",{"_index":33,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["resolvereferencepaths(map",{"_index":69,"title":{},"body":{"miscellaneous/functions.html":{}}}],["results",{"_index":40,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":67,"title":{},"body":{"miscellaneous/functions.html":{}}}],["root",{"_index":66,"title":{},"body":{"miscellaneous/functions.html":{}}}],["schema",{"_index":15,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["schema.config.json",{"_index":97,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schema.ts",{"_index":20,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["schema_config_file_name",{"_index":13,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["software",{"_index":87,"title":{},"body":{"index.html":{}}}],["started",{"_index":85,"title":{"index.html":{}},"body":{}}],["statements",{"_index":5,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":61,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":39,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":38,"title":{},"body":{"coverage.html":{}}}],["transform",{"_index":35,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["type",{"_index":3,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":78,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validateandtransformschema",{"_index":36,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["validateandtransformschema(schema",{"_index":82,"title":{},"body":{"miscellaneous/functions.html":{}}}],["value",{"_index":74,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":12,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":96,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":94,"title":{},"body":{"properties.html":{}}}],["void",{"_index":68,"title":{},"body":{"miscellaneous/functions.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        libs/json/src/lib/init/init.ts\n            \n            function\n            init\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/json/src/lib/init/init.ts\n            \n            variable\n            SCHEMA_CONFIG_FILE_NAME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/json/src/lib/schema/schema.ts\n            \n            function\n            schema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/json/src/lib/type/type.ts\n            \n            function\n            type\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/json/src/lib/util/compile-schema.ts\n            \n            function\n            compileSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/json/src/lib/util/get-config.ts\n            \n            function\n            getConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/json/src/lib/util/map-schema-files.ts\n            \n            function\n            mapSchemaFiles\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/json/src/lib/util/me.ts\n            \n            function\n            me\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/json/src/lib/util/resolve-reference-paths.ts\n            \n            function\n            __resolveReferencePaths\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/json/src/lib/util/resolve-reference-paths.ts\n            \n            function\n            resolveReferencePaths\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/json/src/lib/util/validate-and-transform-schema.ts\n            \n            function\n            validateAndTransformSchema\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nx/devkit : 20.3.2\n        \n            commander : ^13.1.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            __resolveReferencePaths   (libs/.../resolve-reference-paths.ts)\n                        \n                        \n                            compileSchema   (libs/.../compile-schema.ts)\n                        \n                        \n                            getConfig   (libs/.../get-config.ts)\n                        \n                        \n                            init   (libs/.../init.ts)\n                        \n                        \n                            mapSchemaFiles   (libs/.../map-schema-files.ts)\n                        \n                        \n                            me   (libs/.../me.ts)\n                        \n                        \n                            resolveReferencePaths   (libs/.../resolve-reference-paths.ts)\n                        \n                        \n                            schema   (libs/.../schema.ts)\n                        \n                        \n                            type   (libs/.../type.ts)\n                        \n                        \n                            validateAndTransformSchema   (libs/.../validate-and-transform-schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/json/src/lib/util/resolve-reference-paths.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        __resolveReferencePaths\n                        \n                    \n                \n            \n            \n                \n__resolveReferencePaths(root: string, schema: JSONSchema)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                root\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                schema\n                                            \n                                                        JSONSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolveReferencePaths\n                        \n                    \n                \n            \n            \n                \nresolveReferencePaths(map: Map)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                map\n                                            \n                                                        Map\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    libs/json/src/lib/util/compile-schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        compileSchema\n                        \n                    \n                \n            \n            \n                \ncompileSchema(root: string, mainFileName: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                root\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                        \n                                                mainFileName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    libs/json/src/lib/util/get-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getConfig\n                        \n                    \n                \n            \n            \n                \ngetConfig()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    libs/json/src/lib/init/init.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n            \n                \ninit()\n                \n            \n\n\n\n\n        \n    \n    libs/json/src/lib/util/map-schema-files.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mapSchemaFiles\n                        \n                    \n                \n            \n            \n                \nmapSchemaFiles(root: string)\n                \n            \n\n\n\n\n            \n                \n                        map each schema under the root directory\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                root\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    libs/json/src/lib/util/me.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        me\n                        \n                    \n                \n            \n            \n                \nme()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    libs/json/src/lib/schema/schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        schema\n                        \n                    \n                \n            \n            \n                \nschema()\n                \n            \n\n\n\n\n            \n                \n                        JSON schema compiler\n\n\n                \n            \n        \n    \n    libs/json/src/lib/type/type.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n            \n                \ntype()\n                \n            \n\n\n\n\n        \n    \n    libs/json/src/lib/util/validate-and-transform-schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        validateAndTransformSchema\n                        \n                    \n                \n            \n            \n                \nvalidateAndTransformSchema(schema: JSONSchema)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                schema\n                                            \n                                                        JSONSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Required\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nBrighline Software Comon Packages\nCommon packages\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 8.1.1\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            SCHEMA_CONFIG_FILE_NAME   (libs/.../init.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/json/src/lib/init/init.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SCHEMA_CONFIG_FILE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'schema.config.json'\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
