var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AccessDeniedError.html",[0,0.144,1,2.097]],["body/classes/AccessDeniedError.html",[0,0.169,1,3.16,2,0.635,3,0.486,4,0.558,5,0.486,6,4.075,7,2.874,8,0.92,9,0.717,10,0.418,11,0.815,12,1.141,13,1.141,14,1.016,15,0.9,16,0.815,17,4.495,18,0.353,19,0.039,20,0.558,21,0.635,22,0.635,23,4.495,24,4.495,25,0.558,26,3.501,27,0.031,28,0.031]],["title/classes/EmptyArrayError.html",[0,0.144,29,2.097]],["body/classes/EmptyArrayError.html",[0,0.169,2,0.635,3,0.486,4,0.558,5,0.486,8,0.92,9,0.717,10,0.418,11,0.815,12,1.141,13,1.141,14,1.016,15,0.9,16,0.815,18,0.353,19,0.039,20,0.558,21,0.635,22,0.635,25,0.558,27,0.031,28,0.031,29,3.16,30,3.49,31,2.874,32,4.495,33,4.495,34,3.69,35,3.501]],["title/classes/EmptyObjectError.html",[0,0.144,36,2.097]],["body/classes/EmptyObjectError.html",[0,0.169,2,0.635,3,0.486,4,0.558,5,0.486,8,0.92,9,0.717,10,0.418,11,0.815,12,1.141,13,1.141,14,1.016,15,0.9,16,0.815,18,0.353,19,0.039,20,0.558,21,0.635,22,0.635,25,0.558,27,0.031,28,0.031,30,3.49,34,3.69,36,3.16,37,2.874,38,4.495,39,3.69,40,3.501]],["title/classes/InvalidInputError.html",[0,0.144,41,2.097]],["body/classes/InvalidInputError.html",[0,0.169,2,0.635,3,0.486,4,0.558,5,0.486,8,0.92,9,0.717,10,0.418,11,0.815,12,1.141,13,1.141,14,1.016,15,0.9,16,0.815,18,0.353,19,0.039,20,0.558,21,0.635,22,0.635,25,0.558,27,0.031,28,0.031,41,3.16,42,3.052,43,2.874,44,4.495,45,3.16,46,4.495,47,3.501]],["title/classes/InvalidPropertyTypeError.html",[0,0.144,48,2.097]],["body/classes/InvalidPropertyTypeError.html",[0,0.162,2,0.608,3,0.466,4,0.535,5,0.466,8,0.895,9,0.822,10,0.4,11,0.793,12,1.118,13,1.118,14,0.996,15,0.882,16,0.793,18,0.491,19,0.039,20,0.535,21,0.608,22,0.608,25,0.535,27,0.03,28,0.03,42,2.991,45,3.074,48,3.074,49,3.758,50,2.755,51,3.356,52,4.373,53,3.356,54,3.356]],["title/classes/InvalidSchemaError.html",[0,0.144,55,2.097]],["body/classes/InvalidSchemaError.html",[0,0.169,2,0.635,3,0.486,4,0.558,5,0.486,8,0.92,9,0.717,10,0.418,11,0.815,12,1.141,13,1.141,14,1.016,15,0.9,16,0.815,18,0.353,19,0.039,20,0.558,21,0.635,22,0.635,25,0.558,27,0.031,28,0.031,42,3.052,45,3.16,55,3.16,56,2.874,57,4.495,58,4.495,59,3.501]],["title/classes/ItemNotFoundError.html",[0,0.144,60,2.097]],["body/classes/ItemNotFoundError.html",[0,0.169,2,0.635,3,0.486,4,0.558,5,0.486,8,0.92,9,0.717,10,0.418,11,0.815,12,1.141,13,1.141,14,1.016,15,0.9,16,0.815,18,0.353,19,0.039,20,0.558,21,0.635,22,0.635,25,0.558,27,0.031,28,0.031,60,3.16,61,4.075,62,2.461,63,3.69,64,4.495,65,4.495,66,3.501]],["title/classes/KeyNotFoundError.html",[0,0.144,67,2.097]],["body/classes/KeyNotFoundError.html",[0,0.167,2,0.629,3,0.481,4,0.553,5,0.481,8,0.914,9,0.712,10,0.414,11,0.81,12,1.135,13,1.135,14,1.012,15,0.896,16,0.81,18,0.35,19,0.039,20,0.553,21,0.629,22,0.629,25,0.553,27,0.03,28,0.03,62,2.438,63,3.667,67,3.14,68,4.057,69,3.667,70,4.467,71,4.467,72,3.468]],["title/interfaces/Logger.html",[73,1.625,74,1.834]],["body/interfaces/Logger.html",[3,0.571,4,0.148,5,0.128,9,0.675,10,0.11,14,1.083,16,0.861,18,0.485,19,0.041,20,0.409,25,0.342,27,0.011,28,0.011,39,0.76,73,0.504,74,1.319,75,0.504,76,0.651,77,1.614,78,2.991,79,3.567,80,3.241,81,3.265,82,2.567,83,4.779,84,0.926,85,3.9,86,3.383,87,3.34,88,3.9,89,5.408,90,5.428,91,4.472,92,0.926,93,4.751,94,1.614,95,0.926,96,3.197,97,2.567,98,0.926,99,0.926,100,1.614,101,0.926,102,2.567,103,0.926,104,0.926,105,1.614,106,0.926,107,2.567,108,0.926,109,0.926,110,1.614,111,0.926,112,2.567,113,0.926,114,0.926,115,1.614,116,0.926,117,2.567,118,0.926,119,0.926,120,1.614,121,0.926,122,2.145,123,0.76,124,1.761,125,0.926,126,0.926,127,0.926,128,0.926,129,0.926,130,1.325,131,0.926,132,0.926,133,0.76,134,0.76,135,0.76,136,0.926,137,0.76,138,0.76,139,0.926,140,1.614,141,0.76,142,0.926,143,0.926]],["title/classes/MissingPropertyError.html",[0,0.144,144,2.097]],["body/classes/MissingPropertyError.html",[0,0.169,2,0.635,3,0.486,4,0.558,5,0.486,8,0.92,9,0.717,10,0.418,11,0.815,12,1.141,13,1.141,14,1.016,15,0.9,16,0.815,18,0.353,19,0.039,20,0.558,21,0.635,22,0.635,25,0.558,27,0.031,28,0.031,49,3.16,144,3.16,145,4.075,146,2.874,147,4.495,148,4.495,149,3.501]],["title/classes/NotAbsolutePathError.html",[0,0.144,150,2.097]],["body/classes/NotAbsolutePathError.html",[0,0.166,2,0.626,3,0.479,4,0.55,5,0.479,8,0.912,9,0.71,10,0.412,11,0.808,12,1.133,13,1.133,14,1.009,15,0.894,16,0.808,18,0.348,19,0.039,20,0.55,21,0.626,22,0.626,25,0.55,27,0.03,28,0.03,150,3.131,151,3.032,152,4.427,153,2.833,154,4.453,155,4.453,156,3.451]],["title/classes/NotFileError.html",[0,0.144,157,2.097]],["body/classes/NotFileError.html",[0,0.171,2,0.641,3,0.491,4,0.564,5,0.692,8,0.926,9,0.721,10,0.422,11,0.82,12,1.146,13,1.146,14,1.021,15,0.904,16,0.82,18,0.357,19,0.039,20,0.564,21,0.641,22,0.641,25,0.564,27,0.031,28,0.031,151,3.066,157,3.179,158,2.902,159,4.523,160,3.535]],["title/classes/NotImplementedError.html",[0,0.144,161,2.097]],["body/classes/NotImplementedError.html",[0,0.171,2,0.641,3,0.491,4,0.564,5,0.491,8,0.926,9,0.721,10,0.422,11,0.82,12,1.146,13,1.146,14,1.021,15,0.904,16,0.82,18,0.357,19,0.039,20,0.564,21,0.641,22,0.641,25,0.564,27,0.031,28,0.031,151,3.066,161,3.179,162,2.902,163,4.523,164,4.523,165,3.535]],["title/classes/NumberNotInRangeError.html",[0,0.144,166,2.097]],["body/classes/NumberNotInRangeError.html",[0,0.166,2,0.623,3,0.477,4,0.548,5,0.477,8,0.909,9,0.708,10,0.41,11,0.805,12,1.13,13,1.13,14,1.007,15,0.892,16,0.805,18,0.346,19,0.039,20,0.548,21,0.623,22,0.892,25,0.548,27,0.03,28,0.03,133,3.645,166,3.121,167,4.039,168,2.82,169,4.44,170,4.44,171,4.44,172,3.435]],["title/classes/RequiredError.html",[0,0.144,173,2.097]],["body/classes/RequiredError.html",[0,0.195,2,0.734,3,0.562,4,0.645,5,0.562,8,1.007,9,0.784,15,0.962,16,0.734,19,0.039,25,0.645,27,0.033,28,0.033,173,3.459,174,3.323,175,4.047,176,4.047]],["title/interfaces/Type.html",[18,0.301,73,1.625]],["body/interfaces/Type.html",[0,0.2,3,0.575,4,0.66,5,0.575,15,0.751,18,0.54,19,0.038,25,0.66,27,0.034,28,0.034,73,2.254,75,2.254,177,3.398,178,3.398,179,3.398,180,4.989,181,3.398]],["title/coverage.html",[182,3.32]],["body/coverage.html",[0,0.191,1,0.479,5,0.095,6,0.559,7,0.559,18,0.587,19,0.04,27,0.008,28,0.008,29,0.479,30,0.864,31,0.559,36,0.479,37,0.559,41,0.479,42,1.032,43,0.559,48,0.479,49,0.479,50,0.559,55,0.479,56,0.559,60,0.479,61,0.559,62,0.864,67,0.479,68,0.559,69,0.559,73,0.669,74,0.419,76,0.864,80,0.479,83,0.559,87,0.479,91,0.559,124,0.559,141,4.803,144,0.479,145,0.559,146,0.559,150,0.479,151,1.032,152,0.559,153,0.559,157,0.479,158,0.559,161,0.479,162,0.559,166,0.479,167,0.559,168,0.559,173,0.479,174,0.559,177,0.559,179,0.559,182,0.559,183,0.559,184,0.681,185,0.681,186,0.681,187,5.808,188,0.681,189,5.79,190,1.229,191,0.681,192,0.681,193,0.681,194,0.681,195,0.681,196,0.681,197,0.681,198,0.681,199,0.681,200,3.593,201,3.593,202,1.229,203,0.681,204,0.681,205,0.681,206,0.681,207,2.055,208,0.681,209,0.681,210,1.679,211,0.681,212,0.681,213,0.681,214,0.681,215,0.681,216,0.681,217,2.375,218,0.681,219,0.681,220,0.681,221,0.559,222,0.681,223,0.559,224,0.681,225,0.559,226,3.846,227,0.681,228,1.949,229,2.375,230,0.559,231,0.559,232,0.559,233,0.559,234,0.559,235,0.681,236,3.096,237,3.096,238,0.681,239,0.681,240,0.681,241,0.681,242,0.681,243,0.681,244,0.681,245,0.681,246,0.681,247,0.681,248,0.681,249,0.681,250,0.681,251,0.681,252,0.681,253,0.681,254,0.681,255,0.681,256,0.681,257,0.681,258,0.681,259,0.681,260,0.681,261,0.681,262,0.681,263,0.681,264,4.927,265,0.681,266,0.681,267,0.681,268,0.681,269,0.681,270,0.681,271,0.681,272,0.681,273,0.681,274,0.681,275,0.681,276,0.681,277,0.681,278,0.681,279,0.681,280,0.681,281,0.681,282,0.681,283,0.681,284,0.681,285,0.681,286,0.681,287,0.681,288,0.681,289,0.681,290,0.681,291,0.681,292,0.681,293,0.681,294,0.681,295,1.229,296,0.681,297,0.681,298,0.681,299,0.681,300,4.511,301,4.511,302,0.681,303,0.681,304,0.681,305,0.681,306,0.681,307,0.681,308,0.681,309,0.681,310,0.681,311,0.681,312,0.681,313,0.681,314,0.681,315,0.681,316,0.681,317,0.681,318,0.681,319,0.681,320,0.681,321,0.681,322,0.681,323,0.681,324,0.681,325,0.681,326,0.681,327,0.681,328,0.681,329,0.681,330,0.681,331,0.681,332,0.681,333,0.681,334,0.681,335,0.681,336,0.681,337,1.229,338,0.681,339,0.681,340,1.229,341,0.681,342,0.681,343,0.681,344,0.681]],["title/dependencies.html",[345,2.056,346,2.939]],["body/dependencies.html",[19,0.038,27,0.036,28,0.036,346,3.716,347,4.527,348,4.527]],["title/miscellaneous/enumerations.html",[349,1.217,350,2.939]],["body/miscellaneous/enumerations.html",[3,0.677,9,0.853,10,0.402,19,0.041,27,0.03,28,0.03,74,2.073,76,2.37,78,2.767,79,4.395,80,3.083,81,4.239,86,2.37,130,3.601,134,2.767,135,2.767,137,2.767,138,2.767,349,1.638,350,2.767,351,3.371,352,3.371]],["title/miscellaneous/functions.html",[349,1.217,353,2.939]],["body/miscellaneous/functions.html",[10,0.378,18,0.424,19,0.039,20,0.671,21,0.951,22,0.951,27,0.029,28,0.029,85,4.306,86,3.687,87,3.687,88,2.599,181,2.599,228,2.599,230,3.455,231,3.455,232,3.455,233,3.455,234,3.455,349,1.538,353,2.599,354,5.245,355,3.165,356,5.245,357,3.165,358,3.165,359,3.165,360,3.165,361,3.165,362,4.727,363,3.165]],["title/index.html",[10,0.299,364,2.505,365,2.505]],["body/index.html",[19,0.035,27,0.035,28,0.035,75,2.39,183,4.507,366,4.39,367,3.604,368,3.604,369,3.604,370,4.39]],["title/modules.html",[371,3.32]],["body/modules.html",[19,0.036,27,0.036,28,0.036,371,3.787]],["title/overview.html",[372,3.32]],["body/overview.html",[2,0.816,19,0.036,27,0.036,28,0.036,75,2.45,372,3.693,373,4.499,374,4.499]],["title/properties.html",[11,0.649,345,2.056]],["body/properties.html",[11,0.718,19,0.04,27,0.033,28,0.033,75,2.156,123,3.25,178,3.25,221,3.25,367,3.986,368,3.25,369,3.25,375,3.959,376,3.959,377,3.959,378,3.959,379,3.959,380,3.959,381,3.959,382,3.959,383,3.959,384,3.959,385,3.959]],["title/miscellaneous/variables.html",[349,1.217,386,2.939]],["body/miscellaneous/variables.html",[10,0.494,18,0.417,19,0.039,20,0.66,21,0.751,22,0.751,27,0.034,28,0.034,223,3.398,225,4.095,349,2.012,386,3.398,387,4.14,388,4.14,389,4.14,390,4.14,391,4.14,392,4.14]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"classes/AccessDeniedError.html":{},"classes/EmptyArrayError.html":{},"classes/EmptyObjectError.html":{},"classes/InvalidInputError.html":{},"classes/InvalidPropertyTypeError.html":{},"classes/InvalidSchemaError.html":{},"classes/ItemNotFoundError.html":{},"classes/KeyNotFoundError.html":{},"interfaces/Logger.html":{},"classes/MissingPropertyError.html":{},"classes/NotAbsolutePathError.html":{},"classes/NotFileError.html":{},"classes/NotImplementedError.html":{},"classes/NumberNotInRangeError.html":{},"classes/RequiredError.html":{},"interfaces/Type.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":141,"title":{},"body":{"interfaces/Logger.html":{},"coverage.html":{}}}],["0.5.11",{"_index":348,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":189,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":235,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":227,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":226,"title":{},"body":{"coverage.html":{}}}],["1/1",{"_index":201,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":200,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":373,"title":{},"body":{"overview.html":{}}}],["2",{"_index":374,"title":{},"body":{"overview.html":{}}}],["9.5.0",{"_index":375,"title":{},"body":{"properties.html":{}}}],["__jsonschema",{"_index":238,"title":{},"body":{"coverage.html":{}}}],["absolute",{"_index":152,"title":{},"body":{"classes/NotAbsolutePathError.html":{},"coverage.html":{}}}],["access",{"_index":23,"title":{},"body":{"classes/AccessDeniedError.html":{}}}],["accessdeniederror",{"_index":1,"title":{"classes/AccessDeniedError.html":{}},"body":{"classes/AccessDeniedError.html":{},"coverage.html":{}}}],["alias",{"_index":187,"title":{},"body":{"coverage.html":{}}}],["alphabet",{"_index":335,"title":{},"body":{"coverage.html":{}}}],["applications",{"_index":369,"title":{},"body":{"index.html":{},"properties.html":{}}}],["appname",{"_index":125,"title":{},"body":{"interfaces/Logger.html":{}}}],["args",{"_index":180,"title":{},"body":{"interfaces/Type.html":{}}}],["arr",{"_index":230,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["arr(defaultvalue",{"_index":355,"title":{},"body":{"miscellaneous/functions.html":{}}}],["array",{"_index":33,"title":{},"body":{"classes/EmptyArrayError.html":{}}}],["array.ts",{"_index":31,"title":{},"body":{"classes/EmptyArrayError.html":{},"coverage.html":{}}}],["array.ts:5",{"_index":32,"title":{},"body":{"classes/EmptyArrayError.html":{}}}],["arrayoptions",{"_index":265,"title":{},"body":{"coverage.html":{}}}],["arrayschema",{"_index":239,"title":{},"body":{"coverage.html":{}}}],["arrayschemaraw",{"_index":247,"title":{},"body":{"coverage.html":{}}}],["asyncmapper",{"_index":338,"title":{},"body":{"coverage.html":{}}}],["asyncpredicate",{"_index":341,"title":{},"body":{"coverage.html":{}}}],["author",{"_index":383,"title":{},"body":{"properties.html":{}}}],["behaviour",{"_index":135,"title":{},"body":{"interfaces/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["binary",{"_index":302,"title":{},"body":{"coverage.html":{}}}],["bloodpresure",{"_index":303,"title":{},"body":{"coverage.html":{}}}],["bool",{"_index":231,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["bool(defaultvalue",{"_index":357,"title":{},"body":{"miscellaneous/functions.html":{}}}],["booleanoptions",{"_index":266,"title":{},"body":{"coverage.html":{}}}],["booleanschema",{"_index":240,"title":{},"body":{"coverage.html":{}}}],["booleanschemaraw",{"_index":249,"title":{},"body":{"coverage.html":{}}}],["brightline",{"_index":385,"title":{},"body":{"properties.html":{}}}],["byte",{"_index":296,"title":{},"body":{"coverage.html":{}}}],["change",{"_index":188,"title":{},"body":{"coverage.html":{}}}],["class",{"_index":0,"title":{"classes/AccessDeniedError.html":{},"classes/EmptyArrayError.html":{},"classes/EmptyObjectError.html":{},"classes/InvalidInputError.html":{},"classes/InvalidPropertyTypeError.html":{},"classes/InvalidSchemaError.html":{},"classes/ItemNotFoundError.html":{},"classes/KeyNotFoundError.html":{},"classes/MissingPropertyError.html":{},"classes/NotAbsolutePathError.html":{},"classes/NotFileError.html":{},"classes/NotImplementedError.html":{},"classes/NumberNotInRangeError.html":{},"classes/RequiredError.html":{}},"body":{"classes/AccessDeniedError.html":{},"classes/EmptyArrayError.html":{},"classes/EmptyObjectError.html":{},"classes/InvalidInputError.html":{},"classes/InvalidPropertyTypeError.html":{},"classes/InvalidSchemaError.html":{},"classes/ItemNotFoundError.html":{},"classes/KeyNotFoundError.html":{},"classes/MissingPropertyError.html":{},"classes/NotAbsolutePathError.html":{},"classes/NotFileError.html":{},"classes/NotImplementedError.html":{},"classes/NumberNotInRangeError.html":{},"classes/RequiredError.html":{},"interfaces/Type.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AccessDeniedError.html":{},"classes/EmptyArrayError.html":{},"classes/EmptyObjectError.html":{},"classes/InvalidInputError.html":{},"classes/InvalidPropertyTypeError.html":{},"classes/InvalidSchemaError.html":{},"classes/ItemNotFoundError.html":{},"classes/KeyNotFoundError.html":{},"classes/MissingPropertyError.html":{},"classes/NotAbsolutePathError.html":{},"classes/NotFileError.html":{},"classes/NotImplementedError.html":{},"classes/NumberNotInRangeError.html":{},"classes/RequiredError.html":{},"overview.html":{}}}],["clothingsize",{"_index":304,"title":{},"body":{"coverage.html":{}}}],["common",{"_index":123,"title":{},"body":{"interfaces/Logger.html":{},"properties.html":{}}}],["commonnumberoptions",{"_index":267,"title":{},"body":{"coverage.html":{}}}],["commonpropertyoptions",{"_index":268,"title":{},"body":{"coverage.html":{}}}],["commonschema",{"_index":251,"title":{},"body":{"coverage.html":{}}}],["config.ts",{"_index":215,"title":{},"body":{"coverage.html":{}}}],["configure",{"_index":134,"title":{},"body":{"interfaces/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["constructor",{"_index":15,"title":{},"body":{"classes/AccessDeniedError.html":{},"classes/EmptyArrayError.html":{},"classes/EmptyObjectError.html":{},"classes/InvalidInputError.html":{},"classes/InvalidPropertyTypeError.html":{},"classes/InvalidSchemaError.html":{},"classes/ItemNotFoundError.html":{},"classes/KeyNotFoundError.html":{},"classes/MissingPropertyError.html":{},"classes/NotAbsolutePathError.html":{},"classes/NotFileError.html":{},"classes/NotImplementedError.html":{},"classes/NumberNotInRangeError.html":{},"classes/RequiredError.html":{},"interfaces/Type.html":{}}}],["context",{"_index":126,"title":{},"body":{"interfaces/Logger.html":{}}}],["coverage",{"_index":182,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["ct",{"_index":241,"title":{},"body":{"coverage.html":{}}}],["data",{"_index":90,"title":{},"body":{"interfaces/Logger.html":{}}}],["date",{"_index":128,"title":{},"body":{"interfaces/Logger.html":{}}}],["dateoptions",{"_index":269,"title":{},"body":{"coverage.html":{}}}],["debug",{"_index":78,"title":{},"body":{"interfaces/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["debug(message",{"_index":82,"title":{},"body":{"interfaces/Logger.html":{}}}],["debug(title",{"_index":94,"title":{},"body":{"interfaces/Logger.html":{}}}],["default",{"_index":21,"title":{},"body":{"classes/AccessDeniedError.html":{},"classes/EmptyArrayError.html":{},"classes/EmptyObjectError.html":{},"classes/InvalidInputError.html":{},"classes/InvalidPropertyTypeError.html":{},"classes/InvalidSchemaError.html":{},"classes/ItemNotFoundError.html":{},"classes/KeyNotFoundError.html":{},"classes/MissingPropertyError.html":{},"classes/NotAbsolutePathError.html":{},"classes/NotFileError.html":{},"classes/NotImplementedError.html":{},"classes/NumberNotInRangeError.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defaultvalue",{"_index":356,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defined",{"_index":16,"title":{},"body":{"classes/AccessDeniedError.html":{},"classes/EmptyArrayError.html":{},"classes/EmptyObjectError.html":{},"classes/InvalidInputError.html":{},"classes/InvalidPropertyTypeError.html":{},"classes/InvalidSchemaError.html":{},"classes/ItemNotFoundError.html":{},"classes/KeyNotFoundError.html":{},"interfaces/Logger.html":{},"classes/MissingPropertyError.html":{},"classes/NotAbsolutePathError.html":{},"classes/NotFileError.html":{},"classes/NotImplementedError.html":{},"classes/NumberNotInRangeError.html":{},"classes/RequiredError.html":{}}}],["denied",{"_index":24,"title":{},"body":{"classes/AccessDeniedError.html":{}}}],["denied.error.ts",{"_index":7,"title":{},"body":{"classes/AccessDeniedError.html":{},"coverage.html":{}}}],["denied.error.ts:2",{"_index":17,"title":{},"body":{"classes/AccessDeniedError.html":{}}}],["dependencies",{"_index":346,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":178,"title":{},"body":{"interfaces/Type.html":{},"properties.html":{}}}],["detailed",{"_index":370,"title":{},"body":{"index.html":{}}}],["digit",{"_index":305,"title":{},"body":{"coverage.html":{}}}],["display",{"_index":137,"title":{},"body":{"interfaces/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["documentation",{"_index":183,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dto",{"_index":270,"title":{},"body":{"coverage.html":{}}}],["empty",{"_index":34,"title":{},"body":{"classes/EmptyArrayError.html":{},"classes/EmptyObjectError.html":{}}}],["emptyarrayerror",{"_index":29,"title":{"classes/EmptyArrayError.html":{}},"body":{"classes/EmptyArrayError.html":{},"coverage.html":{}}}],["emptyobjecterror",{"_index":36,"title":{"classes/EmptyObjectError.html":{}},"body":{"classes/EmptyObjectError.html":{},"coverage.html":{}}}],["encryption",{"_index":271,"title":{},"body":{"coverage.html":{}}}],["enum",{"_index":139,"title":{},"body":{"interfaces/Logger.html":{}}}],["enumerate",{"_index":306,"title":{},"body":{"coverage.html":{}}}],["enumerations",{"_index":350,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":9,"title":{},"body":{"classes/AccessDeniedError.html":{},"classes/EmptyArrayError.html":{},"classes/EmptyObjectError.html":{},"classes/InvalidInputError.html":{},"classes/InvalidPropertyTypeError.html":{},"classes/InvalidSchemaError.html":{},"classes/ItemNotFoundError.html":{},"classes/KeyNotFoundError.html":{},"interfaces/Logger.html":{},"classes/MissingPropertyError.html":{},"classes/NotAbsolutePathError.html":{},"classes/NotFileError.html":{},"classes/NotImplementedError.html":{},"classes/NumberNotInRangeError.html":{},"classes/RequiredError.html":{},"miscellaneous/enumerations.html":{}}}],["error(message",{"_index":97,"title":{},"body":{"interfaces/Logger.html":{}}}],["error(title",{"_index":100,"title":{},"body":{"interfaces/Logger.html":{}}}],["everthing",{"_index":142,"title":{},"body":{"interfaces/Logger.html":{}}}],["everything",{"_index":140,"title":{},"body":{"interfaces/Logger.html":{}}}],["example",{"_index":352,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["excluding",{"_index":143,"title":{},"body":{"interfaces/Logger.html":{}}}],["exist",{"_index":70,"title":{},"body":{"classes/KeyNotFoundError.html":{}}}],["export",{"_index":25,"title":{},"body":{"classes/AccessDeniedError.html":{},"classes/EmptyArrayError.html":{},"classes/EmptyObjectError.html":{},"classes/InvalidInputError.html":{},"classes/InvalidPropertyTypeError.html":{},"classes/InvalidSchemaError.html":{},"classes/ItemNotFoundError.html":{},"classes/KeyNotFoundError.html":{},"interfaces/Logger.html":{},"classes/MissingPropertyError.html":{},"classes/NotAbsolutePathError.html":{},"classes/NotFileError.html":{},"classes/NotImplementedError.html":{},"classes/NumberNotInRangeError.html":{},"classes/RequiredError.html":{},"interfaces/Type.html":{}}}],["extends",{"_index":8,"title":{},"body":{"classes/AccessDeniedError.html":{},"classes/EmptyArrayError.html":{},"classes/EmptyObjectError.html":{},"classes/InvalidInputError.html":{},"classes/InvalidPropertyTypeError.html":{},"classes/InvalidSchemaError.html":{},"classes/ItemNotFoundError.html":{},"classes/KeyNotFoundError.html":{},"classes/MissingPropertyError.html":{},"classes/NotAbsolutePathError.html":{},"classes/NotFileError.html":{},"classes/NotImplementedError.html":{},"classes/NumberNotInRangeError.html":{},"classes/RequiredError.html":{}}}],["extraschema",{"_index":253,"title":{},"body":{"coverage.html":{}}}],["false",{"_index":358,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fata",{"_index":138,"title":{},"body":{"interfaces/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["fatal",{"_index":79,"title":{},"body":{"interfaces/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["fatal(message",{"_index":102,"title":{},"body":{"interfaces/Logger.html":{}}}],["fatal(title",{"_index":105,"title":{},"body":{"interfaces/Logger.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AccessDeniedError.html":{},"classes/EmptyArrayError.html":{},"classes/EmptyObjectError.html":{},"classes/InvalidInputError.html":{},"classes/InvalidPropertyTypeError.html":{},"classes/InvalidSchemaError.html":{},"classes/ItemNotFoundError.html":{},"classes/KeyNotFoundError.html":{},"interfaces/Logger.html":{},"classes/MissingPropertyError.html":{},"classes/NotAbsolutePathError.html":{},"classes/NotFileError.html":{},"classes/NotImplementedError.html":{},"classes/NumberNotInRangeError.html":{},"classes/RequiredError.html":{},"interfaces/Type.html":{},"coverage.html":{}}}],["file.error.ts",{"_index":158,"title":{},"body":{"classes/NotFileError.html":{},"coverage.html":{}}}],["file.error.ts:2",{"_index":159,"title":{},"body":{"classes/NotFileError.html":{}}}],["found",{"_index":65,"title":{},"body":{"classes/ItemNotFoundError.html":{}}}],["found.error.ts",{"_index":62,"title":{},"body":{"classes/ItemNotFoundError.html":{},"classes/KeyNotFoundError.html":{},"coverage.html":{}}}],["found.error.ts:2",{"_index":63,"title":{},"body":{"classes/ItemNotFoundError.html":{},"classes/KeyNotFoundError.html":{}}}],["fraction",{"_index":299,"title":{},"body":{"coverage.html":{}}}],["function",{"_index":229,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":353,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["general",{"_index":272,"title":{},"body":{"coverage.html":{}}}],["getting",{"_index":364,"title":{"index.html":{}},"body":{}}],["goldenball",{"_index":307,"title":{},"body":{"coverage.html":{}}}],["homepage",{"_index":377,"title":{},"body":{"properties.html":{}}}],["hour",{"_index":308,"title":{},"body":{"coverage.html":{}}}],["https://github.com/rbrightline/common/tree/main/libs/type",{"_index":382,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io/common/type",{"_index":378,"title":{},"body":{"properties.html":{}}}],["humanage",{"_index":309,"title":{},"body":{"coverage.html":{}}}],["iconoptions",{"_index":273,"title":{},"body":{"coverage.html":{}}}],["identifier",{"_index":184,"title":{},"body":{"coverage.html":{}}}],["implemented",{"_index":164,"title":{},"body":{"classes/NotImplementedError.html":{}}}],["implemented.ts",{"_index":162,"title":{},"body":{"classes/NotImplementedError.html":{},"coverage.html":{}}}],["implemented.ts:2",{"_index":163,"title":{},"body":{"classes/NotImplementedError.html":{}}}],["import",{"_index":122,"title":{},"body":{"interfaces/Logger.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"classes/AccessDeniedError.html":{},"classes/EmptyArrayError.html":{},"classes/EmptyObjectError.html":{},"classes/InvalidInputError.html":{},"classes/InvalidPropertyTypeError.html":{},"classes/InvalidSchemaError.html":{},"classes/ItemNotFoundError.html":{},"classes/KeyNotFoundError.html":{},"interfaces/Logger.html":{},"classes/MissingPropertyError.html":{},"classes/NotAbsolutePathError.html":{},"classes/NotFileError.html":{},"classes/NotImplementedError.html":{},"classes/NumberNotInRangeError.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AccessDeniedError.html":{},"classes/EmptyArrayError.html":{},"classes/EmptyObjectError.html":{},"classes/InvalidInputError.html":{},"classes/InvalidPropertyTypeError.html":{},"classes/InvalidSchemaError.html":{},"classes/ItemNotFoundError.html":{},"classes/KeyNotFoundError.html":{},"interfaces/Logger.html":{},"classes/MissingPropertyError.html":{},"classes/NotAbsolutePathError.html":{},"classes/NotFileError.html":{},"classes/NotImplementedError.html":{},"classes/NumberNotInRangeError.html":{},"classes/RequiredError.html":{},"interfaces/Type.html":{},"miscellaneous/enumerations.html":{}}}],["info(message",{"_index":107,"title":{},"body":{"interfaces/Logger.html":{}}}],["info(title",{"_index":110,"title":{},"body":{"interfaces/Logger.html":{}}}],["input",{"_index":46,"title":{},"body":{"classes/InvalidInputError.html":{}}}],["input.error.ts",{"_index":43,"title":{},"body":{"classes/InvalidInputError.html":{},"coverage.html":{}}}],["input.error.ts:2",{"_index":44,"title":{},"body":{"classes/InvalidInputError.html":{}}}],["inputtypeoptions",{"_index":274,"title":{},"body":{"coverage.html":{}}}],["integeroptions",{"_index":275,"title":{},"body":{"coverage.html":{}}}],["interface",{"_index":73,"title":{"interfaces/Logger.html":{},"interfaces/Type.html":{}},"body":{"interfaces/Logger.html":{},"interfaces/Type.html":{},"coverage.html":{}}}],["interfaces",{"_index":75,"title":{},"body":{"interfaces/Logger.html":{},"interfaces/Type.html":{},"index.html":{},"overview.html":{},"properties.html":{}}}],["intergerpropertyoptionsraw",{"_index":276,"title":{},"body":{"coverage.html":{}}}],["intrange",{"_index":310,"title":{},"body":{"coverage.html":{}}}],["invalid",{"_index":45,"title":{},"body":{"classes/InvalidInputError.html":{},"classes/InvalidPropertyTypeError.html":{},"classes/InvalidSchemaError.html":{}}}],["invalidinputerror",{"_index":41,"title":{"classes/InvalidInputError.html":{}},"body":{"classes/InvalidInputError.html":{},"coverage.html":{}}}],["invalidpropertytypeerror",{"_index":48,"title":{"classes/InvalidPropertyTypeError.html":{}},"body":{"classes/InvalidPropertyTypeError.html":{},"coverage.html":{}}}],["invalidschemaerror",{"_index":55,"title":{"classes/InvalidSchemaError.html":{}},"body":{"classes/InvalidSchemaError.html":{},"coverage.html":{}}}],["ip",{"_index":124,"title":{},"body":{"interfaces/Logger.html":{},"coverage.html":{}}}],["item",{"_index":64,"title":{},"body":{"classes/ItemNotFoundError.html":{}}}],["itemnotfounderror",{"_index":60,"title":{"classes/ItemNotFoundError.html":{}},"body":{"classes/ItemNotFoundError.html":{},"coverage.html":{}}}],["json.ts",{"_index":196,"title":{},"body":{"coverage.html":{}}}],["jsonschema",{"_index":242,"title":{},"body":{"coverage.html":{}}}],["jsonschematype",{"_index":263,"title":{},"body":{"coverage.html":{}}}],["key",{"_index":69,"title":{},"body":{"classes/KeyNotFoundError.html":{},"coverage.html":{}}}],["keynotfounderror",{"_index":67,"title":{"classes/KeyNotFoundError.html":{}},"body":{"classes/KeyNotFoundError.html":{},"coverage.html":{}}}],["keys",{"_index":191,"title":{},"body":{"coverage.html":{}}}],["keywords",{"_index":376,"title":{},"body":{"properties.html":{}}}],["level",{"_index":129,"title":{},"body":{"interfaces/Logger.html":{}}}],["license",{"_index":379,"title":{},"body":{"properties.html":{}}}],["literal.ts",{"_index":193,"title":{},"body":{"coverage.html":{}}}],["log",{"_index":80,"title":{},"body":{"interfaces/Logger.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["log(message",{"_index":112,"title":{},"body":{"interfaces/Logger.html":{}}}],["log(title",{"_index":115,"title":{},"body":{"interfaces/Logger.html":{}}}],["logger",{"_index":74,"title":{"interfaces/Logger.html":{}},"body":{"interfaces/Logger.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["loglevel",{"_index":130,"title":{},"body":{"interfaces/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["m",{"_index":225,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["majarversion",{"_index":218,"title":{},"body":{"coverage.html":{}}}],["manage",{"_index":391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["map",{"_index":71,"title":{},"body":{"classes/KeyNotFoundError.html":{}}}],["mapper",{"_index":339,"title":{},"body":{"coverage.html":{}}}],["mark",{"_index":389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["markdown",{"_index":136,"title":{},"body":{"interfaces/Logger.html":{}}}],["matching",{"_index":28,"title":{},"body":{"classes/AccessDeniedError.html":{},"classes/EmptyArrayError.html":{},"classes/EmptyObjectError.html":{},"classes/InvalidInputError.html":{},"classes/InvalidPropertyTypeError.html":{},"classes/InvalidSchemaError.html":{},"classes/ItemNotFoundError.html":{},"classes/KeyNotFoundError.html":{},"interfaces/Logger.html":{},"classes/MissingPropertyError.html":{},"classes/NotAbsolutePathError.html":{},"classes/NotFileError.html":{},"classes/NotImplementedError.html":{},"classes/NumberNotInRangeError.html":{},"classes/RequiredError.html":{},"interfaces/Type.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["megamillion",{"_index":311,"title":{},"body":{"coverage.html":{}}}],["message",{"_index":14,"title":{},"body":{"classes/AccessDeniedError.html":{},"classes/EmptyArrayError.html":{},"classes/EmptyObjectError.html":{},"classes/InvalidInputError.html":{},"classes/InvalidPropertyTypeError.html":{},"classes/InvalidSchemaError.html":{},"classes/ItemNotFoundError.html":{},"classes/KeyNotFoundError.html":{},"interfaces/Logger.html":{},"classes/MissingPropertyError.html":{},"classes/NotAbsolutePathError.html":{},"classes/NotFileError.html":{},"classes/NotImplementedError.html":{},"classes/NumberNotInRangeError.html":{}}}],["methods",{"_index":77,"title":{},"body":{"interfaces/Logger.html":{}}}],["milisecond",{"_index":312,"title":{},"body":{"coverage.html":{}}}],["minorversion",{"_index":219,"title":{},"body":{"coverage.html":{}}}],["minute",{"_index":313,"title":{},"body":{"coverage.html":{}}}],["miscellaneous",{"_index":349,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":148,"title":{},"body":{"classes/MissingPropertyError.html":{}}}],["missingpropertyerror",{"_index":144,"title":{"classes/MissingPropertyError.html":{}},"body":{"classes/MissingPropertyError.html":{},"coverage.html":{}}}],["mit",{"_index":380,"title":{},"body":{"properties.html":{}}}],["modelnameoptions",{"_index":277,"title":{},"body":{"coverage.html":{}}}],["modeloptions",{"_index":278,"title":{},"body":{"coverage.html":{}}}],["modules",{"_index":371,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monthday",{"_index":314,"title":{},"body":{"coverage.html":{}}}],["name",{"_index":86,"title":{},"body":{"interfaces/Logger.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["nan",{"_index":360,"title":{},"body":{"miscellaneous/functions.html":{}}}],["new",{"_index":179,"title":{},"body":{"interfaces/Type.html":{},"coverage.html":{}}}],["notabsolutepatherror",{"_index":150,"title":{"classes/NotAbsolutePathError.html":{}},"body":{"classes/NotAbsolutePathError.html":{},"coverage.html":{}}}],["notfileerror",{"_index":157,"title":{"classes/NotFileError.html":{}},"body":{"classes/NotFileError.html":{},"coverage.html":{}}}],["notimplementederror",{"_index":161,"title":{"classes/NotImplementedError.html":{}},"body":{"classes/NotImplementedError.html":{},"coverage.html":{}}}],["null",{"_index":362,"title":{},"body":{"miscellaneous/functions.html":{}}}],["num",{"_index":232,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["num(defaultvalue",{"_index":359,"title":{},"body":{"miscellaneous/functions.html":{}}}],["number",{"_index":133,"title":{},"body":{"interfaces/Logger.html":{},"classes/NumberNotInRangeError.html":{}}}],["numberformatoptions",{"_index":279,"title":{},"body":{"coverage.html":{}}}],["numbernotinrangeerror",{"_index":166,"title":{"classes/NumberNotInRangeError.html":{}},"body":{"classes/NumberNotInRangeError.html":{},"coverage.html":{}}}],["numberoptions",{"_index":280,"title":{},"body":{"coverage.html":{}}}],["numberpattern",{"_index":326,"title":{},"body":{"coverage.html":{}}}],["numberschema",{"_index":243,"title":{},"body":{"coverage.html":{}}}],["numberschemaraw",{"_index":255,"title":{},"body":{"coverage.html":{}}}],["obj",{"_index":233,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["obj(defaultvalue",{"_index":361,"title":{},"body":{"miscellaneous/functions.html":{}}}],["object",{"_index":39,"title":{},"body":{"classes/EmptyObjectError.html":{},"interfaces/Logger.html":{}}}],["object.error.ts",{"_index":37,"title":{},"body":{"classes/EmptyObjectError.html":{},"coverage.html":{}}}],["object.error.ts:2",{"_index":38,"title":{},"body":{"classes/EmptyObjectError.html":{}}}],["objectliteral",{"_index":91,"title":{},"body":{"interfaces/Logger.html":{},"coverage.html":{}}}],["objectoptions",{"_index":281,"title":{},"body":{"coverage.html":{}}}],["objectschema",{"_index":244,"title":{},"body":{"coverage.html":{}}}],["objectschemaraw",{"_index":257,"title":{},"body":{"coverage.html":{}}}],["ondelete",{"_index":282,"title":{},"body":{"coverage.html":{}}}],["onupdate",{"_index":283,"title":{},"body":{"coverage.html":{}}}],["option.ts",{"_index":208,"title":{},"body":{"coverage.html":{}}}],["optional",{"_index":87,"title":{},"body":{"interfaces/Logger.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["optional.ts",{"_index":203,"title":{},"body":{"coverage.html":{}}}],["overview",{"_index":372,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":345,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["packagejson",{"_index":197,"title":{},"body":{"coverage.html":{}}}],["pair",{"_index":199,"title":{},"body":{"coverage.html":{}}}],["parameters",{"_index":85,"title":{},"body":{"interfaces/Logger.html":{},"miscellaneous/functions.html":{}}}],["patchversion",{"_index":220,"title":{},"body":{"coverage.html":{}}}],["path",{"_index":155,"title":{},"body":{"classes/NotAbsolutePathError.html":{}}}],["path.error.ts",{"_index":153,"title":{},"body":{"classes/NotAbsolutePathError.html":{},"coverage.html":{}}}],["path.error.ts:2",{"_index":154,"title":{},"body":{"classes/NotAbsolutePathError.html":{}}}],["pattern",{"_index":328,"title":{},"body":{"coverage.html":{}}}],["pattern.ts",{"_index":330,"title":{},"body":{"coverage.html":{}}}],["percent",{"_index":315,"title":{},"body":{"coverage.html":{}}}],["pickoptional",{"_index":204,"title":{},"body":{"coverage.html":{}}}],["pickrequired",{"_index":206,"title":{},"body":{"coverage.html":{}}}],["predicate",{"_index":342,"title":{},"body":{"coverage.html":{}}}],["primitiveschemaraw",{"_index":259,"title":{},"body":{"coverage.html":{}}}],["primitivevaluetype",{"_index":211,"title":{},"body":{"coverage.html":{}}}],["properties",{"_index":11,"title":{"properties.html":{}},"body":{"classes/AccessDeniedError.html":{},"classes/EmptyArrayError.html":{},"classes/EmptyObjectError.html":{},"classes/InvalidInputError.html":{},"classes/InvalidPropertyTypeError.html":{},"classes/InvalidSchemaError.html":{},"classes/ItemNotFoundError.html":{},"classes/KeyNotFoundError.html":{},"classes/MissingPropertyError.html":{},"classes/NotAbsolutePathError.html":{},"classes/NotFileError.html":{},"classes/NotImplementedError.html":{},"classes/NumberNotInRangeError.html":{},"properties.html":{}}}],["property",{"_index":49,"title":{},"body":{"classes/InvalidPropertyTypeError.html":{},"classes/MissingPropertyError.html":{},"coverage.html":{}}}],["property.ts",{"_index":146,"title":{},"body":{"classes/MissingPropertyError.html":{},"coverage.html":{}}}],["property.ts:2",{"_index":147,"title":{},"body":{"classes/MissingPropertyError.html":{}}}],["propertynameoptions",{"_index":284,"title":{},"body":{"coverage.html":{}}}],["propertyoption",{"_index":209,"title":{},"body":{"coverage.html":{}}}],["propertyoptions",{"_index":285,"title":{},"body":{"coverage.html":{}}}],["propertytype",{"_index":212,"title":{},"body":{"coverage.html":{}}}],["propertytypeoptions",{"_index":286,"title":{},"body":{"coverage.html":{}}}],["range",{"_index":171,"title":{},"body":{"classes/NumberNotInRangeError.html":{}}}],["range.error.ts",{"_index":168,"title":{},"body":{"classes/NumberNotInRangeError.html":{},"coverage.html":{}}}],["range.error.ts:5",{"_index":169,"title":{},"body":{"classes/NumberNotInRangeError.html":{}}}],["range.ts",{"_index":301,"title":{},"body":{"coverage.html":{}}}],["rate",{"_index":316,"title":{},"body":{"coverage.html":{}}}],["readonly",{"_index":13,"title":{},"body":{"classes/AccessDeniedError.html":{},"classes/EmptyArrayError.html":{},"classes/EmptyObjectError.html":{},"classes/InvalidInputError.html":{},"classes/InvalidPropertyTypeError.html":{},"classes/InvalidSchemaError.html":{},"classes/ItemNotFoundError.html":{},"classes/KeyNotFoundError.html":{},"classes/MissingPropertyError.html":{},"classes/NotAbsolutePathError.html":{},"classes/NotFileError.html":{},"classes/NotImplementedError.html":{},"classes/NumberNotInRangeError.html":{}}}],["referencepattern",{"_index":331,"title":{},"body":{"coverage.html":{}}}],["relationoptions",{"_index":287,"title":{},"body":{"coverage.html":{}}}],["relationpropertyoptionsraw",{"_index":288,"title":{},"body":{"coverage.html":{}}}],["relationtype",{"_index":289,"title":{},"body":{"coverage.html":{}}}],["repository",{"_index":381,"title":{},"body":{"properties.html":{}}}],["requestid",{"_index":132,"title":{},"body":{"interfaces/Logger.html":{}}}],["required",{"_index":170,"title":{},"body":{"classes/NumberNotInRangeError.html":{}}}],["required.ts",{"_index":205,"title":{},"body":{"coverage.html":{}}}],["requirederror",{"_index":173,"title":{"classes/RequiredError.html":{}},"body":{"classes/RequiredError.html":{},"coverage.html":{}}}],["results",{"_index":27,"title":{},"body":{"classes/AccessDeniedError.html":{},"classes/EmptyArrayError.html":{},"classes/EmptyObjectError.html":{},"classes/InvalidInputError.html":{},"classes/InvalidPropertyTypeError.html":{},"classes/InvalidSchemaError.html":{},"classes/ItemNotFoundError.html":{},"classes/KeyNotFoundError.html":{},"interfaces/Logger.html":{},"classes/MissingPropertyError.html":{},"classes/NotAbsolutePathError.html":{},"classes/NotFileError.html":{},"classes/NotImplementedError.html":{},"classes/NumberNotInRangeError.html":{},"classes/RequiredError.html":{},"interfaces/Type.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":88,"title":{},"body":{"interfaces/Logger.html":{},"miscellaneous/functions.html":{}}}],["rline/type",{"_index":366,"title":{},"body":{"index.html":{}}}],["robert",{"_index":384,"title":{},"body":{"properties.html":{}}}],["sbyte",{"_index":297,"title":{},"body":{"coverage.html":{}}}],["schema",{"_index":58,"title":{},"body":{"classes/InvalidSchemaError.html":{}}}],["schema.error.ts",{"_index":56,"title":{},"body":{"classes/InvalidSchemaError.html":{},"coverage.html":{}}}],["schema.error.ts:2",{"_index":57,"title":{},"body":{"classes/InvalidSchemaError.html":{}}}],["schema.ts",{"_index":237,"title":{},"body":{"coverage.html":{}}}],["schemaconfig",{"_index":216,"title":{},"body":{"coverage.html":{}}}],["second",{"_index":317,"title":{},"body":{"coverage.html":{}}}],["shoesize",{"_index":318,"title":{},"body":{"coverage.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AccessDeniedError.html":{},"classes/EmptyArrayError.html":{},"classes/EmptyObjectError.html":{},"classes/InvalidInputError.html":{},"classes/InvalidPropertyTypeError.html":{},"classes/InvalidSchemaError.html":{},"classes/ItemNotFoundError.html":{},"classes/KeyNotFoundError.html":{},"interfaces/Logger.html":{},"classes/MissingPropertyError.html":{},"classes/NotAbsolutePathError.html":{},"classes/NotFileError.html":{},"classes/NotImplementedError.html":{},"classes/NumberNotInRangeError.html":{},"classes/RequiredError.html":{},"interfaces/Type.html":{}}}],["speedlimit",{"_index":319,"title":{},"body":{"coverage.html":{}}}],["src/.../logger.ts",{"_index":351,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../mark.ts",{"_index":387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../primitive.ts",{"_index":354,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/lib/common/change.ts",{"_index":186,"title":{},"body":{"coverage.html":{}}}],["src/lib/common/keys.ts",{"_index":190,"title":{},"body":{"coverage.html":{}}}],["src/lib/common/object",{"_index":192,"title":{},"body":{"coverage.html":{}}}],["src/lib/common/optional.ts",{"_index":194,"title":{},"body":{"coverage.html":{}}}],["src/lib/common/package",{"_index":195,"title":{},"body":{"coverage.html":{}}}],["src/lib/common/pair.ts",{"_index":198,"title":{},"body":{"coverage.html":{}}}],["src/lib/common/pick",{"_index":202,"title":{},"body":{"coverage.html":{}}}],["src/lib/common/property",{"_index":207,"title":{},"body":{"coverage.html":{}}}],["src/lib/common/schema",{"_index":214,"title":{},"body":{"coverage.html":{}}}],["src/lib/common/type.ts",{"_index":177,"title":{},"body":{"interfaces/Type.html":{},"coverage.html":{}}}],["src/lib/common/version.ts",{"_index":217,"title":{},"body":{"coverage.html":{}}}],["src/lib/constant/mark.ts",{"_index":223,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/errors/access",{"_index":6,"title":{},"body":{"classes/AccessDeniedError.html":{},"coverage.html":{}}}],["src/lib/errors/empty",{"_index":30,"title":{},"body":{"classes/EmptyArrayError.html":{},"classes/EmptyObjectError.html":{},"coverage.html":{}}}],["src/lib/errors/invalid",{"_index":42,"title":{},"body":{"classes/InvalidInputError.html":{},"classes/InvalidPropertyTypeError.html":{},"classes/InvalidSchemaError.html":{},"coverage.html":{}}}],["src/lib/errors/item",{"_index":61,"title":{},"body":{"classes/ItemNotFoundError.html":{},"coverage.html":{}}}],["src/lib/errors/key",{"_index":68,"title":{},"body":{"classes/KeyNotFoundError.html":{},"coverage.html":{}}}],["src/lib/errors/missing",{"_index":145,"title":{},"body":{"classes/MissingPropertyError.html":{},"coverage.html":{}}}],["src/lib/errors/not",{"_index":151,"title":{},"body":{"classes/NotAbsolutePathError.html":{},"classes/NotFileError.html":{},"classes/NotImplementedError.html":{},"coverage.html":{}}}],["src/lib/errors/number",{"_index":167,"title":{},"body":{"classes/NumberNotInRangeError.html":{},"coverage.html":{}}}],["src/lib/errors/required.error.ts",{"_index":174,"title":{},"body":{"classes/RequiredError.html":{},"coverage.html":{}}}],["src/lib/errors/required.error.ts:4",{"_index":175,"title":{},"body":{"classes/RequiredError.html":{}}}],["src/lib/initialize/primitive.ts",{"_index":228,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/interfaces/logger.ts",{"_index":76,"title":{},"body":{"interfaces/Logger.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/lib/interfaces/logger.ts:65",{"_index":113,"title":{},"body":{"interfaces/Logger.html":{}}}],["src/lib/interfaces/logger.ts:66",{"_index":114,"title":{},"body":{"interfaces/Logger.html":{}}}],["src/lib/interfaces/logger.ts:67",{"_index":116,"title":{},"body":{"interfaces/Logger.html":{}}}],["src/lib/interfaces/logger.ts:69",{"_index":98,"title":{},"body":{"interfaces/Logger.html":{}}}],["src/lib/interfaces/logger.ts:70",{"_index":99,"title":{},"body":{"interfaces/Logger.html":{}}}],["src/lib/interfaces/logger.ts:71",{"_index":101,"title":{},"body":{"interfaces/Logger.html":{}}}],["src/lib/interfaces/logger.ts:73",{"_index":108,"title":{},"body":{"interfaces/Logger.html":{}}}],["src/lib/interfaces/logger.ts:74",{"_index":109,"title":{},"body":{"interfaces/Logger.html":{}}}],["src/lib/interfaces/logger.ts:75",{"_index":111,"title":{},"body":{"interfaces/Logger.html":{}}}],["src/lib/interfaces/logger.ts:77",{"_index":118,"title":{},"body":{"interfaces/Logger.html":{}}}],["src/lib/interfaces/logger.ts:78",{"_index":119,"title":{},"body":{"interfaces/Logger.html":{}}}],["src/lib/interfaces/logger.ts:79",{"_index":121,"title":{},"body":{"interfaces/Logger.html":{}}}],["src/lib/interfaces/logger.ts:81",{"_index":103,"title":{},"body":{"interfaces/Logger.html":{}}}],["src/lib/interfaces/logger.ts:82",{"_index":104,"title":{},"body":{"interfaces/Logger.html":{}}}],["src/lib/interfaces/logger.ts:83",{"_index":106,"title":{},"body":{"interfaces/Logger.html":{}}}],["src/lib/interfaces/logger.ts:85",{"_index":84,"title":{},"body":{"interfaces/Logger.html":{}}}],["src/lib/interfaces/logger.ts:86",{"_index":92,"title":{},"body":{"interfaces/Logger.html":{}}}],["src/lib/interfaces/logger.ts:87",{"_index":95,"title":{},"body":{"interfaces/Logger.html":{}}}],["src/lib/json/json",{"_index":236,"title":{},"body":{"coverage.html":{}}}],["src/lib/json/raw/array.ts",{"_index":246,"title":{},"body":{"coverage.html":{}}}],["src/lib/json/raw/boolean.ts",{"_index":248,"title":{},"body":{"coverage.html":{}}}],["src/lib/json/raw/common.ts",{"_index":250,"title":{},"body":{"coverage.html":{}}}],["src/lib/json/raw/extra.ts",{"_index":252,"title":{},"body":{"coverage.html":{}}}],["src/lib/json/raw/number.ts",{"_index":254,"title":{},"body":{"coverage.html":{}}}],["src/lib/json/raw/object.ts",{"_index":256,"title":{},"body":{"coverage.html":{}}}],["src/lib/json/raw/primitive.ts",{"_index":258,"title":{},"body":{"coverage.html":{}}}],["src/lib/json/raw/string.ts",{"_index":260,"title":{},"body":{"coverage.html":{}}}],["src/lib/json/raw/type.ts",{"_index":262,"title":{},"body":{"coverage.html":{}}}],["src/lib/model/model.schema.ts",{"_index":264,"title":{},"body":{"coverage.html":{}}}],["src/lib/num/byte.ts",{"_index":295,"title":{},"body":{"coverage.html":{}}}],["src/lib/num/fraction.ts",{"_index":298,"title":{},"body":{"coverage.html":{}}}],["src/lib/num/int",{"_index":300,"title":{},"body":{"coverage.html":{}}}],["src/lib/object/to",{"_index":323,"title":{},"body":{"coverage.html":{}}}],["src/lib/pattern/number.pattern.ts",{"_index":325,"title":{},"body":{"coverage.html":{}}}],["src/lib/pattern/pattern.ts",{"_index":327,"title":{},"body":{"coverage.html":{}}}],["src/lib/pattern/reference",{"_index":329,"title":{},"body":{"coverage.html":{}}}],["src/lib/pattern/string.pattern.ts",{"_index":332,"title":{},"body":{"coverage.html":{}}}],["src/lib/string/alphabet.ts",{"_index":334,"title":{},"body":{"coverage.html":{}}}],["src/lib/string/ip.ts",{"_index":336,"title":{},"body":{"coverage.html":{}}}],["src/lib/workflow/mapper.ts",{"_index":337,"title":{},"body":{"coverage.html":{}}}],["src/lib/workflow/predicate.ts",{"_index":340,"title":{},"body":{"coverage.html":{}}}],["started",{"_index":365,"title":{"index.html":{}},"body":{}}],["statements",{"_index":185,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":12,"title":{},"body":{"classes/AccessDeniedError.html":{},"classes/EmptyArrayError.html":{},"classes/EmptyObjectError.html":{},"classes/InvalidInputError.html":{},"classes/InvalidPropertyTypeError.html":{},"classes/InvalidSchemaError.html":{},"classes/ItemNotFoundError.html":{},"classes/KeyNotFoundError.html":{},"classes/MissingPropertyError.html":{},"classes/NotAbsolutePathError.html":{},"classes/NotFileError.html":{},"classes/NotImplementedError.html":{},"classes/NumberNotInRangeError.html":{}}}],["str",{"_index":234,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["str(defaultvalue",{"_index":363,"title":{},"body":{"miscellaneous/functions.html":{}}}],["string",{"_index":20,"title":{},"body":{"classes/AccessDeniedError.html":{},"classes/EmptyArrayError.html":{},"classes/EmptyObjectError.html":{},"classes/InvalidInputError.html":{},"classes/InvalidPropertyTypeError.html":{},"classes/InvalidSchemaError.html":{},"classes/ItemNotFoundError.html":{},"classes/KeyNotFoundError.html":{},"interfaces/Logger.html":{},"classes/MissingPropertyError.html":{},"classes/NotAbsolutePathError.html":{},"classes/NotFileError.html":{},"classes/NotImplementedError.html":{},"classes/NumberNotInRangeError.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["string,number,boolean,object,date,array",{"_index":52,"title":{},"body":{"classes/InvalidPropertyTypeError.html":{}}}],["string.ts",{"_index":324,"title":{},"body":{"coverage.html":{}}}],["stringformatoptions",{"_index":290,"title":{},"body":{"coverage.html":{}}}],["stringoptions",{"_index":291,"title":{},"body":{"coverage.html":{}}}],["stringpattern",{"_index":333,"title":{},"body":{"coverage.html":{}}}],["strings",{"_index":392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stringschema",{"_index":245,"title":{},"body":{"coverage.html":{}}}],["stringschemaraw",{"_index":261,"title":{},"body":{"coverage.html":{}}}],["super('requried",{"_index":176,"title":{},"body":{"classes/RequiredError.html":{}}}],["super(accessdeniederror.message",{"_index":26,"title":{},"body":{"classes/AccessDeniedError.html":{}}}],["super(emptyarrayerror.message",{"_index":35,"title":{},"body":{"classes/EmptyArrayError.html":{}}}],["super(emptyobjecterror.message",{"_index":40,"title":{},"body":{"classes/EmptyObjectError.html":{}}}],["super(invalidinputerror.message",{"_index":47,"title":{},"body":{"classes/InvalidInputError.html":{}}}],["super(invalidpropertytypeerror.message",{"_index":54,"title":{},"body":{"classes/InvalidPropertyTypeError.html":{}}}],["super(invalidschemaerror.message",{"_index":59,"title":{},"body":{"classes/InvalidSchemaError.html":{}}}],["super(itemnotfounderror.message",{"_index":66,"title":{},"body":{"classes/ItemNotFoundError.html":{}}}],["super(keynotfounderror.message",{"_index":72,"title":{},"body":{"classes/KeyNotFoundError.html":{}}}],["super(missingpropertyerror.message",{"_index":149,"title":{},"body":{"classes/MissingPropertyError.html":{}}}],["super(notabsolutepatherror.message",{"_index":156,"title":{},"body":{"classes/NotAbsolutePathError.html":{}}}],["super(notfileerror.message",{"_index":160,"title":{},"body":{"classes/NotFileError.html":{}}}],["super(notimplementederror.message",{"_index":165,"title":{},"body":{"classes/NotImplementedError.html":{}}}],["super(numbernotinrangeerror.message",{"_index":172,"title":{},"body":{"classes/NumberNotInRangeError.html":{}}}],["swc/helpers",{"_index":347,"title":{},"body":{"dependencies.html":{}}}],["t",{"_index":181,"title":{},"body":{"interfaces/Type.html":{},"miscellaneous/functions.html":{}}}],["table",{"_index":344,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":343,"title":{},"body":{"coverage.html":{}}}],["taxrate",{"_index":320,"title":{},"body":{"coverage.html":{}}}],["timestamp",{"_index":127,"title":{},"body":{"interfaces/Logger.html":{}}}],["title",{"_index":96,"title":{},"body":{"interfaces/Logger.html":{}}}],["tostring",{"_index":83,"title":{},"body":{"interfaces/Logger.html":{},"coverage.html":{}}}],["transform",{"_index":292,"title":{},"body":{"coverage.html":{}}}],["type",{"_index":18,"title":{"interfaces/Type.html":{}},"body":{"classes/AccessDeniedError.html":{},"classes/EmptyArrayError.html":{},"classes/EmptyObjectError.html":{},"classes/InvalidInputError.html":{},"classes/InvalidPropertyTypeError.html":{},"classes/InvalidSchemaError.html":{},"classes/ItemNotFoundError.html":{},"classes/KeyNotFoundError.html":{},"interfaces/Logger.html":{},"classes/MissingPropertyError.html":{},"classes/NotAbsolutePathError.html":{},"classes/NotFileError.html":{},"classes/NotImplementedError.html":{},"classes/NumberNotInRangeError.html":{},"interfaces/Type.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["type.error.ts",{"_index":50,"title":{},"body":{"classes/InvalidPropertyTypeError.html":{},"coverage.html":{}}}],["type.error.ts:2",{"_index":53,"title":{},"body":{"classes/InvalidPropertyTypeError.html":{}}}],["type.error.ts:3",{"_index":51,"title":{},"body":{"classes/InvalidPropertyTypeError.html":{}}}],["type.ts",{"_index":210,"title":{},"body":{"coverage.html":{}}}],["types",{"_index":367,"title":{},"body":{"index.html":{},"properties.html":{}}}],["uipropertyoptions",{"_index":293,"title":{},"body":{"coverage.html":{}}}],["unique",{"_index":388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["used",{"_index":390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userid",{"_index":131,"title":{},"body":{"interfaces/Logger.html":{}}}],["utilized",{"_index":368,"title":{},"body":{"index.html":{},"properties.html":{}}}],["validation",{"_index":294,"title":{},"body":{"coverage.html":{}}}],["value",{"_index":22,"title":{},"body":{"classes/AccessDeniedError.html":{},"classes/EmptyArrayError.html":{},"classes/EmptyObjectError.html":{},"classes/InvalidInputError.html":{},"classes/InvalidPropertyTypeError.html":{},"classes/InvalidSchemaError.html":{},"classes/ItemNotFoundError.html":{},"classes/KeyNotFoundError.html":{},"classes/MissingPropertyError.html":{},"classes/NotAbsolutePathError.html":{},"classes/NotFileError.html":{},"classes/NotImplementedError.html":{},"classes/NumberNotInRangeError.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["valuetype",{"_index":213,"title":{},"body":{"coverage.html":{}}}],["variable",{"_index":224,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":386,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":221,"title":{},"body":{"coverage.html":{},"properties.html":{}}}],["versionextension",{"_index":222,"title":{},"body":{"coverage.html":{}}}],["void",{"_index":89,"title":{},"body":{"interfaces/Logger.html":{}}}],["warn",{"_index":81,"title":{},"body":{"interfaces/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["warn(message",{"_index":117,"title":{},"body":{"interfaces/Logger.html":{}}}],["warn(title",{"_index":120,"title":{},"body":{"interfaces/Logger.html":{}}}],["weekday",{"_index":321,"title":{},"body":{"coverage.html":{}}}],["whiteball",{"_index":322,"title":{},"body":{"coverage.html":{}}}],["yes",{"_index":93,"title":{},"body":{"interfaces/Logger.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AccessDeniedError.html":{"url":"classes/AccessDeniedError.html","title":"class - AccessDeniedError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccessDeniedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/errors/access-denied.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/errors/access-denied.error.ts:2\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Access Denied'\n                    \n                \n                    \n                        \n                                Defined in src/lib/errors/access-denied.error.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AccessDeniedError extends Error {\n  static readonly message = 'Access Denied';\n  constructor() {\n    super(AccessDeniedError.message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmptyArrayError.html":{"url":"classes/EmptyArrayError.html","title":"class - EmptyArrayError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmptyArrayError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/errors/empty-array.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/errors/empty-array.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Array is empty'\n                    \n                \n                    \n                        \n                                Defined in src/lib/errors/empty-array.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class EmptyArrayError extends Error {\n  static readonly message = 'Array is empty';\n  constructor() {\n    super(EmptyArrayError.message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmptyObjectError.html":{"url":"classes/EmptyObjectError.html","title":"class - EmptyObjectError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmptyObjectError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/errors/empty-object.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/errors/empty-object.error.ts:2\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Object is empty'\n                    \n                \n                    \n                        \n                                Defined in src/lib/errors/empty-object.error.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class EmptyObjectError extends Error {\n  static readonly message = 'Object is empty';\n  constructor() {\n    super(EmptyObjectError.message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidInputError.html":{"url":"classes/InvalidInputError.html","title":"class - InvalidInputError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidInputError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/errors/invalid-input.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/errors/invalid-input.error.ts:2\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Invalid input'\n                    \n                \n                    \n                        \n                                Defined in src/lib/errors/invalid-input.error.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class InvalidInputError extends Error {\n  static readonly message = 'Invalid input';\n  constructor() {\n    super(InvalidInputError.message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidPropertyTypeError.html":{"url":"classes/InvalidPropertyTypeError.html","title":"class - InvalidPropertyTypeError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidPropertyTypeError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/errors/invalid-property-type.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/errors/invalid-property-type.error.ts:3\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Invalid property type error (string,number,boolean,object,date,array'\n                    \n                \n                    \n                        \n                                Defined in src/lib/errors/invalid-property-type.error.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class InvalidPropertyTypeError extends Error {\n  static readonly message =\n    'Invalid property type error (string,number,boolean,object,date,array';\n  constructor() {\n    super(InvalidPropertyTypeError.message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidSchemaError.html":{"url":"classes/InvalidSchemaError.html","title":"class - InvalidSchemaError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidSchemaError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/errors/invalid-schema.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/errors/invalid-schema.error.ts:2\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Invalid schema'\n                    \n                \n                    \n                        \n                                Defined in src/lib/errors/invalid-schema.error.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class InvalidSchemaError extends Error {\n  static readonly message = 'Invalid schema';\n  constructor() {\n    super(InvalidSchemaError.message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ItemNotFoundError.html":{"url":"classes/ItemNotFoundError.html","title":"class - ItemNotFoundError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ItemNotFoundError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/errors/item-not-found.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/errors/item-not-found.error.ts:2\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'The item not found'\n                    \n                \n                    \n                        \n                                Defined in src/lib/errors/item-not-found.error.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ItemNotFoundError extends Error {\n  static readonly message = 'The item not found';\n  constructor() {\n    super(ItemNotFoundError.message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/KeyNotFoundError.html":{"url":"classes/KeyNotFoundError.html","title":"class - KeyNotFoundError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  KeyNotFoundError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/errors/key-not-found.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/errors/key-not-found.error.ts:2\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Key does not exist in the map'\n                    \n                \n                    \n                        \n                                Defined in src/lib/errors/key-not-found.error.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class KeyNotFoundError extends Error {\n  static readonly message = 'Key does not exist in the map';\n  constructor() {\n    super(KeyNotFoundError.message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Logger.html":{"url":"interfaces/Logger.html","title":"interface - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/logger.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        debug\n                                    \n                                \n                                \n                                    \n                                        debug\n                                    \n                                \n                                \n                                    \n                                        debug\n                                    \n                                \n                                \n                                    \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error\n                                    \n                                \n                                \n                                    \n                                        fatal\n                                    \n                                \n                                \n                                    \n                                        fatal\n                                    \n                                \n                                \n                                    \n                                        fatal\n                                    \n                                \n                                \n                                    \n                                        info\n                                    \n                                \n                                \n                                    \n                                        info\n                                    \n                                \n                                \n                                    \n                                        info\n                                    \n                                \n                                \n                                    \n                                        log\n                                    \n                                \n                                \n                                    \n                                        log\n                                    \n                                \n                                \n                                    \n                                        log\n                                    \n                                \n                                \n                                    \n                                        warn\n                                    \n                                \n                                \n                                    \n                                        warn\n                                    \n                                \n                                \n                                    \n                                        warn\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(message: ToString)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/interfaces/logger.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            ToString\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(message: ToString, data?: ObjectLiteral)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/interfaces/logger.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            ToString\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            ObjectLiteral\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(title: ToString, message?: ToString, data?: ObjectLiteral)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/interfaces/logger.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                            ToString\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                message\n                                            \n                                                            ToString\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            ObjectLiteral\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: ToString)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/interfaces/logger.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            ToString\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: ToString, data?: ObjectLiteral)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/interfaces/logger.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            ToString\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            ObjectLiteral\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(title: ToString, message?: ToString, data?: ObjectLiteral)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/interfaces/logger.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                            ToString\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                message\n                                            \n                                                            ToString\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            ObjectLiteral\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fatal\n                        \n                    \n                \n            \n            \n                \nfatal(message: ToString)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/interfaces/logger.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            ToString\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fatal\n                        \n                    \n                \n            \n            \n                \nfatal(message: ToString, data?: ObjectLiteral)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/interfaces/logger.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            ToString\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            ObjectLiteral\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fatal\n                        \n                    \n                \n            \n            \n                \nfatal(title: ToString, message?: ToString, data?: ObjectLiteral)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/interfaces/logger.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                            ToString\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                message\n                                            \n                                                            ToString\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            ObjectLiteral\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        info\n                        \n                    \n                \n            \n            \n                \ninfo(message: ToString)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/interfaces/logger.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            ToString\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        info\n                        \n                    \n                \n            \n            \n                \ninfo(message: ToString, data?: ObjectLiteral)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/interfaces/logger.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            ToString\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            ObjectLiteral\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        info\n                        \n                    \n                \n            \n            \n                \ninfo(title: ToString, message?: ToString, data?: ObjectLiteral)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/interfaces/logger.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                            ToString\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                message\n                                            \n                                                            ToString\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            ObjectLiteral\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message: ToString)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/interfaces/logger.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            ToString\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message: ToString, data?: ObjectLiteral)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/interfaces/logger.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            ToString\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            ObjectLiteral\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(title: ToString, message?: ToString, data?: ObjectLiteral)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/interfaces/logger.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                            ToString\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                message\n                                            \n                                                            ToString\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            ObjectLiteral\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(message: ToString)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/interfaces/logger.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            ToString\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(message: ToString, data?: ObjectLiteral)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/interfaces/logger.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            ToString\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            ObjectLiteral\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(title: ToString, message?: ToString, data?: ObjectLiteral)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/interfaces/logger.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                            ToString\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                message\n                                            \n                                                            ToString\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            ObjectLiteral\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ObjectLiteral } from '../common';\nimport { ToString } from '../object';\nimport { IP } from '../string';\n\nexport type Log = {\n  appname?: string;\n  context?: string;\n  message?: ToString;\n  timestamp?: Date;\n  level?: LogLevel;\n  userId?: string;\n  requestId?: number;\n  data?: ObjectLiteral;\n  ip?: IP;\n};\n\n/**\n * Configure the behaviour of logger\n *\n *````markdown\n * |------------------------------------------|\n * | Name      | Display Only                 |\n * |-----------|------------------------------|\n * | LOG       | ALL                          |\n * | INFO      | INFO, WARN, ERROR, FATAL     |\n * | WARN      | WARN, ERROR, FATAL           |\n * | ERROR     | ERROR, FATA                  |\n * | FATAL     | FATAL                        |\n * |------------------------------------------|\n *````\n */\nexport enum LogLevel {\n  /**\n   * log everything\n   */\n  LOG = 0,\n\n  /**\n   * log everthing but log\n   */\n  INFO,\n\n  /**\n   * log everything excluding log, info\n   */\n  WARN,\n\n  /**\n   * Log error and fatal\n   */\n  ERROR,\n\n  /**\n   * log fatal only\n   */\n  FATAL,\n\n  /**\n   * only debug\n   */\n  DEBUG,\n}\n\nexport interface Logger {\n  log(message: ToString): void;\n  log(message: ToString, data?: ObjectLiteral): void;\n  log(title: ToString, message?: ToString, data?: ObjectLiteral): void;\n\n  error(message: ToString): void;\n  error(message: ToString, data?: ObjectLiteral): void;\n  error(title: ToString, message?: ToString, data?: ObjectLiteral): void;\n\n  info(message: ToString): void;\n  info(message: ToString, data?: ObjectLiteral): void;\n  info(title: ToString, message?: ToString, data?: ObjectLiteral): void;\n\n  warn(message: ToString): void;\n  warn(message: ToString, data?: ObjectLiteral): void;\n  warn(title: ToString, message?: ToString, data?: ObjectLiteral): void;\n\n  fatal(message: ToString): void;\n  fatal(message: ToString, data?: ObjectLiteral): void;\n  fatal(title: ToString, message?: ToString, data?: ObjectLiteral): void;\n\n  debug(message: ToString): void;\n  debug(message: ToString, data?: ObjectLiteral): void;\n  debug(title: ToString, message?: ToString, data?: ObjectLiteral): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MissingPropertyError.html":{"url":"classes/MissingPropertyError.html","title":"class - MissingPropertyError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MissingPropertyError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/errors/missing-property.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/errors/missing-property.ts:2\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Missing property'\n                    \n                \n                    \n                        \n                                Defined in src/lib/errors/missing-property.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class MissingPropertyError extends Error {\n  static readonly message = 'Missing property';\n  constructor() {\n    super(MissingPropertyError.message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotAbsolutePathError.html":{"url":"classes/NotAbsolutePathError.html","title":"class - NotAbsolutePathError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotAbsolutePathError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/errors/not-absolute-path.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/errors/not-absolute-path.error.ts:2\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Not absolute path'\n                    \n                \n                    \n                        \n                                Defined in src/lib/errors/not-absolute-path.error.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NotAbsolutePathError extends Error {\n  static readonly message = 'Not absolute path';\n  constructor() {\n    super(NotAbsolutePathError.message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotFileError.html":{"url":"classes/NotFileError.html","title":"class - NotFileError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotFileError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/errors/not-file.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/errors/not-file.error.ts:2\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Not file'\n                    \n                \n                    \n                        \n                                Defined in src/lib/errors/not-file.error.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NotFileError extends Error {\n  static readonly message = 'Not file';\n  constructor() {\n    super(NotFileError.message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotImplementedError.html":{"url":"classes/NotImplementedError.html","title":"class - NotImplementedError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotImplementedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/errors/not-implemented.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/errors/not-implemented.ts:2\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Not implemented'\n                    \n                \n                    \n                        \n                                Defined in src/lib/errors/not-implemented.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NotImplementedError extends Error {\n  static readonly message = 'Not implemented';\n  constructor() {\n    super(NotImplementedError.message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NumberNotInRangeError.html":{"url":"classes/NumberNotInRangeError.html","title":"class - NumberNotInRangeError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NumberNotInRangeError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/errors/number-not-in-range.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/errors/number-not-in-range.error.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'The number value is not in the required range'\n                    \n                \n                    \n                        \n                                Defined in src/lib/errors/number-not-in-range.error.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NumberNotInRangeError extends Error {\n  static readonly message = 'The number value is not in the required range';\n\n  constructor() {\n    super(NumberNotInRangeError.message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequiredError.html":{"url":"classes/RequiredError.html","title":"class - RequiredError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequiredError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/errors/required.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/errors/required.error.ts:4\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RequiredError extends Error {\n  constructor() {\n    super('Requried');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Type.html":{"url":"interfaces/Type.html","title":"interface - Type","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Type\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/common/type.ts\n        \n\n\n            \n                Description\n            \n            \n                Class constructor type\n\n            \n\n\n\n\n\n    \n\n\n    \n        export interface Type {\n  new (...args: Args): T;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/lib/common/change.ts\n            \n            type alias\n            Change\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/common/keys.ts\n            \n            type alias\n            Key\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/common/keys.ts\n            \n            type alias\n            Keys\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/common/object-literal.ts\n            \n            type alias\n            ObjectLiteral\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/common/optional.ts\n            \n            type alias\n            Optional\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/common/package-json.ts\n            \n            type alias\n            PackageJSON\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/common/pair.ts\n            \n            type alias\n            Pair\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/common/pick-optional.ts\n            \n            type alias\n            PickOptional\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/common/pick-required.ts\n            \n            type alias\n            PickRequired\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/common/property-option.ts\n            \n            type alias\n            PropertyOption\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/common/property-type.ts\n            \n            type alias\n            PrimitiveValueType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/common/property-type.ts\n            \n            type alias\n            PropertyType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/common/property-type.ts\n            \n            type alias\n            ValueType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/common/schema-config.ts\n            \n            type alias\n            SchemaConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/common/type.ts\n            \n            interface\n            Type\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/common/version.ts\n            \n            type alias\n            MajarVersion\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/common/version.ts\n            \n            type alias\n            MinorVersion\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/common/version.ts\n            \n            type alias\n            PatchVersion\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/common/version.ts\n            \n            type alias\n            Version\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/common/version.ts\n            \n            type alias\n            VersionExtension\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/constant/mark.ts\n            \n            variable\n            $M\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/errors/access-denied.error.ts\n            \n            class\n            AccessDeniedError\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/errors/empty-array.ts\n            \n            class\n            EmptyArrayError\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/errors/empty-object.error.ts\n            \n            class\n            EmptyObjectError\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/errors/invalid-input.error.ts\n            \n            class\n            InvalidInputError\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/errors/invalid-property-type.error.ts\n            \n            class\n            InvalidPropertyTypeError\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/errors/invalid-schema.error.ts\n            \n            class\n            InvalidSchemaError\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/errors/item-not-found.error.ts\n            \n            class\n            ItemNotFoundError\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/errors/key-not-found.error.ts\n            \n            class\n            KeyNotFoundError\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/errors/missing-property.ts\n            \n            class\n            MissingPropertyError\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/errors/not-absolute-path.error.ts\n            \n            class\n            NotAbsolutePathError\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/errors/not-file.error.ts\n            \n            class\n            NotFileError\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/errors/not-implemented.ts\n            \n            class\n            NotImplementedError\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/errors/number-not-in-range.error.ts\n            \n            class\n            NumberNotInRangeError\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/errors/required.error.ts\n            \n            class\n            RequiredError\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/lib/initialize/primitive.ts\n            \n            function\n            arr\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/initialize/primitive.ts\n            \n            function\n            bool\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/initialize/primitive.ts\n            \n            function\n            num\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/initialize/primitive.ts\n            \n            function\n            obj\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/initialize/primitive.ts\n            \n            function\n            str\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/interfaces/logger.ts\n            \n            interface\n            Logger\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                        src/lib/interfaces/logger.ts\n            \n            type alias\n            Log\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/json/json-schema.ts\n            \n            type alias\n            __JSONSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/json/json-schema.ts\n            \n            type alias\n            ArraySchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/json/json-schema.ts\n            \n            type alias\n            BooleanSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/json/json-schema.ts\n            \n            type alias\n            CT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/json/json-schema.ts\n            \n            type alias\n            JSONSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/json/json-schema.ts\n            \n            type alias\n            NumberSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/json/json-schema.ts\n            \n            type alias\n            ObjectSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/json/json-schema.ts\n            \n            type alias\n            StringSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/json/raw/array.ts\n            \n            type alias\n            ArraySchemaRaw\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/json/raw/boolean.ts\n            \n            type alias\n            BooleanSchemaRaw\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/json/raw/common.ts\n            \n            type alias\n            CommonSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/json/raw/extra.ts\n            \n            type alias\n            ExtraSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/json/raw/number.ts\n            \n            type alias\n            NumberSchemaRaw\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/json/raw/object.ts\n            \n            type alias\n            ObjectSchemaRaw\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/json/raw/primitive.ts\n            \n            type alias\n            PrimitiveSchemaRaw\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/json/raw/string.ts\n            \n            type alias\n            StringSchemaRaw\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/json/raw/type.ts\n            \n            type alias\n            JSONSchemaType\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            ArrayOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            BooleanOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            CommonNumberOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            CommonPropertyOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            DateOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            Dto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            Encryption\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            General\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            IconOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            InputTypeOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            IntegerOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            IntergerPropertyOptionsRaw\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            ModelNameOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            ModelOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            NumberFormatOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            NumberOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            ObjectOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            OnDelete\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            OnUpdate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            PropertyNameOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            PropertyOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            PropertyTypeOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            RelationOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            RelationPropertyOptionsRaw\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            RelationType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            StringFormatOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            StringOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            Transform\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            UiPropertyOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            Validation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/num/byte.ts\n            \n            type alias\n            Byte\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/num/byte.ts\n            \n            type alias\n            SByte\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/num/fraction.ts\n            \n            type alias\n            Fraction\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/num/int-range.ts\n            \n            type alias\n            Binary\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/num/int-range.ts\n            \n            type alias\n            BloodPresure\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/num/int-range.ts\n            \n            type alias\n            ClothingSize\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/num/int-range.ts\n            \n            type alias\n            Digit\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/num/int-range.ts\n            \n            type alias\n            Enumerate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/num/int-range.ts\n            \n            type alias\n            GoldenBall\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/num/int-range.ts\n            \n            type alias\n            Hour\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/num/int-range.ts\n            \n            type alias\n            HumanAge\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/num/int-range.ts\n            \n            type alias\n            IntRange\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/num/int-range.ts\n            \n            type alias\n            MegaMillion\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/num/int-range.ts\n            \n            type alias\n            Milisecond\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/num/int-range.ts\n            \n            type alias\n            Minute\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/num/int-range.ts\n            \n            type alias\n            MonthDay\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/num/int-range.ts\n            \n            type alias\n            Percent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/num/int-range.ts\n            \n            type alias\n            Rate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/num/int-range.ts\n            \n            type alias\n            Second\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/num/int-range.ts\n            \n            type alias\n            ShoeSize\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/num/int-range.ts\n            \n            type alias\n            SpeedLimit\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/num/int-range.ts\n            \n            type alias\n            TaxRate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/num/int-range.ts\n            \n            type alias\n            WeekDay\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/num/int-range.ts\n            \n            type alias\n            WhiteBall\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/object/to-string.ts\n            \n            type alias\n            ToString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/pattern/number.pattern.ts\n            \n            type alias\n            NumberPattern\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/pattern/pattern.ts\n            \n            type alias\n            Pattern\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/pattern/reference-pattern.ts\n            \n            type alias\n            ReferencePattern\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/pattern/string.pattern.ts\n            \n            type alias\n            StringPattern\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/string/alphabet.ts\n            \n            type alias\n            Alphabet\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/string/ip.ts\n            \n            type alias\n            IP\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/workflow/mapper.ts\n            \n            type alias\n            AsyncMapper\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/workflow/mapper.ts\n            \n            type alias\n            Mapper\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/workflow/predicate.ts\n            \n            type alias\n            AsyncPredicate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/workflow/predicate.ts\n            \n            type alias\n            Predicate\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @swc/helpers : ~0.5.11\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LogLevel   (src/.../logger.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/interfaces/logger.ts\n    \n        \n            \n                \n                    \n                        \n                        LogLevel\n                    \n                \n                    \n                        \n                            Configure the behaviour of logger\nExample :|------------------------------------------|\n| Name      | Display Only                 |\n|-----------|------------------------------|\n| LOG       | ALL                          |\n| INFO      | INFO, WARN, ERROR, FATAL     |\n| WARN      | WARN, ERROR, FATAL           |\n| ERROR     | ERROR, FATA                  |\n| FATAL     | FATAL                        |\n|------------------------------------------|\n                        \n                    \n                        \n                            \n                                 LOG\n                            \n                        \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                 WARN\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                 FATAL\n                            \n                        \n                        \n                            \n                                 DEBUG\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            arr   (src/.../primitive.ts)\n                        \n                        \n                            bool   (src/.../primitive.ts)\n                        \n                        \n                            num   (src/.../primitive.ts)\n                        \n                        \n                            obj   (src/.../primitive.ts)\n                        \n                        \n                            str   (src/.../primitive.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/initialize/primitive.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        arr\n                        \n                    \n                \n            \n            \n                \narr(defaultValue)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                defaultValue\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bool\n                        \n                    \n                \n            \n            \n                \nbool(defaultValue)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                defaultValue\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        num\n                        \n                    \n                \n            \n            \n                \nnum(defaultValue)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                defaultValue\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    NaN\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        obj\n                        \n                    \n                \n            \n            \n                \nobj(defaultValue: null)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                defaultValue\n                                            \n                                                        null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        str\n                        \n                    \n                \n            \n            \n                \nstr(defaultValue: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                defaultValue\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n@rline/type\n\nAll types and interfaces utilized across the applications\n\nDocumentation\nDetailed documentation Documentation\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    14 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 9.5.0\n        \n            Description : All types and interfaces utilized across the applications\n        \n            Keywords : types, common\n        \n            Homepage : https://rbrightline.github.io/common/type\n        \n            License : MIT\n        \n            Repository : https://github.com/rbrightline/common/tree/main/libs/type\n        \n            Author : Robert Brightline\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            $M   (src/.../mark.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/constant/mark.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        $M\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n\n            \n                \n                    Unique mark used to manage strings\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
