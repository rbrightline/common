var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AccessDeniedError.html",[0,0.144,1,2.097]],["body/classes/AccessDeniedError.html",[0,0.169,1,3.164,2,0.636,3,0.487,4,0.559,5,0.487,6,4.079,7,2.88,8,0.921,9,0.717,10,0.418,11,0.816,12,1.142,13,1.142,14,1.017,15,0.901,16,0.816,17,4.5,18,0.354,19,0.039,20,0.559,21,0.636,22,0.636,23,4.5,24,4.5,25,0.559,26,3.508,27,0.031,28,0.031]],["title/classes/EmptyArrayError.html",[0,0.144,29,2.097]],["body/classes/EmptyArrayError.html",[0,0.169,2,0.636,3,0.487,4,0.559,5,0.487,8,0.921,9,0.717,10,0.418,11,0.816,12,1.142,13,1.142,14,1.017,15,0.901,16,0.816,18,0.354,19,0.039,20,0.559,21,0.636,22,0.636,25,0.559,27,0.031,28,0.031,29,3.164,30,3.493,31,2.88,32,4.5,33,4.5,34,3.694,35,3.508]],["title/classes/EmptyObjectError.html",[0,0.144,36,2.097]],["body/classes/EmptyObjectError.html",[0,0.169,2,0.636,3,0.487,4,0.559,5,0.487,8,0.921,9,0.717,10,0.418,11,0.816,12,1.142,13,1.142,14,1.017,15,0.901,16,0.816,18,0.354,19,0.039,20,0.559,21,0.636,22,0.636,25,0.559,27,0.031,28,0.031,30,3.493,34,3.694,36,3.164,37,2.88,38,4.5,39,3.694,40,3.508]],["title/classes/InvalidInputError.html",[0,0.144,41,2.097]],["body/classes/InvalidInputError.html",[0,0.169,2,0.636,3,0.487,4,0.559,5,0.487,8,0.921,9,0.717,10,0.418,11,0.816,12,1.142,13,1.142,14,1.017,15,0.901,16,0.816,18,0.354,19,0.039,20,0.559,21,0.636,22,0.636,25,0.559,27,0.031,28,0.031,41,3.164,42,3.055,43,2.88,44,4.5,45,3.164,46,4.5,47,3.508]],["title/classes/InvalidPropertyTypeError.html",[0,0.144,48,2.097]],["body/classes/InvalidPropertyTypeError.html",[0,0.162,2,0.61,3,0.467,4,0.536,5,0.467,8,0.896,9,0.822,10,0.401,11,0.794,12,1.119,13,1.119,14,0.997,15,0.883,16,0.794,18,0.491,19,0.039,20,0.536,21,0.61,22,0.61,25,0.536,27,0.03,28,0.03,42,2.994,45,3.078,48,3.078,49,3.76,50,2.76,51,3.363,52,4.379,53,3.363,54,3.363]],["title/classes/InvalidSchemaError.html",[0,0.144,55,2.097]],["body/classes/InvalidSchemaError.html",[0,0.169,2,0.636,3,0.487,4,0.559,5,0.487,8,0.921,9,0.717,10,0.418,11,0.816,12,1.142,13,1.142,14,1.017,15,0.901,16,0.816,18,0.354,19,0.039,20,0.559,21,0.636,22,0.636,25,0.559,27,0.031,28,0.031,42,3.055,45,3.164,55,3.164,56,2.88,57,4.5,58,4.5,59,3.508]],["title/classes/ItemNotFoundError.html",[0,0.144,60,2.097]],["body/classes/ItemNotFoundError.html",[0,0.169,2,0.636,3,0.487,4,0.559,5,0.487,8,0.921,9,0.717,10,0.418,11,0.816,12,1.142,13,1.142,14,1.017,15,0.901,16,0.816,18,0.354,19,0.039,20,0.559,21,0.636,22,0.636,25,0.559,27,0.031,28,0.031,60,3.164,61,4.079,62,2.466,63,3.694,64,4.5,65,4.5,66,3.508]],["title/classes/KeyNotFoundError.html",[0,0.144,67,2.097]],["body/classes/KeyNotFoundError.html",[0,0.168,2,0.63,3,0.482,4,0.554,5,0.482,8,0.916,9,0.713,10,0.415,11,0.811,12,1.136,13,1.136,14,1.013,15,0.897,16,0.811,18,0.35,19,0.039,20,0.554,21,0.63,22,0.63,25,0.554,27,0.03,28,0.03,62,2.442,63,3.672,67,3.144,68,4.061,69,3.672,70,4.473,71,4.473,72,3.474]],["title/interfaces/Logger.html",[73,1.625,74,1.834]],["body/interfaces/Logger.html",[3,0.572,4,0.148,5,0.129,9,0.677,10,0.111,14,1.084,16,0.863,18,0.486,19,0.041,20,0.411,25,0.343,27,0.011,28,0.011,39,0.764,73,0.507,74,1.324,75,0.507,76,0.655,77,1.622,78,3,79,3.574,80,3.247,81,3.273,82,2.577,83,4.781,84,0.931,85,3.906,86,3.388,87,3.345,88,3.906,89,5.413,90,5.433,91,4.476,92,0.931,93,4.758,94,1.622,95,0.931,96,3.207,97,2.577,98,0.931,99,0.931,100,1.622,101,0.931,102,2.577,103,0.931,104,0.931,105,1.622,106,0.931,107,2.577,108,0.931,109,0.931,110,1.622,111,0.931,112,2.577,113,0.931,114,0.931,115,1.622,116,0.931,117,2.577,118,0.931,119,0.931,120,1.622,121,0.931,122,2.154,123,0.764,124,1.768,125,0.931,126,0.931,127,0.931,128,0.931,129,0.931,130,1.331,131,0.931,132,0.931,133,0.764,134,0.764,135,0.764,136,0.931,137,0.764,138,0.764,139,0.931,140,1.622,141,0.764,142,0.931,143,0.931]],["title/classes/MissingPropertyError.html",[0,0.144,144,2.097]],["body/classes/MissingPropertyError.html",[0,0.169,2,0.636,3,0.487,4,0.559,5,0.487,8,0.921,9,0.717,10,0.418,11,0.816,12,1.142,13,1.142,14,1.017,15,0.901,16,0.816,18,0.354,19,0.039,20,0.559,21,0.636,22,0.636,25,0.559,27,0.031,28,0.031,49,3.164,144,3.164,145,4.079,146,2.88,147,4.5,148,4.5,149,3.508]],["title/classes/NotAbsolutePathError.html",[0,0.144,150,2.097]],["body/classes/NotAbsolutePathError.html",[0,0.167,2,0.627,3,0.48,4,0.551,5,0.48,8,0.913,9,0.711,10,0.413,11,0.809,12,1.134,13,1.134,14,1.01,15,0.895,16,0.809,18,0.349,19,0.039,20,0.551,21,0.627,22,0.627,25,0.551,27,0.03,28,0.03,150,3.135,151,3.035,152,4.43,153,2.839,154,4.459,155,4.459,156,3.458]],["title/classes/NotFileError.html",[0,0.144,157,2.097]],["body/classes/NotFileError.html",[0,0.171,2,0.642,3,0.492,4,0.565,5,0.693,8,0.927,9,0.722,10,0.423,11,0.821,12,1.147,13,1.147,14,1.022,15,0.905,16,0.821,18,0.357,19,0.039,20,0.565,21,0.642,22,0.642,25,0.565,27,0.031,28,0.031,151,3.069,157,3.183,158,2.907,159,4.528,160,3.542]],["title/classes/NotImplementedError.html",[0,0.144,161,2.097]],["body/classes/NotImplementedError.html",[0,0.171,2,0.642,3,0.492,4,0.565,5,0.492,8,0.927,9,0.722,10,0.423,11,0.821,12,1.147,13,1.147,14,1.022,15,0.905,16,0.821,18,0.357,19,0.039,20,0.565,21,0.642,22,0.642,25,0.565,27,0.031,28,0.031,151,3.069,161,3.183,162,2.907,163,4.528,164,4.528,165,3.542]],["title/classes/NumberNotInRangeError.html",[0,0.144,166,2.097]],["body/classes/NumberNotInRangeError.html",[0,0.166,2,0.624,3,0.478,4,0.549,5,0.478,8,0.91,9,0.709,10,0.411,11,0.806,12,1.131,13,1.131,14,1.008,15,0.893,16,0.806,18,0.347,19,0.039,20,0.549,21,0.624,22,0.893,25,0.549,27,0.03,28,0.03,133,3.649,166,3.125,167,4.042,168,2.825,169,4.445,170,4.445,171,4.445,172,3.442]],["title/classes/RequiredError.html",[0,0.144,173,2.097]],["body/classes/RequiredError.html",[0,0.195,2,0.735,3,0.562,4,0.646,5,0.562,8,1.008,9,0.785,15,0.962,16,0.735,19,0.039,25,0.646,27,0.034,28,0.034,173,3.462,174,3.326,175,4.052,176,4.052]],["title/interfaces/Type.html",[18,0.301,73,1.625]],["body/interfaces/Type.html",[0,0.2,3,0.575,4,0.661,5,0.575,15,0.751,18,0.54,19,0.038,25,0.661,27,0.034,28,0.034,73,2.256,75,2.256,177,3.402,178,3.402,179,3.402,180,4.992,181,3.402]],["title/coverage.html",[182,3.32]],["body/coverage.html",[0,0.19,1,0.474,5,0.094,6,0.553,7,0.553,18,0.587,19,0.04,27,0.008,28,0.008,29,0.474,30,0.855,31,0.553,36,0.474,37,0.553,41,0.474,42,1.023,43,0.553,48,0.474,49,0.474,50,0.553,55,0.474,56,0.553,60,0.474,61,0.553,62,0.855,67,0.474,68,0.553,69,0.553,73,0.663,74,0.414,76,0.855,80,0.474,83,0.553,87,0.474,91,0.553,124,0.553,141,4.802,144,0.474,145,0.553,146,0.553,150,0.474,151,1.023,152,0.553,153,0.553,157,0.474,158,0.553,161,0.474,162,0.553,166,0.474,167,0.553,168,0.553,173,0.474,174,0.553,177,0.553,179,0.553,182,0.553,183,0.553,184,0.674,185,0.674,186,0.674,187,5.811,188,0.674,189,5.79,190,1.217,191,0.674,192,0.674,193,0.674,194,0.674,195,0.674,196,0.674,197,0.674,198,0.674,199,0.674,200,3.707,201,3.707,202,1.217,203,0.674,204,0.674,205,0.674,206,0.674,207,2.038,208,0.674,209,0.674,210,1.664,211,0.674,212,0.674,213,0.674,214,0.674,215,0.674,216,0.674,217,2.357,218,0.674,219,0.674,220,0.674,221,0.553,222,0.674,223,0.553,224,0.674,225,0.553,226,3.828,227,0.674,228,1.935,229,2.357,230,0.553,231,0.553,232,0.553,233,0.553,234,0.553,235,0.674,236,3.077,237,3.077,238,0.674,239,0.674,240,0.674,241,0.674,242,0.674,243,0.674,244,0.674,245,0.674,246,0.674,247,0.674,248,0.674,249,0.674,250,0.674,251,0.674,252,0.674,253,0.674,254,0.674,255,0.674,256,0.674,257,0.674,258,0.674,259,0.674,260,0.674,261,0.674,262,0.674,263,0.674,264,4.914,265,0.674,266,0.674,267,0.674,268,0.674,269,0.674,270,0.674,271,0.674,272,0.674,273,0.674,274,0.674,275,0.674,276,0.674,277,0.674,278,0.674,279,0.674,280,0.674,281,0.674,282,0.674,283,0.674,284,0.674,285,0.674,286,0.674,287,0.674,288,0.674,289,0.674,290,0.674,291,0.674,292,0.674,293,0.674,294,1.217,295,0.674,296,1.217,297,0.674,298,0.674,299,0.674,300,0.674,301,1.217,302,0.674,303,0.674,304,0.674,305,0.674,306,4.496,307,4.496,308,0.674,309,0.674,310,0.674,311,0.674,312,0.674,313,0.674,314,0.674,315,0.674,316,0.674,317,0.674,318,0.674,319,0.674,320,0.674,321,0.674,322,0.674,323,0.674,324,0.674,325,0.674,326,0.674,327,0.674,328,0.674,329,0.674,330,0.674,331,0.674,332,0.674,333,0.674,334,0.674,335,0.674,336,0.674,337,0.674,338,0.674,339,0.674,340,0.674,341,0.674,342,0.674,343,1.217,344,0.674,345,0.674,346,1.217,347,0.674,348,0.674,349,0.674,350,0.674]],["title/dependencies.html",[351,2.056,352,2.939]],["body/dependencies.html",[19,0.038,27,0.036,28,0.036,352,3.718,353,4.529,354,4.529]],["title/miscellaneous/enumerations.html",[355,1.217,356,2.939]],["body/miscellaneous/enumerations.html",[3,0.677,9,0.854,10,0.403,19,0.041,27,0.03,28,0.03,74,2.077,76,2.375,78,2.773,79,4.398,80,3.088,81,4.242,86,2.375,130,3.606,134,2.773,135,2.773,137,2.773,138,2.773,355,1.642,356,2.773,357,3.378,358,3.378]],["title/miscellaneous/functions.html",[355,1.217,359,2.939]],["body/miscellaneous/functions.html",[10,0.379,18,0.425,19,0.039,20,0.672,21,0.952,22,0.952,27,0.029,28,0.029,85,4.309,86,3.69,87,3.69,88,2.605,181,2.605,228,2.605,230,3.46,231,3.46,232,3.46,233,3.46,234,3.46,355,1.542,359,2.605,360,5.249,361,3.173,362,5.249,363,3.173,364,3.173,365,3.173,366,3.173,367,3.173,368,4.733,369,3.173]],["title/index.html",[10,0.299,370,2.505,371,2.505]],["body/index.html",[19,0.035,27,0.035,28,0.035,75,2.392,183,4.508,372,4.393,373,3.606,374,3.606,375,3.606,376,4.393]],["title/modules.html",[377,3.32]],["body/modules.html",[19,0.036,27,0.036,28,0.036,377,3.788]],["title/overview.html",[378,3.32]],["body/overview.html",[2,0.816,19,0.036,27,0.036,28,0.036,75,2.451,378,3.695,379,4.501,380,4.501]],["title/properties.html",[11,0.649,351,2.056]],["body/properties.html",[11,0.719,19,0.04,27,0.033,28,0.033,75,2.159,123,3.254,178,3.254,221,3.254,373,3.989,374,3.254,375,3.254,381,3.964,382,3.964,383,3.964,384,3.964,385,3.964,386,3.964,387,3.964,388,3.964,389,3.964,390,3.964,391,3.964]],["title/miscellaneous/variables.html",[355,1.217,392,2.939]],["body/miscellaneous/variables.html",[10,0.494,18,0.418,19,0.039,20,0.661,21,0.751,22,0.751,27,0.034,28,0.034,223,3.402,225,4.098,355,2.014,392,3.402,393,4.144,394,4.144,395,4.144,396,4.144,397,4.144,398,4.144]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"classes/AccessDeniedError.html":{},"classes/EmptyArrayError.html":{},"classes/EmptyObjectError.html":{},"classes/InvalidInputError.html":{},"classes/InvalidPropertyTypeError.html":{},"classes/InvalidSchemaError.html":{},"classes/ItemNotFoundError.html":{},"classes/KeyNotFoundError.html":{},"interfaces/Logger.html":{},"classes/MissingPropertyError.html":{},"classes/NotAbsolutePathError.html":{},"classes/NotFileError.html":{},"classes/NotImplementedError.html":{},"classes/NumberNotInRangeError.html":{},"classes/RequiredError.html":{},"interfaces/Type.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":141,"title":{},"body":{"interfaces/Logger.html":{},"coverage.html":{}}}],["0.5.11",{"_index":354,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":189,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":235,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":227,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":226,"title":{},"body":{"coverage.html":{}}}],["1/1",{"_index":201,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":200,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":379,"title":{},"body":{"overview.html":{}}}],["2",{"_index":380,"title":{},"body":{"overview.html":{}}}],["9.5.2",{"_index":381,"title":{},"body":{"properties.html":{}}}],["__jsonschema",{"_index":238,"title":{},"body":{"coverage.html":{}}}],["absolute",{"_index":152,"title":{},"body":{"classes/NotAbsolutePathError.html":{},"coverage.html":{}}}],["access",{"_index":23,"title":{},"body":{"classes/AccessDeniedError.html":{}}}],["accessdeniederror",{"_index":1,"title":{"classes/AccessDeniedError.html":{}},"body":{"classes/AccessDeniedError.html":{},"coverage.html":{}}}],["alias",{"_index":187,"title":{},"body":{"coverage.html":{}}}],["alphabet",{"_index":341,"title":{},"body":{"coverage.html":{}}}],["applications",{"_index":375,"title":{},"body":{"index.html":{},"properties.html":{}}}],["appname",{"_index":125,"title":{},"body":{"interfaces/Logger.html":{}}}],["args",{"_index":180,"title":{},"body":{"interfaces/Type.html":{}}}],["arr",{"_index":230,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["arr(defaultvalue",{"_index":361,"title":{},"body":{"miscellaneous/functions.html":{}}}],["array",{"_index":33,"title":{},"body":{"classes/EmptyArrayError.html":{}}}],["array.ts",{"_index":31,"title":{},"body":{"classes/EmptyArrayError.html":{},"coverage.html":{}}}],["array.ts:5",{"_index":32,"title":{},"body":{"classes/EmptyArrayError.html":{}}}],["arrayoptions",{"_index":265,"title":{},"body":{"coverage.html":{}}}],["arrayschema",{"_index":239,"title":{},"body":{"coverage.html":{}}}],["arrayschemaraw",{"_index":247,"title":{},"body":{"coverage.html":{}}}],["asyncmapper",{"_index":344,"title":{},"body":{"coverage.html":{}}}],["asyncpredicate",{"_index":347,"title":{},"body":{"coverage.html":{}}}],["author",{"_index":389,"title":{},"body":{"properties.html":{}}}],["behaviour",{"_index":135,"title":{},"body":{"interfaces/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["binary",{"_index":308,"title":{},"body":{"coverage.html":{}}}],["bloodpresure",{"_index":309,"title":{},"body":{"coverage.html":{}}}],["bool",{"_index":231,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["bool(defaultvalue",{"_index":363,"title":{},"body":{"miscellaneous/functions.html":{}}}],["booleanoptions",{"_index":266,"title":{},"body":{"coverage.html":{}}}],["booleanschema",{"_index":240,"title":{},"body":{"coverage.html":{}}}],["booleanschemaraw",{"_index":249,"title":{},"body":{"coverage.html":{}}}],["brightline",{"_index":391,"title":{},"body":{"properties.html":{}}}],["byte",{"_index":302,"title":{},"body":{"coverage.html":{}}}],["change",{"_index":188,"title":{},"body":{"coverage.html":{}}}],["class",{"_index":0,"title":{"classes/AccessDeniedError.html":{},"classes/EmptyArrayError.html":{},"classes/EmptyObjectError.html":{},"classes/InvalidInputError.html":{},"classes/InvalidPropertyTypeError.html":{},"classes/InvalidSchemaError.html":{},"classes/ItemNotFoundError.html":{},"classes/KeyNotFoundError.html":{},"classes/MissingPropertyError.html":{},"classes/NotAbsolutePathError.html":{},"classes/NotFileError.html":{},"classes/NotImplementedError.html":{},"classes/NumberNotInRangeError.html":{},"classes/RequiredError.html":{}},"body":{"classes/AccessDeniedError.html":{},"classes/EmptyArrayError.html":{},"classes/EmptyObjectError.html":{},"classes/InvalidInputError.html":{},"classes/InvalidPropertyTypeError.html":{},"classes/InvalidSchemaError.html":{},"classes/ItemNotFoundError.html":{},"classes/KeyNotFoundError.html":{},"classes/MissingPropertyError.html":{},"classes/NotAbsolutePathError.html":{},"classes/NotFileError.html":{},"classes/NotImplementedError.html":{},"classes/NumberNotInRangeError.html":{},"classes/RequiredError.html":{},"interfaces/Type.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AccessDeniedError.html":{},"classes/EmptyArrayError.html":{},"classes/EmptyObjectError.html":{},"classes/InvalidInputError.html":{},"classes/InvalidPropertyTypeError.html":{},"classes/InvalidSchemaError.html":{},"classes/ItemNotFoundError.html":{},"classes/KeyNotFoundError.html":{},"classes/MissingPropertyError.html":{},"classes/NotAbsolutePathError.html":{},"classes/NotFileError.html":{},"classes/NotImplementedError.html":{},"classes/NumberNotInRangeError.html":{},"classes/RequiredError.html":{},"overview.html":{}}}],["clothingsize",{"_index":310,"title":{},"body":{"coverage.html":{}}}],["column",{"_index":299,"title":{},"body":{"coverage.html":{}}}],["common",{"_index":123,"title":{},"body":{"interfaces/Logger.html":{},"properties.html":{}}}],["commonnumberoptions",{"_index":267,"title":{},"body":{"coverage.html":{}}}],["commonpropertyoptions",{"_index":268,"title":{},"body":{"coverage.html":{}}}],["commonschema",{"_index":251,"title":{},"body":{"coverage.html":{}}}],["config.ts",{"_index":215,"title":{},"body":{"coverage.html":{}}}],["configure",{"_index":134,"title":{},"body":{"interfaces/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["constructor",{"_index":15,"title":{},"body":{"classes/AccessDeniedError.html":{},"classes/EmptyArrayError.html":{},"classes/EmptyObjectError.html":{},"classes/InvalidInputError.html":{},"classes/InvalidPropertyTypeError.html":{},"classes/InvalidSchemaError.html":{},"classes/ItemNotFoundError.html":{},"classes/KeyNotFoundError.html":{},"classes/MissingPropertyError.html":{},"classes/NotAbsolutePathError.html":{},"classes/NotFileError.html":{},"classes/NotImplementedError.html":{},"classes/NumberNotInRangeError.html":{},"classes/RequiredError.html":{},"interfaces/Type.html":{}}}],["context",{"_index":126,"title":{},"body":{"interfaces/Logger.html":{}}}],["coverage",{"_index":182,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["ct",{"_index":241,"title":{},"body":{"coverage.html":{}}}],["data",{"_index":90,"title":{},"body":{"interfaces/Logger.html":{}}}],["date",{"_index":128,"title":{},"body":{"interfaces/Logger.html":{}}}],["dateoptions",{"_index":269,"title":{},"body":{"coverage.html":{}}}],["debug",{"_index":78,"title":{},"body":{"interfaces/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["debug(message",{"_index":82,"title":{},"body":{"interfaces/Logger.html":{}}}],["debug(title",{"_index":94,"title":{},"body":{"interfaces/Logger.html":{}}}],["default",{"_index":21,"title":{},"body":{"classes/AccessDeniedError.html":{},"classes/EmptyArrayError.html":{},"classes/EmptyObjectError.html":{},"classes/InvalidInputError.html":{},"classes/InvalidPropertyTypeError.html":{},"classes/InvalidSchemaError.html":{},"classes/ItemNotFoundError.html":{},"classes/KeyNotFoundError.html":{},"classes/MissingPropertyError.html":{},"classes/NotAbsolutePathError.html":{},"classes/NotFileError.html":{},"classes/NotImplementedError.html":{},"classes/NumberNotInRangeError.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defaultvalue",{"_index":362,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defined",{"_index":16,"title":{},"body":{"classes/AccessDeniedError.html":{},"classes/EmptyArrayError.html":{},"classes/EmptyObjectError.html":{},"classes/InvalidInputError.html":{},"classes/InvalidPropertyTypeError.html":{},"classes/InvalidSchemaError.html":{},"classes/ItemNotFoundError.html":{},"classes/KeyNotFoundError.html":{},"interfaces/Logger.html":{},"classes/MissingPropertyError.html":{},"classes/NotAbsolutePathError.html":{},"classes/NotFileError.html":{},"classes/NotImplementedError.html":{},"classes/NumberNotInRangeError.html":{},"classes/RequiredError.html":{}}}],["denied",{"_index":24,"title":{},"body":{"classes/AccessDeniedError.html":{}}}],["denied.error.ts",{"_index":7,"title":{},"body":{"classes/AccessDeniedError.html":{},"coverage.html":{}}}],["denied.error.ts:2",{"_index":17,"title":{},"body":{"classes/AccessDeniedError.html":{}}}],["dependencies",{"_index":352,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":178,"title":{},"body":{"interfaces/Type.html":{},"properties.html":{}}}],["detailed",{"_index":376,"title":{},"body":{"index.html":{}}}],["digit",{"_index":311,"title":{},"body":{"coverage.html":{}}}],["display",{"_index":137,"title":{},"body":{"interfaces/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["documentation",{"_index":183,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dto",{"_index":270,"title":{},"body":{"coverage.html":{}}}],["empty",{"_index":34,"title":{},"body":{"classes/EmptyArrayError.html":{},"classes/EmptyObjectError.html":{}}}],["emptyarrayerror",{"_index":29,"title":{"classes/EmptyArrayError.html":{}},"body":{"classes/EmptyArrayError.html":{},"coverage.html":{}}}],["emptyobjecterror",{"_index":36,"title":{"classes/EmptyObjectError.html":{}},"body":{"classes/EmptyObjectError.html":{},"coverage.html":{}}}],["encryption",{"_index":271,"title":{},"body":{"coverage.html":{}}}],["enum",{"_index":139,"title":{},"body":{"interfaces/Logger.html":{}}}],["enumerate",{"_index":312,"title":{},"body":{"coverage.html":{}}}],["enumerations",{"_index":356,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":9,"title":{},"body":{"classes/AccessDeniedError.html":{},"classes/EmptyArrayError.html":{},"classes/EmptyObjectError.html":{},"classes/InvalidInputError.html":{},"classes/InvalidPropertyTypeError.html":{},"classes/InvalidSchemaError.html":{},"classes/ItemNotFoundError.html":{},"classes/KeyNotFoundError.html":{},"interfaces/Logger.html":{},"classes/MissingPropertyError.html":{},"classes/NotAbsolutePathError.html":{},"classes/NotFileError.html":{},"classes/NotImplementedError.html":{},"classes/NumberNotInRangeError.html":{},"classes/RequiredError.html":{},"miscellaneous/enumerations.html":{}}}],["error(message",{"_index":97,"title":{},"body":{"interfaces/Logger.html":{}}}],["error(title",{"_index":100,"title":{},"body":{"interfaces/Logger.html":{}}}],["everthing",{"_index":142,"title":{},"body":{"interfaces/Logger.html":{}}}],["everything",{"_index":140,"title":{},"body":{"interfaces/Logger.html":{}}}],["example",{"_index":358,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["excluding",{"_index":143,"title":{},"body":{"interfaces/Logger.html":{}}}],["exist",{"_index":70,"title":{},"body":{"classes/KeyNotFoundError.html":{}}}],["export",{"_index":25,"title":{},"body":{"classes/AccessDeniedError.html":{},"classes/EmptyArrayError.html":{},"classes/EmptyObjectError.html":{},"classes/InvalidInputError.html":{},"classes/InvalidPropertyTypeError.html":{},"classes/InvalidSchemaError.html":{},"classes/ItemNotFoundError.html":{},"classes/KeyNotFoundError.html":{},"interfaces/Logger.html":{},"classes/MissingPropertyError.html":{},"classes/NotAbsolutePathError.html":{},"classes/NotFileError.html":{},"classes/NotImplementedError.html":{},"classes/NumberNotInRangeError.html":{},"classes/RequiredError.html":{},"interfaces/Type.html":{}}}],["extends",{"_index":8,"title":{},"body":{"classes/AccessDeniedError.html":{},"classes/EmptyArrayError.html":{},"classes/EmptyObjectError.html":{},"classes/InvalidInputError.html":{},"classes/InvalidPropertyTypeError.html":{},"classes/InvalidSchemaError.html":{},"classes/ItemNotFoundError.html":{},"classes/KeyNotFoundError.html":{},"classes/MissingPropertyError.html":{},"classes/NotAbsolutePathError.html":{},"classes/NotFileError.html":{},"classes/NotImplementedError.html":{},"classes/NumberNotInRangeError.html":{},"classes/RequiredError.html":{}}}],["extraschema",{"_index":253,"title":{},"body":{"coverage.html":{}}}],["false",{"_index":364,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fata",{"_index":138,"title":{},"body":{"interfaces/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["fatal",{"_index":79,"title":{},"body":{"interfaces/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["fatal(message",{"_index":102,"title":{},"body":{"interfaces/Logger.html":{}}}],["fatal(title",{"_index":105,"title":{},"body":{"interfaces/Logger.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AccessDeniedError.html":{},"classes/EmptyArrayError.html":{},"classes/EmptyObjectError.html":{},"classes/InvalidInputError.html":{},"classes/InvalidPropertyTypeError.html":{},"classes/InvalidSchemaError.html":{},"classes/ItemNotFoundError.html":{},"classes/KeyNotFoundError.html":{},"interfaces/Logger.html":{},"classes/MissingPropertyError.html":{},"classes/NotAbsolutePathError.html":{},"classes/NotFileError.html":{},"classes/NotImplementedError.html":{},"classes/NumberNotInRangeError.html":{},"classes/RequiredError.html":{},"interfaces/Type.html":{},"coverage.html":{}}}],["file.error.ts",{"_index":158,"title":{},"body":{"classes/NotFileError.html":{},"coverage.html":{}}}],["file.error.ts:2",{"_index":159,"title":{},"body":{"classes/NotFileError.html":{}}}],["found",{"_index":65,"title":{},"body":{"classes/ItemNotFoundError.html":{}}}],["found.error.ts",{"_index":62,"title":{},"body":{"classes/ItemNotFoundError.html":{},"classes/KeyNotFoundError.html":{},"coverage.html":{}}}],["found.error.ts:2",{"_index":63,"title":{},"body":{"classes/ItemNotFoundError.html":{},"classes/KeyNotFoundError.html":{}}}],["fraction",{"_index":305,"title":{},"body":{"coverage.html":{}}}],["function",{"_index":229,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":359,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["general",{"_index":272,"title":{},"body":{"coverage.html":{}}}],["getting",{"_index":370,"title":{"index.html":{}},"body":{}}],["goldenball",{"_index":313,"title":{},"body":{"coverage.html":{}}}],["homepage",{"_index":383,"title":{},"body":{"properties.html":{}}}],["hour",{"_index":314,"title":{},"body":{"coverage.html":{}}}],["https://github.com/rbrightline/common/tree/main/libs/type",{"_index":388,"title":{},"body":{"properties.html":{}}}],["https://rbrightline.github.io/common/type",{"_index":384,"title":{},"body":{"properties.html":{}}}],["humanage",{"_index":315,"title":{},"body":{"coverage.html":{}}}],["iconoptions",{"_index":273,"title":{},"body":{"coverage.html":{}}}],["identifier",{"_index":184,"title":{},"body":{"coverage.html":{}}}],["implemented",{"_index":164,"title":{},"body":{"classes/NotImplementedError.html":{}}}],["implemented.ts",{"_index":162,"title":{},"body":{"classes/NotImplementedError.html":{},"coverage.html":{}}}],["implemented.ts:2",{"_index":163,"title":{},"body":{"classes/NotImplementedError.html":{}}}],["import",{"_index":122,"title":{},"body":{"interfaces/Logger.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"classes/AccessDeniedError.html":{},"classes/EmptyArrayError.html":{},"classes/EmptyObjectError.html":{},"classes/InvalidInputError.html":{},"classes/InvalidPropertyTypeError.html":{},"classes/InvalidSchemaError.html":{},"classes/ItemNotFoundError.html":{},"classes/KeyNotFoundError.html":{},"interfaces/Logger.html":{},"classes/MissingPropertyError.html":{},"classes/NotAbsolutePathError.html":{},"classes/NotFileError.html":{},"classes/NotImplementedError.html":{},"classes/NumberNotInRangeError.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AccessDeniedError.html":{},"classes/EmptyArrayError.html":{},"classes/EmptyObjectError.html":{},"classes/InvalidInputError.html":{},"classes/InvalidPropertyTypeError.html":{},"classes/InvalidSchemaError.html":{},"classes/ItemNotFoundError.html":{},"classes/KeyNotFoundError.html":{},"interfaces/Logger.html":{},"classes/MissingPropertyError.html":{},"classes/NotAbsolutePathError.html":{},"classes/NotFileError.html":{},"classes/NotImplementedError.html":{},"classes/NumberNotInRangeError.html":{},"classes/RequiredError.html":{},"interfaces/Type.html":{},"miscellaneous/enumerations.html":{}}}],["info(message",{"_index":107,"title":{},"body":{"interfaces/Logger.html":{}}}],["info(title",{"_index":110,"title":{},"body":{"interfaces/Logger.html":{}}}],["input",{"_index":46,"title":{},"body":{"classes/InvalidInputError.html":{}}}],["input.error.ts",{"_index":43,"title":{},"body":{"classes/InvalidInputError.html":{},"coverage.html":{}}}],["input.error.ts:2",{"_index":44,"title":{},"body":{"classes/InvalidInputError.html":{}}}],["inputtypeoptions",{"_index":274,"title":{},"body":{"coverage.html":{}}}],["integeroptions",{"_index":275,"title":{},"body":{"coverage.html":{}}}],["interface",{"_index":73,"title":{"interfaces/Logger.html":{},"interfaces/Type.html":{}},"body":{"interfaces/Logger.html":{},"interfaces/Type.html":{},"coverage.html":{}}}],["interfaces",{"_index":75,"title":{},"body":{"interfaces/Logger.html":{},"interfaces/Type.html":{},"index.html":{},"overview.html":{},"properties.html":{}}}],["intergerpropertyoptionsraw",{"_index":276,"title":{},"body":{"coverage.html":{}}}],["intrange",{"_index":316,"title":{},"body":{"coverage.html":{}}}],["invalid",{"_index":45,"title":{},"body":{"classes/InvalidInputError.html":{},"classes/InvalidPropertyTypeError.html":{},"classes/InvalidSchemaError.html":{}}}],["invalidinputerror",{"_index":41,"title":{"classes/InvalidInputError.html":{}},"body":{"classes/InvalidInputError.html":{},"coverage.html":{}}}],["invalidpropertytypeerror",{"_index":48,"title":{"classes/InvalidPropertyTypeError.html":{}},"body":{"classes/InvalidPropertyTypeError.html":{},"coverage.html":{}}}],["invalidschemaerror",{"_index":55,"title":{"classes/InvalidSchemaError.html":{}},"body":{"classes/InvalidSchemaError.html":{},"coverage.html":{}}}],["ip",{"_index":124,"title":{},"body":{"interfaces/Logger.html":{},"coverage.html":{}}}],["item",{"_index":64,"title":{},"body":{"classes/ItemNotFoundError.html":{}}}],["itemnotfounderror",{"_index":60,"title":{"classes/ItemNotFoundError.html":{}},"body":{"classes/ItemNotFoundError.html":{},"coverage.html":{}}}],["json.ts",{"_index":196,"title":{},"body":{"coverage.html":{}}}],["jsonschema",{"_index":242,"title":{},"body":{"coverage.html":{}}}],["jsonschematype",{"_index":263,"title":{},"body":{"coverage.html":{}}}],["key",{"_index":69,"title":{},"body":{"classes/KeyNotFoundError.html":{},"coverage.html":{}}}],["keynotfounderror",{"_index":67,"title":{"classes/KeyNotFoundError.html":{}},"body":{"classes/KeyNotFoundError.html":{},"coverage.html":{}}}],["keys",{"_index":191,"title":{},"body":{"coverage.html":{}}}],["keywords",{"_index":382,"title":{},"body":{"properties.html":{}}}],["level",{"_index":129,"title":{},"body":{"interfaces/Logger.html":{}}}],["license",{"_index":385,"title":{},"body":{"properties.html":{}}}],["literal.ts",{"_index":193,"title":{},"body":{"coverage.html":{}}}],["log",{"_index":80,"title":{},"body":{"interfaces/Logger.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["log(message",{"_index":112,"title":{},"body":{"interfaces/Logger.html":{}}}],["log(title",{"_index":115,"title":{},"body":{"interfaces/Logger.html":{}}}],["logger",{"_index":74,"title":{"interfaces/Logger.html":{}},"body":{"interfaces/Logger.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["loglevel",{"_index":130,"title":{},"body":{"interfaces/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["m",{"_index":225,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["majarversion",{"_index":218,"title":{},"body":{"coverage.html":{}}}],["manage",{"_index":397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["map",{"_index":71,"title":{},"body":{"classes/KeyNotFoundError.html":{}}}],["mapper",{"_index":345,"title":{},"body":{"coverage.html":{}}}],["mark",{"_index":395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["markdown",{"_index":136,"title":{},"body":{"interfaces/Logger.html":{}}}],["matching",{"_index":28,"title":{},"body":{"classes/AccessDeniedError.html":{},"classes/EmptyArrayError.html":{},"classes/EmptyObjectError.html":{},"classes/InvalidInputError.html":{},"classes/InvalidPropertyTypeError.html":{},"classes/InvalidSchemaError.html":{},"classes/ItemNotFoundError.html":{},"classes/KeyNotFoundError.html":{},"interfaces/Logger.html":{},"classes/MissingPropertyError.html":{},"classes/NotAbsolutePathError.html":{},"classes/NotFileError.html":{},"classes/NotImplementedError.html":{},"classes/NumberNotInRangeError.html":{},"classes/RequiredError.html":{},"interfaces/Type.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["megamillion",{"_index":317,"title":{},"body":{"coverage.html":{}}}],["message",{"_index":14,"title":{},"body":{"classes/AccessDeniedError.html":{},"classes/EmptyArrayError.html":{},"classes/EmptyObjectError.html":{},"classes/InvalidInputError.html":{},"classes/InvalidPropertyTypeError.html":{},"classes/InvalidSchemaError.html":{},"classes/ItemNotFoundError.html":{},"classes/KeyNotFoundError.html":{},"interfaces/Logger.html":{},"classes/MissingPropertyError.html":{},"classes/NotAbsolutePathError.html":{},"classes/NotFileError.html":{},"classes/NotImplementedError.html":{},"classes/NumberNotInRangeError.html":{}}}],["methods",{"_index":77,"title":{},"body":{"interfaces/Logger.html":{}}}],["milisecond",{"_index":318,"title":{},"body":{"coverage.html":{}}}],["minorversion",{"_index":219,"title":{},"body":{"coverage.html":{}}}],["minute",{"_index":319,"title":{},"body":{"coverage.html":{}}}],["miscellaneous",{"_index":355,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":148,"title":{},"body":{"classes/MissingPropertyError.html":{}}}],["missingpropertyerror",{"_index":144,"title":{"classes/MissingPropertyError.html":{}},"body":{"classes/MissingPropertyError.html":{},"coverage.html":{}}}],["mit",{"_index":386,"title":{},"body":{"properties.html":{}}}],["modelnameoptions",{"_index":277,"title":{},"body":{"coverage.html":{}}}],["modeloptions",{"_index":278,"title":{},"body":{"coverage.html":{}}}],["modules",{"_index":377,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monthday",{"_index":320,"title":{},"body":{"coverage.html":{}}}],["name",{"_index":86,"title":{},"body":{"interfaces/Logger.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["nan",{"_index":366,"title":{},"body":{"miscellaneous/functions.html":{}}}],["new",{"_index":179,"title":{},"body":{"interfaces/Type.html":{},"coverage.html":{}}}],["notabsolutepatherror",{"_index":150,"title":{"classes/NotAbsolutePathError.html":{}},"body":{"classes/NotAbsolutePathError.html":{},"coverage.html":{}}}],["notfileerror",{"_index":157,"title":{"classes/NotFileError.html":{}},"body":{"classes/NotFileError.html":{},"coverage.html":{}}}],["notimplementederror",{"_index":161,"title":{"classes/NotImplementedError.html":{}},"body":{"classes/NotImplementedError.html":{},"coverage.html":{}}}],["null",{"_index":368,"title":{},"body":{"miscellaneous/functions.html":{}}}],["num",{"_index":232,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["num(defaultvalue",{"_index":365,"title":{},"body":{"miscellaneous/functions.html":{}}}],["number",{"_index":133,"title":{},"body":{"interfaces/Logger.html":{},"classes/NumberNotInRangeError.html":{}}}],["numberformatoptions",{"_index":279,"title":{},"body":{"coverage.html":{}}}],["numbernotinrangeerror",{"_index":166,"title":{"classes/NumberNotInRangeError.html":{}},"body":{"classes/NumberNotInRangeError.html":{},"coverage.html":{}}}],["numberoptions",{"_index":280,"title":{},"body":{"coverage.html":{}}}],["numberpattern",{"_index":332,"title":{},"body":{"coverage.html":{}}}],["numberschema",{"_index":243,"title":{},"body":{"coverage.html":{}}}],["numberschemaraw",{"_index":255,"title":{},"body":{"coverage.html":{}}}],["obj",{"_index":233,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["obj(defaultvalue",{"_index":367,"title":{},"body":{"miscellaneous/functions.html":{}}}],["object",{"_index":39,"title":{},"body":{"classes/EmptyObjectError.html":{},"interfaces/Logger.html":{}}}],["object.error.ts",{"_index":37,"title":{},"body":{"classes/EmptyObjectError.html":{},"coverage.html":{}}}],["object.error.ts:2",{"_index":38,"title":{},"body":{"classes/EmptyObjectError.html":{}}}],["objectliteral",{"_index":91,"title":{},"body":{"interfaces/Logger.html":{},"coverage.html":{}}}],["objectoptions",{"_index":281,"title":{},"body":{"coverage.html":{}}}],["objectschema",{"_index":244,"title":{},"body":{"coverage.html":{}}}],["objectschemaraw",{"_index":257,"title":{},"body":{"coverage.html":{}}}],["ondelete",{"_index":282,"title":{},"body":{"coverage.html":{}}}],["onupdate",{"_index":283,"title":{},"body":{"coverage.html":{}}}],["option.ts",{"_index":208,"title":{},"body":{"coverage.html":{}}}],["optional",{"_index":87,"title":{},"body":{"interfaces/Logger.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["optional.ts",{"_index":203,"title":{},"body":{"coverage.html":{}}}],["options.ts",{"_index":296,"title":{},"body":{"coverage.html":{}}}],["overview",{"_index":378,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":351,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["packagejson",{"_index":197,"title":{},"body":{"coverage.html":{}}}],["pair",{"_index":199,"title":{},"body":{"coverage.html":{}}}],["parameters",{"_index":85,"title":{},"body":{"interfaces/Logger.html":{},"miscellaneous/functions.html":{}}}],["patchversion",{"_index":220,"title":{},"body":{"coverage.html":{}}}],["path",{"_index":155,"title":{},"body":{"classes/NotAbsolutePathError.html":{}}}],["path.error.ts",{"_index":153,"title":{},"body":{"classes/NotAbsolutePathError.html":{},"coverage.html":{}}}],["path.error.ts:2",{"_index":154,"title":{},"body":{"classes/NotAbsolutePathError.html":{}}}],["pattern",{"_index":334,"title":{},"body":{"coverage.html":{}}}],["pattern.ts",{"_index":336,"title":{},"body":{"coverage.html":{}}}],["percent",{"_index":321,"title":{},"body":{"coverage.html":{}}}],["pickoptional",{"_index":204,"title":{},"body":{"coverage.html":{}}}],["pickrequired",{"_index":206,"title":{},"body":{"coverage.html":{}}}],["predicate",{"_index":348,"title":{},"body":{"coverage.html":{}}}],["primitiveschemaraw",{"_index":259,"title":{},"body":{"coverage.html":{}}}],["primitivevaluetype",{"_index":211,"title":{},"body":{"coverage.html":{}}}],["properties",{"_index":11,"title":{"properties.html":{}},"body":{"classes/AccessDeniedError.html":{},"classes/EmptyArrayError.html":{},"classes/EmptyObjectError.html":{},"classes/InvalidInputError.html":{},"classes/InvalidPropertyTypeError.html":{},"classes/InvalidSchemaError.html":{},"classes/ItemNotFoundError.html":{},"classes/KeyNotFoundError.html":{},"classes/MissingPropertyError.html":{},"classes/NotAbsolutePathError.html":{},"classes/NotFileError.html":{},"classes/NotImplementedError.html":{},"classes/NumberNotInRangeError.html":{},"properties.html":{}}}],["property",{"_index":49,"title":{},"body":{"classes/InvalidPropertyTypeError.html":{},"classes/MissingPropertyError.html":{},"coverage.html":{}}}],["property.ts",{"_index":146,"title":{},"body":{"classes/MissingPropertyError.html":{},"coverage.html":{}}}],["property.ts:2",{"_index":147,"title":{},"body":{"classes/MissingPropertyError.html":{}}}],["propertynameoptions",{"_index":284,"title":{},"body":{"coverage.html":{}}}],["propertyoption",{"_index":209,"title":{},"body":{"coverage.html":{}}}],["propertyoptions",{"_index":285,"title":{},"body":{"coverage.html":{}}}],["propertytype",{"_index":212,"title":{},"body":{"coverage.html":{}}}],["propertytypeoptions",{"_index":286,"title":{},"body":{"coverage.html":{}}}],["propertyvalidationoptions",{"_index":297,"title":{},"body":{"coverage.html":{}}}],["range",{"_index":171,"title":{},"body":{"classes/NumberNotInRangeError.html":{}}}],["range.error.ts",{"_index":168,"title":{},"body":{"classes/NumberNotInRangeError.html":{},"coverage.html":{}}}],["range.error.ts:5",{"_index":169,"title":{},"body":{"classes/NumberNotInRangeError.html":{}}}],["range.ts",{"_index":307,"title":{},"body":{"coverage.html":{}}}],["rate",{"_index":322,"title":{},"body":{"coverage.html":{}}}],["readonly",{"_index":13,"title":{},"body":{"classes/AccessDeniedError.html":{},"classes/EmptyArrayError.html":{},"classes/EmptyObjectError.html":{},"classes/InvalidInputError.html":{},"classes/InvalidPropertyTypeError.html":{},"classes/InvalidSchemaError.html":{},"classes/ItemNotFoundError.html":{},"classes/KeyNotFoundError.html":{},"classes/MissingPropertyError.html":{},"classes/NotAbsolutePathError.html":{},"classes/NotFileError.html":{},"classes/NotImplementedError.html":{},"classes/NumberNotInRangeError.html":{}}}],["referencepattern",{"_index":337,"title":{},"body":{"coverage.html":{}}}],["relationcolumnoptions",{"_index":300,"title":{},"body":{"coverage.html":{}}}],["relationoptions",{"_index":287,"title":{},"body":{"coverage.html":{}}}],["relationpropertyoptionsraw",{"_index":288,"title":{},"body":{"coverage.html":{}}}],["relationtype",{"_index":289,"title":{},"body":{"coverage.html":{}}}],["repository",{"_index":387,"title":{},"body":{"properties.html":{}}}],["requestid",{"_index":132,"title":{},"body":{"interfaces/Logger.html":{}}}],["required",{"_index":170,"title":{},"body":{"classes/NumberNotInRangeError.html":{}}}],["required.ts",{"_index":205,"title":{},"body":{"coverage.html":{}}}],["requirederror",{"_index":173,"title":{"classes/RequiredError.html":{}},"body":{"classes/RequiredError.html":{},"coverage.html":{}}}],["results",{"_index":27,"title":{},"body":{"classes/AccessDeniedError.html":{},"classes/EmptyArrayError.html":{},"classes/EmptyObjectError.html":{},"classes/InvalidInputError.html":{},"classes/InvalidPropertyTypeError.html":{},"classes/InvalidSchemaError.html":{},"classes/ItemNotFoundError.html":{},"classes/KeyNotFoundError.html":{},"interfaces/Logger.html":{},"classes/MissingPropertyError.html":{},"classes/NotAbsolutePathError.html":{},"classes/NotFileError.html":{},"classes/NotImplementedError.html":{},"classes/NumberNotInRangeError.html":{},"classes/RequiredError.html":{},"interfaces/Type.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":88,"title":{},"body":{"interfaces/Logger.html":{},"miscellaneous/functions.html":{}}}],["rline/type",{"_index":372,"title":{},"body":{"index.html":{}}}],["robert",{"_index":390,"title":{},"body":{"properties.html":{}}}],["sbyte",{"_index":303,"title":{},"body":{"coverage.html":{}}}],["schema",{"_index":58,"title":{},"body":{"classes/InvalidSchemaError.html":{}}}],["schema.error.ts",{"_index":56,"title":{},"body":{"classes/InvalidSchemaError.html":{},"coverage.html":{}}}],["schema.error.ts:2",{"_index":57,"title":{},"body":{"classes/InvalidSchemaError.html":{}}}],["schema.ts",{"_index":237,"title":{},"body":{"coverage.html":{}}}],["schemaconfig",{"_index":216,"title":{},"body":{"coverage.html":{}}}],["second",{"_index":323,"title":{},"body":{"coverage.html":{}}}],["shoesize",{"_index":324,"title":{},"body":{"coverage.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AccessDeniedError.html":{},"classes/EmptyArrayError.html":{},"classes/EmptyObjectError.html":{},"classes/InvalidInputError.html":{},"classes/InvalidPropertyTypeError.html":{},"classes/InvalidSchemaError.html":{},"classes/ItemNotFoundError.html":{},"classes/KeyNotFoundError.html":{},"interfaces/Logger.html":{},"classes/MissingPropertyError.html":{},"classes/NotAbsolutePathError.html":{},"classes/NotFileError.html":{},"classes/NotImplementedError.html":{},"classes/NumberNotInRangeError.html":{},"classes/RequiredError.html":{},"interfaces/Type.html":{}}}],["speedlimit",{"_index":325,"title":{},"body":{"coverage.html":{}}}],["src/.../logger.ts",{"_index":357,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../mark.ts",{"_index":393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../primitive.ts",{"_index":360,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/lib/common/change.ts",{"_index":186,"title":{},"body":{"coverage.html":{}}}],["src/lib/common/keys.ts",{"_index":190,"title":{},"body":{"coverage.html":{}}}],["src/lib/common/object",{"_index":192,"title":{},"body":{"coverage.html":{}}}],["src/lib/common/optional.ts",{"_index":194,"title":{},"body":{"coverage.html":{}}}],["src/lib/common/package",{"_index":195,"title":{},"body":{"coverage.html":{}}}],["src/lib/common/pair.ts",{"_index":198,"title":{},"body":{"coverage.html":{}}}],["src/lib/common/pick",{"_index":202,"title":{},"body":{"coverage.html":{}}}],["src/lib/common/property",{"_index":207,"title":{},"body":{"coverage.html":{}}}],["src/lib/common/schema",{"_index":214,"title":{},"body":{"coverage.html":{}}}],["src/lib/common/type.ts",{"_index":177,"title":{},"body":{"interfaces/Type.html":{},"coverage.html":{}}}],["src/lib/common/version.ts",{"_index":217,"title":{},"body":{"coverage.html":{}}}],["src/lib/constant/mark.ts",{"_index":223,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/errors/access",{"_index":6,"title":{},"body":{"classes/AccessDeniedError.html":{},"coverage.html":{}}}],["src/lib/errors/empty",{"_index":30,"title":{},"body":{"classes/EmptyArrayError.html":{},"classes/EmptyObjectError.html":{},"coverage.html":{}}}],["src/lib/errors/invalid",{"_index":42,"title":{},"body":{"classes/InvalidInputError.html":{},"classes/InvalidPropertyTypeError.html":{},"classes/InvalidSchemaError.html":{},"coverage.html":{}}}],["src/lib/errors/item",{"_index":61,"title":{},"body":{"classes/ItemNotFoundError.html":{},"coverage.html":{}}}],["src/lib/errors/key",{"_index":68,"title":{},"body":{"classes/KeyNotFoundError.html":{},"coverage.html":{}}}],["src/lib/errors/missing",{"_index":145,"title":{},"body":{"classes/MissingPropertyError.html":{},"coverage.html":{}}}],["src/lib/errors/not",{"_index":151,"title":{},"body":{"classes/NotAbsolutePathError.html":{},"classes/NotFileError.html":{},"classes/NotImplementedError.html":{},"coverage.html":{}}}],["src/lib/errors/number",{"_index":167,"title":{},"body":{"classes/NumberNotInRangeError.html":{},"coverage.html":{}}}],["src/lib/errors/required.error.ts",{"_index":174,"title":{},"body":{"classes/RequiredError.html":{},"coverage.html":{}}}],["src/lib/errors/required.error.ts:4",{"_index":175,"title":{},"body":{"classes/RequiredError.html":{}}}],["src/lib/initialize/primitive.ts",{"_index":228,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/interfaces/logger.ts",{"_index":76,"title":{},"body":{"interfaces/Logger.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/lib/interfaces/logger.ts:65",{"_index":113,"title":{},"body":{"interfaces/Logger.html":{}}}],["src/lib/interfaces/logger.ts:66",{"_index":114,"title":{},"body":{"interfaces/Logger.html":{}}}],["src/lib/interfaces/logger.ts:67",{"_index":116,"title":{},"body":{"interfaces/Logger.html":{}}}],["src/lib/interfaces/logger.ts:69",{"_index":98,"title":{},"body":{"interfaces/Logger.html":{}}}],["src/lib/interfaces/logger.ts:70",{"_index":99,"title":{},"body":{"interfaces/Logger.html":{}}}],["src/lib/interfaces/logger.ts:71",{"_index":101,"title":{},"body":{"interfaces/Logger.html":{}}}],["src/lib/interfaces/logger.ts:73",{"_index":108,"title":{},"body":{"interfaces/Logger.html":{}}}],["src/lib/interfaces/logger.ts:74",{"_index":109,"title":{},"body":{"interfaces/Logger.html":{}}}],["src/lib/interfaces/logger.ts:75",{"_index":111,"title":{},"body":{"interfaces/Logger.html":{}}}],["src/lib/interfaces/logger.ts:77",{"_index":118,"title":{},"body":{"interfaces/Logger.html":{}}}],["src/lib/interfaces/logger.ts:78",{"_index":119,"title":{},"body":{"interfaces/Logger.html":{}}}],["src/lib/interfaces/logger.ts:79",{"_index":121,"title":{},"body":{"interfaces/Logger.html":{}}}],["src/lib/interfaces/logger.ts:81",{"_index":103,"title":{},"body":{"interfaces/Logger.html":{}}}],["src/lib/interfaces/logger.ts:82",{"_index":104,"title":{},"body":{"interfaces/Logger.html":{}}}],["src/lib/interfaces/logger.ts:83",{"_index":106,"title":{},"body":{"interfaces/Logger.html":{}}}],["src/lib/interfaces/logger.ts:85",{"_index":84,"title":{},"body":{"interfaces/Logger.html":{}}}],["src/lib/interfaces/logger.ts:86",{"_index":92,"title":{},"body":{"interfaces/Logger.html":{}}}],["src/lib/interfaces/logger.ts:87",{"_index":95,"title":{},"body":{"interfaces/Logger.html":{}}}],["src/lib/json/json",{"_index":236,"title":{},"body":{"coverage.html":{}}}],["src/lib/json/raw/array.ts",{"_index":246,"title":{},"body":{"coverage.html":{}}}],["src/lib/json/raw/boolean.ts",{"_index":248,"title":{},"body":{"coverage.html":{}}}],["src/lib/json/raw/common.ts",{"_index":250,"title":{},"body":{"coverage.html":{}}}],["src/lib/json/raw/extra.ts",{"_index":252,"title":{},"body":{"coverage.html":{}}}],["src/lib/json/raw/number.ts",{"_index":254,"title":{},"body":{"coverage.html":{}}}],["src/lib/json/raw/object.ts",{"_index":256,"title":{},"body":{"coverage.html":{}}}],["src/lib/json/raw/primitive.ts",{"_index":258,"title":{},"body":{"coverage.html":{}}}],["src/lib/json/raw/string.ts",{"_index":260,"title":{},"body":{"coverage.html":{}}}],["src/lib/json/raw/type.ts",{"_index":262,"title":{},"body":{"coverage.html":{}}}],["src/lib/model/model.schema.ts",{"_index":264,"title":{},"body":{"coverage.html":{}}}],["src/lib/model/property",{"_index":295,"title":{},"body":{"coverage.html":{}}}],["src/lib/model/relation",{"_index":298,"title":{},"body":{"coverage.html":{}}}],["src/lib/num/byte.ts",{"_index":301,"title":{},"body":{"coverage.html":{}}}],["src/lib/num/fraction.ts",{"_index":304,"title":{},"body":{"coverage.html":{}}}],["src/lib/num/int",{"_index":306,"title":{},"body":{"coverage.html":{}}}],["src/lib/object/to",{"_index":329,"title":{},"body":{"coverage.html":{}}}],["src/lib/pattern/number.pattern.ts",{"_index":331,"title":{},"body":{"coverage.html":{}}}],["src/lib/pattern/pattern.ts",{"_index":333,"title":{},"body":{"coverage.html":{}}}],["src/lib/pattern/reference",{"_index":335,"title":{},"body":{"coverage.html":{}}}],["src/lib/pattern/string.pattern.ts",{"_index":338,"title":{},"body":{"coverage.html":{}}}],["src/lib/string/alphabet.ts",{"_index":340,"title":{},"body":{"coverage.html":{}}}],["src/lib/string/ip.ts",{"_index":342,"title":{},"body":{"coverage.html":{}}}],["src/lib/workflow/mapper.ts",{"_index":343,"title":{},"body":{"coverage.html":{}}}],["src/lib/workflow/predicate.ts",{"_index":346,"title":{},"body":{"coverage.html":{}}}],["started",{"_index":371,"title":{"index.html":{}},"body":{}}],["statements",{"_index":185,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":12,"title":{},"body":{"classes/AccessDeniedError.html":{},"classes/EmptyArrayError.html":{},"classes/EmptyObjectError.html":{},"classes/InvalidInputError.html":{},"classes/InvalidPropertyTypeError.html":{},"classes/InvalidSchemaError.html":{},"classes/ItemNotFoundError.html":{},"classes/KeyNotFoundError.html":{},"classes/MissingPropertyError.html":{},"classes/NotAbsolutePathError.html":{},"classes/NotFileError.html":{},"classes/NotImplementedError.html":{},"classes/NumberNotInRangeError.html":{}}}],["str",{"_index":234,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["str(defaultvalue",{"_index":369,"title":{},"body":{"miscellaneous/functions.html":{}}}],["string",{"_index":20,"title":{},"body":{"classes/AccessDeniedError.html":{},"classes/EmptyArrayError.html":{},"classes/EmptyObjectError.html":{},"classes/InvalidInputError.html":{},"classes/InvalidPropertyTypeError.html":{},"classes/InvalidSchemaError.html":{},"classes/ItemNotFoundError.html":{},"classes/KeyNotFoundError.html":{},"interfaces/Logger.html":{},"classes/MissingPropertyError.html":{},"classes/NotAbsolutePathError.html":{},"classes/NotFileError.html":{},"classes/NotImplementedError.html":{},"classes/NumberNotInRangeError.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["string,number,boolean,object,date,array",{"_index":52,"title":{},"body":{"classes/InvalidPropertyTypeError.html":{}}}],["string.ts",{"_index":330,"title":{},"body":{"coverage.html":{}}}],["stringformatoptions",{"_index":290,"title":{},"body":{"coverage.html":{}}}],["stringoptions",{"_index":291,"title":{},"body":{"coverage.html":{}}}],["stringpattern",{"_index":339,"title":{},"body":{"coverage.html":{}}}],["strings",{"_index":398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stringschema",{"_index":245,"title":{},"body":{"coverage.html":{}}}],["stringschemaraw",{"_index":261,"title":{},"body":{"coverage.html":{}}}],["super('requried",{"_index":176,"title":{},"body":{"classes/RequiredError.html":{}}}],["super(accessdeniederror.message",{"_index":26,"title":{},"body":{"classes/AccessDeniedError.html":{}}}],["super(emptyarrayerror.message",{"_index":35,"title":{},"body":{"classes/EmptyArrayError.html":{}}}],["super(emptyobjecterror.message",{"_index":40,"title":{},"body":{"classes/EmptyObjectError.html":{}}}],["super(invalidinputerror.message",{"_index":47,"title":{},"body":{"classes/InvalidInputError.html":{}}}],["super(invalidpropertytypeerror.message",{"_index":54,"title":{},"body":{"classes/InvalidPropertyTypeError.html":{}}}],["super(invalidschemaerror.message",{"_index":59,"title":{},"body":{"classes/InvalidSchemaError.html":{}}}],["super(itemnotfounderror.message",{"_index":66,"title":{},"body":{"classes/ItemNotFoundError.html":{}}}],["super(keynotfounderror.message",{"_index":72,"title":{},"body":{"classes/KeyNotFoundError.html":{}}}],["super(missingpropertyerror.message",{"_index":149,"title":{},"body":{"classes/MissingPropertyError.html":{}}}],["super(notabsolutepatherror.message",{"_index":156,"title":{},"body":{"classes/NotAbsolutePathError.html":{}}}],["super(notfileerror.message",{"_index":160,"title":{},"body":{"classes/NotFileError.html":{}}}],["super(notimplementederror.message",{"_index":165,"title":{},"body":{"classes/NotImplementedError.html":{}}}],["super(numbernotinrangeerror.message",{"_index":172,"title":{},"body":{"classes/NumberNotInRangeError.html":{}}}],["swc/helpers",{"_index":353,"title":{},"body":{"dependencies.html":{}}}],["t",{"_index":181,"title":{},"body":{"interfaces/Type.html":{},"miscellaneous/functions.html":{}}}],["table",{"_index":350,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":349,"title":{},"body":{"coverage.html":{}}}],["taxrate",{"_index":326,"title":{},"body":{"coverage.html":{}}}],["timestamp",{"_index":127,"title":{},"body":{"interfaces/Logger.html":{}}}],["title",{"_index":96,"title":{},"body":{"interfaces/Logger.html":{}}}],["tostring",{"_index":83,"title":{},"body":{"interfaces/Logger.html":{},"coverage.html":{}}}],["transform",{"_index":292,"title":{},"body":{"coverage.html":{}}}],["type",{"_index":18,"title":{"interfaces/Type.html":{}},"body":{"classes/AccessDeniedError.html":{},"classes/EmptyArrayError.html":{},"classes/EmptyObjectError.html":{},"classes/InvalidInputError.html":{},"classes/InvalidPropertyTypeError.html":{},"classes/InvalidSchemaError.html":{},"classes/ItemNotFoundError.html":{},"classes/KeyNotFoundError.html":{},"interfaces/Logger.html":{},"classes/MissingPropertyError.html":{},"classes/NotAbsolutePathError.html":{},"classes/NotFileError.html":{},"classes/NotImplementedError.html":{},"classes/NumberNotInRangeError.html":{},"interfaces/Type.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["type.error.ts",{"_index":50,"title":{},"body":{"classes/InvalidPropertyTypeError.html":{},"coverage.html":{}}}],["type.error.ts:2",{"_index":53,"title":{},"body":{"classes/InvalidPropertyTypeError.html":{}}}],["type.error.ts:3",{"_index":51,"title":{},"body":{"classes/InvalidPropertyTypeError.html":{}}}],["type.ts",{"_index":210,"title":{},"body":{"coverage.html":{}}}],["types",{"_index":373,"title":{},"body":{"index.html":{},"properties.html":{}}}],["uipropertyoptions",{"_index":293,"title":{},"body":{"coverage.html":{}}}],["unique",{"_index":394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["used",{"_index":396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userid",{"_index":131,"title":{},"body":{"interfaces/Logger.html":{}}}],["utilized",{"_index":374,"title":{},"body":{"index.html":{},"properties.html":{}}}],["validation",{"_index":294,"title":{},"body":{"coverage.html":{}}}],["value",{"_index":22,"title":{},"body":{"classes/AccessDeniedError.html":{},"classes/EmptyArrayError.html":{},"classes/EmptyObjectError.html":{},"classes/InvalidInputError.html":{},"classes/InvalidPropertyTypeError.html":{},"classes/InvalidSchemaError.html":{},"classes/ItemNotFoundError.html":{},"classes/KeyNotFoundError.html":{},"classes/MissingPropertyError.html":{},"classes/NotAbsolutePathError.html":{},"classes/NotFileError.html":{},"classes/NotImplementedError.html":{},"classes/NumberNotInRangeError.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["valuetype",{"_index":213,"title":{},"body":{"coverage.html":{}}}],["variable",{"_index":224,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":392,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":221,"title":{},"body":{"coverage.html":{},"properties.html":{}}}],["versionextension",{"_index":222,"title":{},"body":{"coverage.html":{}}}],["void",{"_index":89,"title":{},"body":{"interfaces/Logger.html":{}}}],["warn",{"_index":81,"title":{},"body":{"interfaces/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["warn(message",{"_index":117,"title":{},"body":{"interfaces/Logger.html":{}}}],["warn(title",{"_index":120,"title":{},"body":{"interfaces/Logger.html":{}}}],["weekday",{"_index":327,"title":{},"body":{"coverage.html":{}}}],["whiteball",{"_index":328,"title":{},"body":{"coverage.html":{}}}],["yes",{"_index":93,"title":{},"body":{"interfaces/Logger.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AccessDeniedError.html":{"url":"classes/AccessDeniedError.html","title":"class - AccessDeniedError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccessDeniedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/errors/access-denied.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/errors/access-denied.error.ts:2\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Access Denied'\n                    \n                \n                    \n                        \n                                Defined in src/lib/errors/access-denied.error.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AccessDeniedError extends Error {\n  static readonly message = 'Access Denied';\n  constructor() {\n    super(AccessDeniedError.message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmptyArrayError.html":{"url":"classes/EmptyArrayError.html","title":"class - EmptyArrayError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmptyArrayError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/errors/empty-array.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/errors/empty-array.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Array is empty'\n                    \n                \n                    \n                        \n                                Defined in src/lib/errors/empty-array.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class EmptyArrayError extends Error {\n  static readonly message = 'Array is empty';\n  constructor() {\n    super(EmptyArrayError.message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmptyObjectError.html":{"url":"classes/EmptyObjectError.html","title":"class - EmptyObjectError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmptyObjectError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/errors/empty-object.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/errors/empty-object.error.ts:2\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Object is empty'\n                    \n                \n                    \n                        \n                                Defined in src/lib/errors/empty-object.error.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class EmptyObjectError extends Error {\n  static readonly message = 'Object is empty';\n  constructor() {\n    super(EmptyObjectError.message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidInputError.html":{"url":"classes/InvalidInputError.html","title":"class - InvalidInputError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidInputError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/errors/invalid-input.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/errors/invalid-input.error.ts:2\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Invalid input'\n                    \n                \n                    \n                        \n                                Defined in src/lib/errors/invalid-input.error.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class InvalidInputError extends Error {\n  static readonly message = 'Invalid input';\n  constructor() {\n    super(InvalidInputError.message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidPropertyTypeError.html":{"url":"classes/InvalidPropertyTypeError.html","title":"class - InvalidPropertyTypeError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidPropertyTypeError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/errors/invalid-property-type.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/errors/invalid-property-type.error.ts:3\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Invalid property type error (string,number,boolean,object,date,array'\n                    \n                \n                    \n                        \n                                Defined in src/lib/errors/invalid-property-type.error.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class InvalidPropertyTypeError extends Error {\n  static readonly message =\n    'Invalid property type error (string,number,boolean,object,date,array';\n  constructor() {\n    super(InvalidPropertyTypeError.message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidSchemaError.html":{"url":"classes/InvalidSchemaError.html","title":"class - InvalidSchemaError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidSchemaError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/errors/invalid-schema.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/errors/invalid-schema.error.ts:2\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Invalid schema'\n                    \n                \n                    \n                        \n                                Defined in src/lib/errors/invalid-schema.error.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class InvalidSchemaError extends Error {\n  static readonly message = 'Invalid schema';\n  constructor() {\n    super(InvalidSchemaError.message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ItemNotFoundError.html":{"url":"classes/ItemNotFoundError.html","title":"class - ItemNotFoundError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ItemNotFoundError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/errors/item-not-found.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/errors/item-not-found.error.ts:2\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'The item not found'\n                    \n                \n                    \n                        \n                                Defined in src/lib/errors/item-not-found.error.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ItemNotFoundError extends Error {\n  static readonly message = 'The item not found';\n  constructor() {\n    super(ItemNotFoundError.message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/KeyNotFoundError.html":{"url":"classes/KeyNotFoundError.html","title":"class - KeyNotFoundError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  KeyNotFoundError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/errors/key-not-found.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/errors/key-not-found.error.ts:2\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Key does not exist in the map'\n                    \n                \n                    \n                        \n                                Defined in src/lib/errors/key-not-found.error.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class KeyNotFoundError extends Error {\n  static readonly message = 'Key does not exist in the map';\n  constructor() {\n    super(KeyNotFoundError.message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Logger.html":{"url":"interfaces/Logger.html","title":"interface - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/logger.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        debug\n                                    \n                                \n                                \n                                    \n                                        debug\n                                    \n                                \n                                \n                                    \n                                        debug\n                                    \n                                \n                                \n                                    \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error\n                                    \n                                \n                                \n                                    \n                                        fatal\n                                    \n                                \n                                \n                                    \n                                        fatal\n                                    \n                                \n                                \n                                    \n                                        fatal\n                                    \n                                \n                                \n                                    \n                                        info\n                                    \n                                \n                                \n                                    \n                                        info\n                                    \n                                \n                                \n                                    \n                                        info\n                                    \n                                \n                                \n                                    \n                                        log\n                                    \n                                \n                                \n                                    \n                                        log\n                                    \n                                \n                                \n                                    \n                                        log\n                                    \n                                \n                                \n                                    \n                                        warn\n                                    \n                                \n                                \n                                    \n                                        warn\n                                    \n                                \n                                \n                                    \n                                        warn\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(message: ToString)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/interfaces/logger.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            ToString\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(message: ToString, data?: ObjectLiteral)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/interfaces/logger.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            ToString\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            ObjectLiteral\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(title: ToString, message?: ToString, data?: ObjectLiteral)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/interfaces/logger.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                            ToString\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                message\n                                            \n                                                            ToString\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            ObjectLiteral\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: ToString)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/interfaces/logger.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            ToString\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: ToString, data?: ObjectLiteral)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/interfaces/logger.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            ToString\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            ObjectLiteral\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(title: ToString, message?: ToString, data?: ObjectLiteral)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/interfaces/logger.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                            ToString\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                message\n                                            \n                                                            ToString\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            ObjectLiteral\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fatal\n                        \n                    \n                \n            \n            \n                \nfatal(message: ToString)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/interfaces/logger.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            ToString\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fatal\n                        \n                    \n                \n            \n            \n                \nfatal(message: ToString, data?: ObjectLiteral)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/interfaces/logger.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            ToString\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            ObjectLiteral\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fatal\n                        \n                    \n                \n            \n            \n                \nfatal(title: ToString, message?: ToString, data?: ObjectLiteral)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/interfaces/logger.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                            ToString\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                message\n                                            \n                                                            ToString\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            ObjectLiteral\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        info\n                        \n                    \n                \n            \n            \n                \ninfo(message: ToString)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/interfaces/logger.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            ToString\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        info\n                        \n                    \n                \n            \n            \n                \ninfo(message: ToString, data?: ObjectLiteral)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/interfaces/logger.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            ToString\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            ObjectLiteral\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        info\n                        \n                    \n                \n            \n            \n                \ninfo(title: ToString, message?: ToString, data?: ObjectLiteral)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/interfaces/logger.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                            ToString\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                message\n                                            \n                                                            ToString\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            ObjectLiteral\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message: ToString)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/interfaces/logger.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            ToString\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message: ToString, data?: ObjectLiteral)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/interfaces/logger.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            ToString\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            ObjectLiteral\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(title: ToString, message?: ToString, data?: ObjectLiteral)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/interfaces/logger.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                            ToString\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                message\n                                            \n                                                            ToString\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            ObjectLiteral\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(message: ToString)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/interfaces/logger.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            ToString\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(message: ToString, data?: ObjectLiteral)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/interfaces/logger.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            ToString\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            ObjectLiteral\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(title: ToString, message?: ToString, data?: ObjectLiteral)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/interfaces/logger.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                            ToString\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                message\n                                            \n                                                            ToString\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            ObjectLiteral\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ObjectLiteral } from '../common';\nimport { ToString } from '../object';\nimport { IP } from '../string';\n\nexport type Log = {\n  appname?: string;\n  context?: string;\n  message?: ToString;\n  timestamp?: Date;\n  level?: LogLevel;\n  userId?: string;\n  requestId?: number;\n  data?: ObjectLiteral;\n  ip?: IP;\n};\n\n/**\n * Configure the behaviour of logger\n *\n *````markdown\n * |------------------------------------------|\n * | Name      | Display Only                 |\n * |-----------|------------------------------|\n * | LOG       | ALL                          |\n * | INFO      | INFO, WARN, ERROR, FATAL     |\n * | WARN      | WARN, ERROR, FATAL           |\n * | ERROR     | ERROR, FATA                  |\n * | FATAL     | FATAL                        |\n * |------------------------------------------|\n *````\n */\nexport enum LogLevel {\n  /**\n   * log everything\n   */\n  LOG = 0,\n\n  /**\n   * log everthing but log\n   */\n  INFO,\n\n  /**\n   * log everything excluding log, info\n   */\n  WARN,\n\n  /**\n   * Log error and fatal\n   */\n  ERROR,\n\n  /**\n   * log fatal only\n   */\n  FATAL,\n\n  /**\n   * only debug\n   */\n  DEBUG,\n}\n\nexport interface Logger {\n  log(message: ToString): void;\n  log(message: ToString, data?: ObjectLiteral): void;\n  log(title: ToString, message?: ToString, data?: ObjectLiteral): void;\n\n  error(message: ToString): void;\n  error(message: ToString, data?: ObjectLiteral): void;\n  error(title: ToString, message?: ToString, data?: ObjectLiteral): void;\n\n  info(message: ToString): void;\n  info(message: ToString, data?: ObjectLiteral): void;\n  info(title: ToString, message?: ToString, data?: ObjectLiteral): void;\n\n  warn(message: ToString): void;\n  warn(message: ToString, data?: ObjectLiteral): void;\n  warn(title: ToString, message?: ToString, data?: ObjectLiteral): void;\n\n  fatal(message: ToString): void;\n  fatal(message: ToString, data?: ObjectLiteral): void;\n  fatal(title: ToString, message?: ToString, data?: ObjectLiteral): void;\n\n  debug(message: ToString): void;\n  debug(message: ToString, data?: ObjectLiteral): void;\n  debug(title: ToString, message?: ToString, data?: ObjectLiteral): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MissingPropertyError.html":{"url":"classes/MissingPropertyError.html","title":"class - MissingPropertyError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MissingPropertyError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/errors/missing-property.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/errors/missing-property.ts:2\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Missing property'\n                    \n                \n                    \n                        \n                                Defined in src/lib/errors/missing-property.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class MissingPropertyError extends Error {\n  static readonly message = 'Missing property';\n  constructor() {\n    super(MissingPropertyError.message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotAbsolutePathError.html":{"url":"classes/NotAbsolutePathError.html","title":"class - NotAbsolutePathError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotAbsolutePathError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/errors/not-absolute-path.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/errors/not-absolute-path.error.ts:2\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Not absolute path'\n                    \n                \n                    \n                        \n                                Defined in src/lib/errors/not-absolute-path.error.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NotAbsolutePathError extends Error {\n  static readonly message = 'Not absolute path';\n  constructor() {\n    super(NotAbsolutePathError.message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotFileError.html":{"url":"classes/NotFileError.html","title":"class - NotFileError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotFileError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/errors/not-file.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/errors/not-file.error.ts:2\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Not file'\n                    \n                \n                    \n                        \n                                Defined in src/lib/errors/not-file.error.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NotFileError extends Error {\n  static readonly message = 'Not file';\n  constructor() {\n    super(NotFileError.message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotImplementedError.html":{"url":"classes/NotImplementedError.html","title":"class - NotImplementedError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotImplementedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/errors/not-implemented.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/errors/not-implemented.ts:2\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Not implemented'\n                    \n                \n                    \n                        \n                                Defined in src/lib/errors/not-implemented.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NotImplementedError extends Error {\n  static readonly message = 'Not implemented';\n  constructor() {\n    super(NotImplementedError.message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NumberNotInRangeError.html":{"url":"classes/NumberNotInRangeError.html","title":"class - NumberNotInRangeError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NumberNotInRangeError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/errors/number-not-in-range.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/errors/number-not-in-range.error.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'The number value is not in the required range'\n                    \n                \n                    \n                        \n                                Defined in src/lib/errors/number-not-in-range.error.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NumberNotInRangeError extends Error {\n  static readonly message = 'The number value is not in the required range';\n\n  constructor() {\n    super(NumberNotInRangeError.message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequiredError.html":{"url":"classes/RequiredError.html","title":"class - RequiredError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequiredError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/errors/required.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/errors/required.error.ts:4\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RequiredError extends Error {\n  constructor() {\n    super('Requried');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Type.html":{"url":"interfaces/Type.html","title":"interface - Type","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Type\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/common/type.ts\n        \n\n\n            \n                Description\n            \n            \n                Class constructor type\n\n            \n\n\n\n\n\n    \n\n\n    \n        export interface Type {\n  new (...args: Args): T;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/lib/common/change.ts\n            \n            type alias\n            Change\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/common/keys.ts\n            \n            type alias\n            Key\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/common/keys.ts\n            \n            type alias\n            Keys\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/common/object-literal.ts\n            \n            type alias\n            ObjectLiteral\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/common/optional.ts\n            \n            type alias\n            Optional\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/common/package-json.ts\n            \n            type alias\n            PackageJSON\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/common/pair.ts\n            \n            type alias\n            Pair\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/common/pick-optional.ts\n            \n            type alias\n            PickOptional\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/common/pick-required.ts\n            \n            type alias\n            PickRequired\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/common/property-option.ts\n            \n            type alias\n            PropertyOption\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/common/property-type.ts\n            \n            type alias\n            PrimitiveValueType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/common/property-type.ts\n            \n            type alias\n            PropertyType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/common/property-type.ts\n            \n            type alias\n            ValueType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/common/schema-config.ts\n            \n            type alias\n            SchemaConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/common/type.ts\n            \n            interface\n            Type\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/common/version.ts\n            \n            type alias\n            MajarVersion\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/common/version.ts\n            \n            type alias\n            MinorVersion\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/common/version.ts\n            \n            type alias\n            PatchVersion\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/common/version.ts\n            \n            type alias\n            Version\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/common/version.ts\n            \n            type alias\n            VersionExtension\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/constant/mark.ts\n            \n            variable\n            $M\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/errors/access-denied.error.ts\n            \n            class\n            AccessDeniedError\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/errors/empty-array.ts\n            \n            class\n            EmptyArrayError\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/errors/empty-object.error.ts\n            \n            class\n            EmptyObjectError\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/errors/invalid-input.error.ts\n            \n            class\n            InvalidInputError\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/errors/invalid-property-type.error.ts\n            \n            class\n            InvalidPropertyTypeError\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/errors/invalid-schema.error.ts\n            \n            class\n            InvalidSchemaError\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/errors/item-not-found.error.ts\n            \n            class\n            ItemNotFoundError\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/errors/key-not-found.error.ts\n            \n            class\n            KeyNotFoundError\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/errors/missing-property.ts\n            \n            class\n            MissingPropertyError\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/errors/not-absolute-path.error.ts\n            \n            class\n            NotAbsolutePathError\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/errors/not-file.error.ts\n            \n            class\n            NotFileError\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/errors/not-implemented.ts\n            \n            class\n            NotImplementedError\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/errors/number-not-in-range.error.ts\n            \n            class\n            NumberNotInRangeError\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/errors/required.error.ts\n            \n            class\n            RequiredError\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/lib/initialize/primitive.ts\n            \n            function\n            arr\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/initialize/primitive.ts\n            \n            function\n            bool\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/initialize/primitive.ts\n            \n            function\n            num\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/initialize/primitive.ts\n            \n            function\n            obj\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/initialize/primitive.ts\n            \n            function\n            str\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/interfaces/logger.ts\n            \n            interface\n            Logger\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                        src/lib/interfaces/logger.ts\n            \n            type alias\n            Log\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/json/json-schema.ts\n            \n            type alias\n            __JSONSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/json/json-schema.ts\n            \n            type alias\n            ArraySchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/json/json-schema.ts\n            \n            type alias\n            BooleanSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/json/json-schema.ts\n            \n            type alias\n            CT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/json/json-schema.ts\n            \n            type alias\n            JSONSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/json/json-schema.ts\n            \n            type alias\n            NumberSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/json/json-schema.ts\n            \n            type alias\n            ObjectSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/json/json-schema.ts\n            \n            type alias\n            StringSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/json/raw/array.ts\n            \n            type alias\n            ArraySchemaRaw\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/json/raw/boolean.ts\n            \n            type alias\n            BooleanSchemaRaw\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/json/raw/common.ts\n            \n            type alias\n            CommonSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/json/raw/extra.ts\n            \n            type alias\n            ExtraSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/json/raw/number.ts\n            \n            type alias\n            NumberSchemaRaw\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/json/raw/object.ts\n            \n            type alias\n            ObjectSchemaRaw\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/json/raw/primitive.ts\n            \n            type alias\n            PrimitiveSchemaRaw\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/json/raw/string.ts\n            \n            type alias\n            StringSchemaRaw\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/json/raw/type.ts\n            \n            type alias\n            JSONSchemaType\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            ArrayOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            BooleanOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            CommonNumberOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            CommonPropertyOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            DateOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            Dto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            Encryption\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            General\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            IconOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            InputTypeOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            IntegerOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            IntergerPropertyOptionsRaw\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            ModelNameOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            ModelOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            NumberFormatOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            NumberOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            ObjectOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            OnDelete\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            OnUpdate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            PropertyNameOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            PropertyOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            PropertyTypeOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            RelationOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            RelationPropertyOptionsRaw\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            RelationType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            StringFormatOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            StringOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            Transform\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            UiPropertyOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/model.schema.ts\n            \n            type alias\n            Validation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/model/property-validation-options.ts\n            \n            type alias\n            PropertyValidationOptions\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/model/relation-column-options.ts\n            \n            type alias\n            RelationColumnOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/num/byte.ts\n            \n            type alias\n            Byte\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/num/byte.ts\n            \n            type alias\n            SByte\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/num/fraction.ts\n            \n            type alias\n            Fraction\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/num/int-range.ts\n            \n            type alias\n            Binary\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/num/int-range.ts\n            \n            type alias\n            BloodPresure\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/num/int-range.ts\n            \n            type alias\n            ClothingSize\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/num/int-range.ts\n            \n            type alias\n            Digit\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/num/int-range.ts\n            \n            type alias\n            Enumerate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/num/int-range.ts\n            \n            type alias\n            GoldenBall\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/num/int-range.ts\n            \n            type alias\n            Hour\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/num/int-range.ts\n            \n            type alias\n            HumanAge\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/num/int-range.ts\n            \n            type alias\n            IntRange\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/num/int-range.ts\n            \n            type alias\n            MegaMillion\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/num/int-range.ts\n            \n            type alias\n            Milisecond\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/num/int-range.ts\n            \n            type alias\n            Minute\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/num/int-range.ts\n            \n            type alias\n            MonthDay\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/num/int-range.ts\n            \n            type alias\n            Percent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/num/int-range.ts\n            \n            type alias\n            Rate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/num/int-range.ts\n            \n            type alias\n            Second\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/num/int-range.ts\n            \n            type alias\n            ShoeSize\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/num/int-range.ts\n            \n            type alias\n            SpeedLimit\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/num/int-range.ts\n            \n            type alias\n            TaxRate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/num/int-range.ts\n            \n            type alias\n            WeekDay\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/num/int-range.ts\n            \n            type alias\n            WhiteBall\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/object/to-string.ts\n            \n            type alias\n            ToString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/pattern/number.pattern.ts\n            \n            type alias\n            NumberPattern\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/pattern/pattern.ts\n            \n            type alias\n            Pattern\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/pattern/reference-pattern.ts\n            \n            type alias\n            ReferencePattern\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/pattern/string.pattern.ts\n            \n            type alias\n            StringPattern\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/lib/string/alphabet.ts\n            \n            type alias\n            Alphabet\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/string/ip.ts\n            \n            type alias\n            IP\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/workflow/mapper.ts\n            \n            type alias\n            AsyncMapper\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/workflow/mapper.ts\n            \n            type alias\n            Mapper\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/workflow/predicate.ts\n            \n            type alias\n            AsyncPredicate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/workflow/predicate.ts\n            \n            type alias\n            Predicate\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @swc/helpers : ~0.5.11\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LogLevel   (src/.../logger.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/interfaces/logger.ts\n    \n        \n            \n                \n                    \n                        \n                        LogLevel\n                    \n                \n                    \n                        \n                            Configure the behaviour of logger\nExample :|------------------------------------------|\n| Name      | Display Only                 |\n|-----------|------------------------------|\n| LOG       | ALL                          |\n| INFO      | INFO, WARN, ERROR, FATAL     |\n| WARN      | WARN, ERROR, FATAL           |\n| ERROR     | ERROR, FATA                  |\n| FATAL     | FATAL                        |\n|------------------------------------------|\n                        \n                    \n                        \n                            \n                                 LOG\n                            \n                        \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                 WARN\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                 FATAL\n                            \n                        \n                        \n                            \n                                 DEBUG\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            arr   (src/.../primitive.ts)\n                        \n                        \n                            bool   (src/.../primitive.ts)\n                        \n                        \n                            num   (src/.../primitive.ts)\n                        \n                        \n                            obj   (src/.../primitive.ts)\n                        \n                        \n                            str   (src/.../primitive.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/initialize/primitive.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        arr\n                        \n                    \n                \n            \n            \n                \narr(defaultValue)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                defaultValue\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bool\n                        \n                    \n                \n            \n            \n                \nbool(defaultValue)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                defaultValue\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        num\n                        \n                    \n                \n            \n            \n                \nnum(defaultValue)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                defaultValue\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    NaN\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        obj\n                        \n                    \n                \n            \n            \n                \nobj(defaultValue: null)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                defaultValue\n                                            \n                                                        null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        str\n                        \n                    \n                \n            \n            \n                \nstr(defaultValue: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                defaultValue\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n@rline/type\n\nAll types and interfaces utilized across the applications\n\nDocumentation\nDetailed documentation Documentation\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    14 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 9.5.2\n        \n            Description : All types and interfaces utilized across the applications\n        \n            Keywords : types, common\n        \n            Homepage : https://rbrightline.github.io/common/type\n        \n            License : MIT\n        \n            Repository : https://github.com/rbrightline/common/tree/main/libs/type\n        \n            Author : Robert Brightline\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            $M   (src/.../mark.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/constant/mark.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        $M\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n\n            \n                \n                    Unique mark used to manage strings\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
