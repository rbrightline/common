var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/Version.html",[0,0.876,1,0.876]],["body/classes/Version.html",[0,0.502,1,1.374,2,1.192,3,1.192,4,1.192,5,0.659,6,0.871,7,1.192,8,1.854,9,0.502,10,1.854,11,3.453,12,2.781,13,1.854,14,1.854,15,1.854,16,1.854,17,3.5,18,3.609,19,3.074,20,2.567,21,1.192,22,1.876,23,0.108,24,1.876,25,1.081,26,1.876,27,1.876,28,1.876,29,2.323,30,1.876,31,0.871,32,1.854,33,3.074,34,1.192,35,1.854,36,1.192,37,1.854,38,1.192,39,1.192,40,1.192,41,1.192,42,3.179,43,3.074,44,2.567,45,1.854,46,1.192,47,2.567,48,2.032,49,1.876,50,1.854,51,2.781,52,1.854,53,1.192,54,1.355,55,1.854,56,1.854,57,1.854,58,0.05,59,0.05]],["title/coverage.html",[60,2.03]],["body/coverage.html",[0,0.614,1,0.614,5,1.196,6,1.066,23,0.106,25,0.91,48,2.778,58,0.058,59,0.058,60,1.066,61,1.458,62,1.458,63,1.458,64,1.196,65,1.196,66,2.821,67,1.066,68,3.801,69,1.458,70,0.807,71,1.066,72,1.066,73,1.066,74,1.882,75,1.579,76,1.066,77,3.041,78,3.041,79,1.066,80,1.066,81,1.066,82,1.066,83,1.066,84,1.066,85,1.066,86,1.066,87,1.066,88,1.066,89,1.066,90,1.066,91,1.066,92,1.066,93,1.066,94,1.066,95,1.066,96,1.066,97,1.066,98,1.066,99,1.882,100,1.882,101,1.066,102,1.066,103,1.066,104,1.579,105,1.066,106,1.066,107,1.066,108,1.066,109,1.066,110,1.066,111,1.579,112,1.066,113,1.066,114,1.066,115,1.066,116,1.066,117,1.458,118,1.458,119,1.458,120,1.458,121,1.458]],["title/dependencies.html",[122,1.294,123,1.817]],["body/dependencies.html",[23,0.102,58,0.093,59,0.093,123,2.157,124,2.951,125,2.951,126,2.951,127,2.951]],["title/miscellaneous/functions.html",[128,0.745,129,1.817]],["body/miscellaneous/functions.html",[5,0.765,9,0.749,22,2.594,23,0.103,24,2.611,25,1.403,26,2.594,27,1.01,28,1.3,30,2.435,31,2.75,49,0.605,54,2.327,58,0.037,59,0.037,64,0.458,65,0.765,67,1.01,70,0.765,71,0.605,72,1.3,73,0.605,74,1.823,75,0.605,76,1.518,79,1.01,80,0.605,81,1.01,82,1.01,83,0.605,84,1.01,85,0.605,86,1.3,87,0.605,88,1.3,89,0.605,90,1.3,91,0.605,92,1.01,93,0.605,94,1.01,95,0.605,96,1.01,97,0.605,98,1.01,99,0.605,100,1.518,101,1.01,102,1.01,103,1.01,104,0.605,105,1.01,106,1.01,107,0.605,108,1.01,109,1.01,110,0.605,111,1.518,112,1.01,113,0.605,114,1.01,115,0.605,116,1.01,128,0.349,129,0.605,130,0.605,131,0.828,132,0.828,133,0.828,134,0.828,135,0.828,136,1.779,137,0.828,138,0.828,139,0.828,140,0.828,141,1.382,142,0.828,143,0.828,144,0.828,145,0.828,146,1.382,147,0.828,148,0.828,149,0.828,150,1.382,151,1.779,152,0.828,153,0.828,154,2.077,155,0.828,156,1.779,157,0.828,158,1.382,159,1.382,160,0.828,161,0.828,162,0.828,163,1.779,164,0.828,165,1.779,166,0.828,167,1.382,168,1.382,169,0.828,170,2.774,171,0.828,172,0.828,173,0.828,174,0.828,175,0.828,176,0.828,177,0.828,178,1.382,179,0.828,180,1.382,181,0.828,182,0.828,183,1.382,184,2.077,185,0.828,186,0.828,187,2.077,188,0.828,189,2.077,190,0.828,191,0.828,192,0.828,193,0.828,194,1.382,195,0.828,196,1.382,197,0.828,198,1.382,199,1.382,200,0.828,201,1.382,202,0.828,203,1.382,204,0.828,205,0.828,206,1.382]],["title/index.html",[9,0.745,207,1.771,208,1.771]],["body/index.html",[23,0.094,58,0.094,59,0.094,209,2.97,210,2.97,211,2.97,212,3.47,213,2.97]],["title/modules.html",[214,2.03]],["body/modules.html",[23,0.096,58,0.096,59,0.096,214,2.24]],["title/overview.html",[215,2.03]],["body/overview.html",[0,1.274,23,0.095,29,2.212,58,0.095,59,0.095,215,2.212]],["title/properties.html",[122,1.294,216,1.817]],["body/properties.html",[1,1.266,23,0.1,58,0.095,59,0.095,216,2.198,217,3.007]],["title/miscellaneous/typealiases.html",[128,0.745,218,2.487]],["body/miscellaneous/typealiases.html",[9,1.212,23,0.092,25,1.212,58,0.092,59,0.092,64,1.594,65,1.886,66,2.105,70,1.886,128,1.212,130,2.105,219,2.88]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"classes/Version.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":48,"title":{},"body":{"classes/Version.html":{},"coverage.html":{}}}],["0/1",{"_index":68,"title":{},"body":{"coverage.html":{}}}],["0].join",{"_index":50,"title":{},"body":{"classes/Version.html":{}}}],["1",{"_index":29,"title":{},"body":{"classes/Version.html":{},"overview.html":{}}}],["1/1",{"_index":78,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":118,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":77,"title":{},"body":{"coverage.html":{}}}],["13.1.0",{"_index":127,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":117,"title":{},"body":{"coverage.html":{}}}],["20.3.2",{"_index":125,"title":{},"body":{"dependencies.html":{}}}],["8.1.1",{"_index":217,"title":{},"body":{"properties.html":{}}}],["__f",{"_index":45,"title":{},"body":{"classes/Version.html":{}}}],["__s",{"_index":52,"title":{},"body":{"classes/Version.html":{}}}],["__t",{"_index":55,"title":{},"body":{"classes/Version.html":{}}}],["__t].join",{"_index":57,"title":{},"body":{"classes/Version.html":{}}}],["alias",{"_index":69,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":219,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allows",{"_index":176,"title":{},"body":{"miscellaneous/functions.html":{}}}],["arr",{"_index":163,"title":{},"body":{"miscellaneous/functions.html":{}}}],["array",{"_index":199,"title":{},"body":{"miscellaneous/functions.html":{}}}],["array.ts",{"_index":81,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["asyncfilter",{"_index":67,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["asyncfilter(items",{"_index":149,"title":{},"body":{"miscellaneous/functions.html":{}}}],["asyncpredicate",{"_index":70,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["beta",{"_index":12,"title":{},"body":{"classes/Version.html":{}}}],["beta(version",{"_index":16,"title":{},"body":{"classes/Version.html":{}}}],["brighline",{"_index":209,"title":{},"body":{"index.html":{}}}],["callback",{"_index":150,"title":{},"body":{"miscellaneous/functions.html":{}}}],["change",{"_index":161,"title":{},"body":{"miscellaneous/functions.html":{}}}],["class",{"_index":0,"title":{"classes/Version.html":{}},"body":{"classes/Version.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/Version.html":{}}}],["clone",{"_index":86,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["clone(value",{"_index":152,"title":{},"body":{"miscellaneous/functions.html":{}}}],["commander",{"_index":126,"title":{},"body":{"dependencies.html":{}}}],["common",{"_index":213,"title":{},"body":{"index.html":{}}}],["comon",{"_index":211,"title":{},"body":{"index.html":{}}}],["concat",{"_index":96,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["concat(...string",{"_index":155,"title":{},"body":{"miscellaneous/functions.html":{}}}],["const",{"_index":42,"title":{},"body":{"classes/Version.html":{}}}],["content",{"_index":170,"title":{},"body":{"miscellaneous/functions.html":{}}}],["coverage",{"_index":60,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["current",{"_index":158,"title":{},"body":{"miscellaneous/functions.html":{}}}],["deep",{"_index":153,"title":{},"body":{"miscellaneous/functions.html":{}}}],["default",{"_index":27,"title":{},"body":{"classes/Version.html":{},"miscellaneous/functions.html":{}}}],["defined",{"_index":20,"title":{},"body":{"classes/Version.html":{}}}],["delimeter",{"_index":159,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dependencies",{"_index":123,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":7,"title":{},"body":{"classes/Version.html":{}}}],["diff",{"_index":98,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["diff(previous",{"_index":157,"title":{},"body":{"miscellaneous/functions.html":{}}}],["documentation",{"_index":61,"title":{},"body":{"coverage.html":{}}}],["editor",{"_index":8,"title":{},"body":{"classes/Version.html":{}}}],["export",{"_index":41,"title":{},"body":{"classes/Version.html":{}}}],["f",{"_index":43,"title":{},"body":{"classes/Version.html":{}}}],["false",{"_index":171,"title":{},"body":{"miscellaneous/functions.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/Version.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["filter.ts",{"_index":65,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["find",{"_index":168,"title":{},"body":{"miscellaneous/functions.html":{}}}],["first",{"_index":72,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["first(arr",{"_index":162,"title":{},"body":{"miscellaneous/functions.html":{}}}],["function",{"_index":66,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":129,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["getlastsegment",{"_index":112,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getlastsegment(path",{"_index":164,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getmarkedcontent",{"_index":101,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getmarkedcontent(content",{"_index":166,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getting",{"_index":207,"title":{"index.html":{}},"body":{}}],["identifier",{"_index":62,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":39,"title":{},"body":{"classes/Version.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"classes/Version.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Version.html":{}}}],["items",{"_index":151,"title":{},"body":{"miscellaneous/functions.html":{}}}],["k",{"_index":201,"title":{},"body":{"miscellaneous/functions.html":{}}}],["keys",{"_index":187,"title":{},"body":{"miscellaneous/functions.html":{}}}],["last",{"_index":74,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["last(arr",{"_index":181,"title":{},"body":{"miscellaneous/functions.html":{}}}],["lastsegment",{"_index":194,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../async",{"_index":130,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["libs/.../clone.ts",{"_index":131,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../concat.ts",{"_index":132,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../diff.ts",{"_index":133,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../first.ts",{"_index":134,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../get",{"_index":135,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../last.ts",{"_index":137,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../mark",{"_index":136,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../max.ts",{"_index":138,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../min.ts",{"_index":139,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../omit.ts",{"_index":140,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../pad.ts",{"_index":141,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../pick.ts",{"_index":142,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../segments.ts",{"_index":143,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../set",{"_index":144,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../suffix",{"_index":145,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../unique.ts",{"_index":146,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../update",{"_index":147,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../zip.ts",{"_index":148,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/utils/src/lib/array/async",{"_index":64,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["libs/utils/src/lib/array/first.ts",{"_index":71,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/utils/src/lib/array/last.ts",{"_index":73,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/utils/src/lib/array/unique.ts",{"_index":75,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/utils/src/lib/array/update",{"_index":80,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/utils/src/lib/array/zip.ts",{"_index":83,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/utils/src/lib/data/clone.ts",{"_index":85,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/utils/src/lib/data/omit.ts",{"_index":87,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/utils/src/lib/data/pick.ts",{"_index":89,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/utils/src/lib/number/max.ts",{"_index":91,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/utils/src/lib/number/min.ts",{"_index":93,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/utils/src/lib/string/concat.ts",{"_index":95,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/utils/src/lib/string/diff.ts",{"_index":97,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/utils/src/lib/string/mark",{"_index":99,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/utils/src/lib/string/pad.ts",{"_index":104,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/utils/src/lib/string/suffix",{"_index":107,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/utils/src/lib/url/get",{"_index":110,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/utils/src/lib/url/segments.ts",{"_index":113,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/utils/src/lib/url/set",{"_index":115,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/utils/src/lib/version/version.ts",{"_index":6,"title":{},"body":{"classes/Version.html":{},"coverage.html":{}}}],["libs/utils/src/lib/version/version.ts:11",{"_index":34,"title":{},"body":{"classes/Version.html":{}}}],["libs/utils/src/lib/version/version.ts:17",{"_index":36,"title":{},"body":{"classes/Version.html":{}}}],["libs/utils/src/lib/version/version.ts:23",{"_index":38,"title":{},"body":{"classes/Version.html":{}}}],["libs/utils/src/lib/version/version.ts:29",{"_index":21,"title":{},"body":{"classes/Version.html":{}}}],["major",{"_index":13,"title":{},"body":{"classes/Version.html":{}}}],["major(version",{"_index":32,"title":{},"body":{"classes/Version.html":{}}}],["make",{"_index":198,"title":{},"body":{"miscellaneous/functions.html":{}}}],["markcontent",{"_index":102,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["markcontent(text",{"_index":172,"title":{},"body":{"miscellaneous/functions.html":{}}}],["marked",{"_index":169,"title":{},"body":{"miscellaneous/functions.html":{}}}],["marker",{"_index":174,"title":{},"body":{"miscellaneous/functions.html":{}}}],["matching",{"_index":59,"title":{},"body":{"classes/Version.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["max",{"_index":92,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["max(...nums",{"_index":182,"title":{},"body":{"miscellaneous/functions.html":{}}}],["methods",{"_index":10,"title":{},"body":{"classes/Version.html":{}}}],["min",{"_index":94,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["min(...nums",{"_index":185,"title":{},"body":{"miscellaneous/functions.html":{}}}],["minor",{"_index":14,"title":{},"body":{"classes/Version.html":{}}}],["minor(version",{"_index":35,"title":{},"body":{"classes/Version.html":{}}}],["miscellaneous",{"_index":128,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["modules",{"_index":214,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["name",{"_index":24,"title":{},"body":{"classes/Version.html":{},"miscellaneous/functions.html":{}}}],["name.ts",{"_index":108,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["new",{"_index":119,"title":{},"body":{"coverage.html":{}}}],["newvalue",{"_index":203,"title":{},"body":{"miscellaneous/functions.html":{}}}],["number",{"_index":184,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nums",{"_index":183,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nx/devkit",{"_index":124,"title":{},"body":{"dependencies.html":{}}}],["object",{"_index":154,"title":{},"body":{"miscellaneous/functions.html":{}}}],["omit",{"_index":88,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["omit(object",{"_index":186,"title":{},"body":{"miscellaneous/functions.html":{}}}],["optional",{"_index":26,"title":{},"body":{"classes/Version.html":{},"miscellaneous/functions.html":{}}}],["overview",{"_index":215,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":122,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["packages",{"_index":212,"title":{},"body":{"index.html":{}}}],["pad",{"_index":189,"title":{},"body":{"miscellaneous/functions.html":{}}}],["padend",{"_index":105,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["padend(content",{"_index":188,"title":{},"body":{"miscellaneous/functions.html":{}}}],["padstart",{"_index":106,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["padstart(content",{"_index":190,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parameters",{"_index":22,"title":{},"body":{"classes/Version.html":{},"miscellaneous/functions.html":{}}}],["parseint(f.split",{"_index":46,"title":{},"body":{"classes/Version.html":{}}}],["parseint(s.split",{"_index":53,"title":{},"body":{"classes/Version.html":{}}}],["parseint(t.split",{"_index":56,"title":{},"body":{"classes/Version.html":{}}}],["patch",{"_index":15,"title":{},"body":{"classes/Version.html":{}}}],["patch(version",{"_index":37,"title":{},"body":{"classes/Version.html":{}}}],["patchversion",{"_index":19,"title":{},"body":{"classes/Version.html":{}}}],["path",{"_index":165,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pick",{"_index":90,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["pick(object",{"_index":191,"title":{},"body":{"miscellaneous/functions.html":{}}}],["previous",{"_index":160,"title":{},"body":{"miscellaneous/functions.html":{}}}],["properties",{"_index":216,"title":{"properties.html":{}},"body":{"properties.html":{}}}],["quickly",{"_index":177,"title":{},"body":{"miscellaneous/functions.html":{}}}],["raw",{"_index":167,"title":{},"body":{"miscellaneous/functions.html":{}}}],["replacemarkedcontentwith",{"_index":103,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["replacemarkedcontentwith(content",{"_index":179,"title":{},"body":{"miscellaneous/functions.html":{}}}],["replacements",{"_index":180,"title":{},"body":{"miscellaneous/functions.html":{}}}],["results",{"_index":58,"title":{},"body":{"classes/Version.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":49,"title":{},"body":{"classes/Version.html":{},"miscellaneous/functions.html":{}}}],["returns",{"_index":30,"title":{},"body":{"classes/Version.html":{},"miscellaneous/functions.html":{}}}],["rline/type",{"_index":40,"title":{},"body":{"classes/Version.html":{}}}],["s",{"_index":51,"title":{},"body":{"classes/Version.html":{}}}],["second",{"_index":206,"title":{},"body":{"miscellaneous/functions.html":{}}}],["segment.ts",{"_index":111,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["segments",{"_index":114,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["segments(path",{"_index":192,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setlastsegment",{"_index":116,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setlastsegment(path",{"_index":193,"title":{},"body":{"miscellaneous/functions.html":{}}}],["shift",{"_index":47,"title":{},"body":{"classes/Version.html":{}}}],["software",{"_index":210,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/Version.html":{}}}],["started",{"_index":208,"title":{"index.html":{}},"body":{}}],["statements",{"_index":63,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":11,"title":{},"body":{"classes/Version.html":{}}}],["string",{"_index":31,"title":{},"body":{"classes/Version.html":{},"miscellaneous/functions.html":{}}}],["string.ts",{"_index":100,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["such",{"_index":175,"title":{},"body":{"miscellaneous/functions.html":{}}}],["suffix",{"_index":196,"title":{},"body":{"miscellaneous/functions.html":{}}}],["suffixfilename",{"_index":109,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["suffixfilename(name",{"_index":195,"title":{},"body":{"miscellaneous/functions.html":{}}}],["t",{"_index":54,"title":{},"body":{"classes/Version.html":{},"miscellaneous/functions.html":{}}}],["table",{"_index":121,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":120,"title":{},"body":{"coverage.html":{}}}],["text",{"_index":178,"title":{},"body":{"miscellaneous/functions.html":{}}}],["type",{"_index":25,"title":{},"body":{"classes/Version.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":218,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["undefined",{"_index":156,"title":{},"body":{"miscellaneous/functions.html":{}}}],["unique",{"_index":76,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["unique(items",{"_index":197,"title":{},"body":{"miscellaneous/functions.html":{}}}],["uniqueby",{"_index":79,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["uniqueby(items",{"_index":200,"title":{},"body":{"miscellaneous/functions.html":{}}}],["up",{"_index":18,"title":{},"body":{"classes/Version.html":{}}}],["updatearray",{"_index":82,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["updatearray(arr",{"_index":202,"title":{},"body":{"miscellaneous/functions.html":{}}}],["value",{"_index":28,"title":{},"body":{"classes/Version.html":{},"miscellaneous/functions.html":{}}}],["version",{"_index":1,"title":{"classes/Version.html":{}},"body":{"classes/Version.html":{},"coverage.html":{},"properties.html":{}}}],["version.split",{"_index":44,"title":{},"body":{"classes/Version.html":{}}}],["versionnumber",{"_index":33,"title":{},"body":{"classes/Version.html":{}}}],["versiontype",{"_index":17,"title":{},"body":{"classes/Version.html":{}}}],["void",{"_index":204,"title":{},"body":{"miscellaneous/functions.html":{}}}],["wrap",{"_index":173,"title":{},"body":{"miscellaneous/functions.html":{}}}],["zip",{"_index":84,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["zip(first",{"_index":205,"title":{},"body":{"miscellaneous/functions.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Version.html":{"url":"classes/Version.html","title":"class - Version","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Version\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/utils/src/lib/version/version.ts\n        \n\n\n            \n                Description\n            \n            \n                Version editor\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                beta\n                            \n                            \n                                    Static\n                                major\n                            \n                            \n                                    Static\n                                minor\n                            \n                            \n                                    Static\n                                patch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        beta\n                        \n                    \n                \n            \n            \n                \n                        \n                    beta(version: VersionType, up: PatchVersion)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/utils/src/lib/version/version.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                version\n                                            \n                                                            VersionType\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                up\n                                            \n                                                            PatchVersion\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    '1-beta'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        major\n                        \n                    \n                \n            \n            \n                \n                        \n                    major(version: VersionType, up: VersionNumber)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/utils/src/lib/version/version.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                version\n                                            \n                                                            VersionType\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                up\n                                            \n                                                            VersionNumber\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        minor\n                        \n                    \n                \n            \n            \n                \n                        \n                    minor(version: VersionType, up: VersionNumber)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/utils/src/lib/version/version.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                version\n                                            \n                                                            VersionType\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                up\n                                            \n                                                            VersionNumber\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        patch\n                        \n                    \n                \n            \n            \n                \n                        \n                    patch(version: VersionType, up: PatchVersion)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/utils/src/lib/version/version.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                version\n                                            \n                                                            VersionType\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                up\n                                            \n                                                            PatchVersion\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  PatchVersion,\n  VersionNumber,\n  Version as VersionType,\n} from '@rline/type';\n\n/**\n * Version editor\n */\nexport class Version {\n  static major(version: VersionType, up: VersionNumber = 1) {\n    const [f] = version.split('.');\n    const __f = parseInt(f.split('-').shift() ?? '0') + up;\n    return [__f, 0, 0].join('.');\n  }\n\n  static minor(version: VersionType, up: VersionNumber = 1) {\n    const [f, s] = version.split('.');\n    const __s = parseInt(s.split('-').shift() ?? '0') + up;\n    return [f, __s, 0].join('.');\n  }\n\n  static patch(version: VersionType, up: PatchVersion = 1) {\n    const [f, s, t] = version.split('.');\n    const __t = parseInt(t.split('-').shift() || '0') + '' + up;\n    return [f, s, __t].join('.');\n  }\n\n  static beta(version: VersionType, up: PatchVersion = '1-beta') {\n    const [f, s, t] = version.split('.');\n    const __t = parseInt(t.split('-').shift() ?? '0') + '' + up;\n    return [f, s, __t].join('.') + '-beta';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        libs/utils/src/lib/array/async-filter.ts\n            \n            function\n            asyncFilter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/utils/src/lib/array/async-filter.ts\n            \n            type alias\n            AsyncPredicate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/utils/src/lib/array/first.ts\n            \n            function\n            first\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/utils/src/lib/array/last.ts\n            \n            function\n            last\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/utils/src/lib/array/unique.ts\n            \n            function\n            unique\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/utils/src/lib/array/unique.ts\n            \n            function\n            uniqueBy\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/utils/src/lib/array/update-array.ts\n            \n            function\n            updateArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/utils/src/lib/array/zip.ts\n            \n            function\n            zip\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/utils/src/lib/data/clone.ts\n            \n            function\n            clone\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/utils/src/lib/data/omit.ts\n            \n            function\n            omit\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/utils/src/lib/data/pick.ts\n            \n            function\n            pick\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/utils/src/lib/number/max.ts\n            \n            function\n            max\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/utils/src/lib/number/min.ts\n            \n            function\n            min\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/utils/src/lib/string/concat.ts\n            \n            function\n            concat\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/utils/src/lib/string/diff.ts\n            \n            function\n            diff\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/utils/src/lib/string/mark-string.ts\n            \n            function\n            getMarkedContent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/utils/src/lib/string/mark-string.ts\n            \n            function\n            markContent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/utils/src/lib/string/mark-string.ts\n            \n            function\n            replaceMarkedContentWith\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/utils/src/lib/string/pad.ts\n            \n            function\n            padEnd\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/utils/src/lib/string/pad.ts\n            \n            function\n            padStart\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/utils/src/lib/string/suffix-file-name.ts\n            \n            function\n            suffixFileName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/utils/src/lib/url/get-last-segment.ts\n            \n            function\n            getLastSegment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/utils/src/lib/url/segments.ts\n            \n            function\n            segments\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/utils/src/lib/url/set-last-segment.ts\n            \n            function\n            setLastSegment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/utils/src/lib/version/version.ts\n            \n            class\n            Version\n            \n                20 %\n                (1/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nx/devkit : 20.3.2\n        \n            commander : ^13.1.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            asyncFilter   (libs/.../async-filter.ts)\n                        \n                        \n                            clone   (libs/.../clone.ts)\n                        \n                        \n                            concat   (libs/.../concat.ts)\n                        \n                        \n                            diff   (libs/.../diff.ts)\n                        \n                        \n                            first   (libs/.../first.ts)\n                        \n                        \n                            getLastSegment   (libs/.../get-last-segment.ts)\n                        \n                        \n                            getMarkedContent   (libs/.../mark-string.ts)\n                        \n                        \n                            last   (libs/.../last.ts)\n                        \n                        \n                            markContent   (libs/.../mark-string.ts)\n                        \n                        \n                            max   (libs/.../max.ts)\n                        \n                        \n                            min   (libs/.../min.ts)\n                        \n                        \n                            omit   (libs/.../omit.ts)\n                        \n                        \n                            padEnd   (libs/.../pad.ts)\n                        \n                        \n                            padStart   (libs/.../pad.ts)\n                        \n                        \n                            pick   (libs/.../pick.ts)\n                        \n                        \n                            replaceMarkedContentWith   (libs/.../mark-string.ts)\n                        \n                        \n                            segments   (libs/.../segments.ts)\n                        \n                        \n                            setLastSegment   (libs/.../set-last-segment.ts)\n                        \n                        \n                            suffixFileName   (libs/.../suffix-file-name.ts)\n                        \n                        \n                            unique   (libs/.../unique.ts)\n                        \n                        \n                            uniqueBy   (libs/.../unique.ts)\n                        \n                        \n                            updateArray   (libs/.../update-array.ts)\n                        \n                        \n                            zip   (libs/.../zip.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/utils/src/lib/array/async-filter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        asyncFilter\n                        \n                    \n                \n            \n            \n                \nasyncFilter(items, callback: AsyncPredicate)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                items\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                callback\n                                            \n                                                            AsyncPredicate\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    libs/utils/src/lib/data/clone.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        clone\n                        \n                    \n                \n            \n            \n                \nclone(value: T)\n                \n            \n\n\n\n\n            \n                \n                        Deep clone object\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    libs/utils/src/lib/string/concat.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        concat\n                        \n                    \n                \n            \n            \n                \nconcat(...string: undefined)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                string\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    libs/utils/src/lib/string/diff.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        diff\n                        \n                    \n                \n            \n            \n                \ndiff(previous: string, current: string, delimeter: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                previous\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                current\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                delimeter\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Change[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    libs/utils/src/lib/array/first.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        first\n                        \n                    \n                \n            \n            \n                \nfirst(arr)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                arr\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    libs/utils/src/lib/url/get-last-segment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getLastSegment\n                        \n                    \n                \n            \n            \n                \ngetLastSegment(path: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    libs/utils/src/lib/string/mark-string.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getMarkedContent\n                        \n                    \n                \n            \n            \n                \ngetMarkedContent(content: string, raw)\n                \n            \n\n\n\n\n            \n                \n                        Find all marked content and return them\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                content\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                raw\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        markContent\n                        \n                    \n                \n            \n            \n                \nmarkContent(text: T)\n                \n            \n\n\n\n\n            \n                \n                        Wrap a content with a marker such as content this allows to quickly find the content in the text\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        replaceMarkedContentWith\n                        \n                    \n                \n            \n            \n                \nreplaceMarkedContentWith(content: string, replacements)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                content\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                replacements\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    libs/utils/src/lib/array/last.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        last\n                        \n                    \n                \n            \n            \n                \nlast(arr)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                arr\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    libs/utils/src/lib/number/max.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        max\n                        \n                    \n                \n            \n            \n                \nmax(...nums: undefined)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                nums\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    libs/utils/src/lib/number/min.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        min\n                        \n                    \n                \n            \n            \n                \nmin(...nums: undefined)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                nums\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    libs/utils/src/lib/data/omit.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        omit\n                        \n                    \n                \n            \n            \n                \nomit(object: T, keys)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                keys\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Omit\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    libs/utils/src/lib/string/pad.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        padEnd\n                        \n                    \n                \n            \n            \n                \npadEnd(content: string, pad: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                content\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pad\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        padStart\n                        \n                    \n                \n            \n            \n                \npadStart(content: string, pad: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                content\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pad\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    libs/utils/src/lib/data/pick.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        pick\n                        \n                    \n                \n            \n            \n                \npick(object: T, keys)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                keys\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Pick\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    libs/utils/src/lib/url/segments.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        segments\n                        \n                    \n                \n            \n            \n                \nsegments(path: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    libs/utils/src/lib/url/set-last-segment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        setLastSegment\n                        \n                    \n                \n            \n            \n                \nsetLastSegment(path: string, lastSegment: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                lastSegment\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    libs/utils/src/lib/string/suffix-file-name.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        suffixFileName\n                        \n                    \n                \n            \n            \n                \nsuffixFileName(name: string, suffix: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                suffix\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    libs/utils/src/lib/array/unique.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        unique\n                        \n                    \n                \n            \n            \n                \nunique(items)\n                \n            \n\n\n\n\n            \n                \n                        Make array unique\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                items\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uniqueBy\n                        \n                    \n                \n            \n            \n                \nuniqueBy(items, by: K)\n                \n            \n\n\n\n\n            \n                \n                        Make object-array unique by\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                items\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                by\n                                            \n                                                        K\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    libs/utils/src/lib/array/update-array.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        updateArray\n                        \n                    \n                \n            \n            \n                \nupdateArray(arr, newValue: T, index: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                arr\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newValue\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    libs/utils/src/lib/array/zip.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        zip\n                        \n                    \n                \n            \n            \n                \nzip(first, second)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                first\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                second\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     []\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nBrighline Software Comon Packages\nCommon packages\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 8.1.1\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AsyncPredicate   (libs/.../async-filter.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/utils/src/lib/array/async-filter.ts\n    \n    \n        \n            \n                \n                    \n                    AsyncPredicate\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
